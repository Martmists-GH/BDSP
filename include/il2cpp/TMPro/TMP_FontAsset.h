#pragma once

#include "il2cpp.h"

System_String_o* TMPro_TMP_FontAsset__get_version (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__set_version (TMPro_TMP_FontAsset_o* __this, System_String_o* value, const MethodInfo* method_info);
UnityEngine_Font_o* TMPro_TMP_FontAsset__get_sourceFontFile (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__set_sourceFontFile (TMPro_TMP_FontAsset_o* __this, UnityEngine_Font_o* value, const MethodInfo* method_info);
int32_t TMPro_TMP_FontAsset__get_atlasPopulationMode (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__set_atlasPopulationMode (TMPro_TMP_FontAsset_o* __this, int32_t value, const MethodInfo* method_info);
UnityEngine_TextCore_FaceInfo_o TMPro_TMP_FontAsset__get_faceInfo (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__set_faceInfo (TMPro_TMP_FontAsset_o* __this, UnityEngine_TextCore_FaceInfo_o value, const MethodInfo* method_info);
System_Collections_Generic_List_Glyph__o* TMPro_TMP_FontAsset__get_glyphTable (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__set_glyphTable (TMPro_TMP_FontAsset_o* __this, System_Collections_Generic_List_Glyph__o* value, const MethodInfo* method_info);
System_Collections_Generic_Dictionary_uint__Glyph__o* TMPro_TMP_FontAsset__get_glyphLookupTable (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
System_Collections_Generic_List_TMP_Character__o* TMPro_TMP_FontAsset__get_characterTable (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__set_characterTable (TMPro_TMP_FontAsset_o* __this, System_Collections_Generic_List_TMP_Character__o* value, const MethodInfo* method_info);
System_Collections_Generic_Dictionary_uint__TMP_Character__o* TMPro_TMP_FontAsset__get_characterLookupTable (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
UnityEngine_Texture2D_o* TMPro_TMP_FontAsset__get_atlasTexture (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
UnityEngine_Texture2D_array* TMPro_TMP_FontAsset__get_atlasTextures (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__set_atlasTextures (TMPro_TMP_FontAsset_o* __this, UnityEngine_Texture2D_array* value, const MethodInfo* method_info);
int32_t TMPro_TMP_FontAsset__get_atlasTextureCount (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
bool TMPro_TMP_FontAsset__get_isMultiAtlasTexturesEnabled (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__set_isMultiAtlasTexturesEnabled (TMPro_TMP_FontAsset_o* __this, bool value, const MethodInfo* method_info);
bool TMPro_TMP_FontAsset__get_clearDynamicDataOnBuild (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__set_clearDynamicDataOnBuild (TMPro_TMP_FontAsset_o* __this, bool value, const MethodInfo* method_info);
System_Collections_Generic_List_GlyphRect__o* TMPro_TMP_FontAsset__get_usedGlyphRects (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__set_usedGlyphRects (TMPro_TMP_FontAsset_o* __this, System_Collections_Generic_List_GlyphRect__o* value, const MethodInfo* method_info);
System_Collections_Generic_List_GlyphRect__o* TMPro_TMP_FontAsset__get_freeGlyphRects (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__set_freeGlyphRects (TMPro_TMP_FontAsset_o* __this, System_Collections_Generic_List_GlyphRect__o* value, const MethodInfo* method_info);
TMPro_FaceInfo_Legacy_o* TMPro_TMP_FontAsset__get_fontInfo (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
int32_t TMPro_TMP_FontAsset__get_atlasWidth (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__set_atlasWidth (TMPro_TMP_FontAsset_o* __this, int32_t value, const MethodInfo* method_info);
int32_t TMPro_TMP_FontAsset__get_atlasHeight (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__set_atlasHeight (TMPro_TMP_FontAsset_o* __this, int32_t value, const MethodInfo* method_info);
int32_t TMPro_TMP_FontAsset__get_atlasPadding (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__set_atlasPadding (TMPro_TMP_FontAsset_o* __this, int32_t value, const MethodInfo* method_info);
int32_t TMPro_TMP_FontAsset__get_atlasRenderMode (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__set_atlasRenderMode (TMPro_TMP_FontAsset_o* __this, int32_t value, const MethodInfo* method_info);
TMPro_TMP_FontFeatureTable_o* TMPro_TMP_FontAsset__get_fontFeatureTable (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__set_fontFeatureTable (TMPro_TMP_FontAsset_o* __this, TMPro_TMP_FontFeatureTable_o* value, const MethodInfo* method_info);
System_Collections_Generic_List_TMP_FontAsset__o* TMPro_TMP_FontAsset__get_fallbackFontAssetTable (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__set_fallbackFontAssetTable (TMPro_TMP_FontAsset_o* __this, System_Collections_Generic_List_TMP_FontAsset__o* value, const MethodInfo* method_info);
TMPro_FontAssetCreationSettings_o TMPro_TMP_FontAsset__get_creationSettings (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__set_creationSettings (TMPro_TMP_FontAsset_o* __this, TMPro_FontAssetCreationSettings_o value, const MethodInfo* method_info);
TMPro_TMP_FontWeightPair_array* TMPro_TMP_FontAsset__get_fontWeightTable (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__set_fontWeightTable (TMPro_TMP_FontAsset_o* __this, TMPro_TMP_FontWeightPair_array* value, const MethodInfo* method_info);
TMPro_TMP_FontAsset_o* TMPro_TMP_FontAsset__CreateFontAsset (UnityEngine_Font_o* font, const MethodInfo* method_info);
TMPro_TMP_FontAsset_o* TMPro_TMP_FontAsset__CreateFontAsset (UnityEngine_Font_o* font, int32_t samplingPointSize, int32_t atlasPadding, int32_t renderMode, int32_t atlasWidth, int32_t atlasHeight, int32_t atlasPopulationMode, bool enableMultiAtlasSupport, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__Awake (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__ReadFontAssetDefinition (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__InitializeDictionaryLookupTables (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__InitializeGlyphLookupDictionary (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__InitializeCharacterLookupDictionary (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__InitializeGlyphPaidAdjustmentRecordsLookupDictionary (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__AddSynthesizedCharactersAndFaceMetrics (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__AddSynthesizedCharacter (TMPro_TMP_FontAsset_o* __this, uint32_t unicode, bool addImmediately, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__AddCharacterToLookupCache (TMPro_TMP_FontAsset_o* __this, uint32_t unicode, TMPro_TMP_Character_o* character, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__SortCharacterTable (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__SortGlyphTable (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__SortFontFeatureTable (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__SortAllTables (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
bool TMPro_TMP_FontAsset__HasCharacter (TMPro_TMP_FontAsset_o* __this, int32_t character, const MethodInfo* method_info);
bool TMPro_TMP_FontAsset__HasCharacter (TMPro_TMP_FontAsset_o* __this, uint16_t character, bool searchFallbacks, bool tryAddCharacter, const MethodInfo* method_info);
bool TMPro_TMP_FontAsset__HasCharacter_Internal (TMPro_TMP_FontAsset_o* __this, uint32_t character, bool searchFallbacks, bool tryAddCharacter, const MethodInfo* method_info);
bool TMPro_TMP_FontAsset__HasCharacters (TMPro_TMP_FontAsset_o* __this, System_String_o* text, System_Collections_Generic_List_char__o** missingCharacters, const MethodInfo* method_info);
bool TMPro_TMP_FontAsset__HasCharacters (TMPro_TMP_FontAsset_o* __this, System_String_o* text, System_UInt32_array** missingCharacters, bool searchFallbacks, bool tryAddCharacter, const MethodInfo* method_info);
bool TMPro_TMP_FontAsset__HasCharacters (TMPro_TMP_FontAsset_o* __this, System_String_o* text, const MethodInfo* method_info);
System_String_o* TMPro_TMP_FontAsset__GetCharacters (TMPro_TMP_FontAsset_o* fontAsset, const MethodInfo* method_info);
System_Int32_array* TMPro_TMP_FontAsset__GetCharactersArray (TMPro_TMP_FontAsset_o* fontAsset, const MethodInfo* method_info);
uint32_t TMPro_TMP_FontAsset__GetGlyphIndex (TMPro_TMP_FontAsset_o* __this, uint32_t unicode, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__RegisterFontAssetForFontFeatureUpdate (TMPro_TMP_FontAsset_o* fontAsset, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__UpdateFontFeaturesForFontAssetsInQueue (const MethodInfo* method_info);
void TMPro_TMP_FontAsset__RegisterFontAssetForAtlasTextureUpdate (TMPro_TMP_FontAsset_o* fontAsset, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__UpdateAtlasTexturesForFontAssetsInQueue (const MethodInfo* method_info);
bool TMPro_TMP_FontAsset__TryAddCharacters (TMPro_TMP_FontAsset_o* __this, System_UInt32_array* unicodes, bool includeFontFeatures, const MethodInfo* method_info);
bool TMPro_TMP_FontAsset__TryAddCharacters (TMPro_TMP_FontAsset_o* __this, System_UInt32_array* unicodes, System_UInt32_array** missingUnicodes, bool includeFontFeatures, const MethodInfo* method_info);
bool TMPro_TMP_FontAsset__TryAddCharacters (TMPro_TMP_FontAsset_o* __this, System_String_o* characters, bool includeFontFeatures, const MethodInfo* method_info);
bool TMPro_TMP_FontAsset__TryAddCharacters (TMPro_TMP_FontAsset_o* __this, System_String_o* characters, System_String_o** missingCharacters, bool includeFontFeatures, const MethodInfo* method_info);
bool TMPro_TMP_FontAsset__TryAddCharacterInternal (TMPro_TMP_FontAsset_o* __this, uint32_t unicode, TMPro_TMP_Character_o** character, const MethodInfo* method_info);
bool TMPro_TMP_FontAsset__TryGetCharacter_and_QueueRenderToTexture (TMPro_TMP_FontAsset_o* __this, uint32_t unicode, TMPro_TMP_Character_o** character, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__TryAddGlyphsToAtlasTextures (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
bool TMPro_TMP_FontAsset__TryAddGlyphsToNewAtlasTexture (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__SetupNewAtlasTexture (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__UpdateAtlasTexture (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__UpdateGlyphAdjustmentRecords (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__UpdateGlyphAdjustmentRecords (TMPro_TMP_FontAsset_o* __this, System_UInt32_array* glyphIndexes, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__UpdateGlyphAdjustmentRecords (TMPro_TMP_FontAsset_o* __this, System_Collections_Generic_List_uint__o* glyphIndexes, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__UpdateGlyphAdjustmentRecords (TMPro_TMP_FontAsset_o* __this, System_Collections_Generic_List_uint__o* newGlyphIndexes, System_Collections_Generic_List_uint__o* allGlyphIndexes, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__CopyListDataToArray_object_ (TMPro_TMP_FontAsset_o* __this, System_Collections_Generic_List_T__o* srcList, System_Object_array** dstArray, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__ClearFontAssetData (TMPro_TMP_FontAsset_o* __this, bool setAtlasSizeToZero, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__ClearFontAssetDataInternal (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__UpdateFontAssetData (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__ClearFontAssetTables (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__ClearAtlasTextures (TMPro_TMP_FontAsset_o* __this, bool setAtlasSizeToZero, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__UpgradeFontAsset (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset__UpgradeGlyphAdjustmentTableToFontFeatureTable (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset___ctor (TMPro_TMP_FontAsset_o* __this, const MethodInfo* method_info);
void TMPro_TMP_FontAsset___cctor (const MethodInfo* method_info);
