#pragma once

#include "il2cpp.h"

Dpr_Battle_Logic_BTL_ACTION_PARAM_o* Dpr_Battle_Logic_BTL_CLIENT__get_m_procAction (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_BTL_CLIENT__get_m_currentActionCount (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__set_m_currentActionCount (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t value, const MethodInfo* method_info);
Dpr_Battle_Logic_BattleViewBase_o* Dpr_Battle_Logic_BTL_CLIENT__get_m_viewCore (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__set_m_viewCore (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BattleViewBase_o* value, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__m_viewCore_CMD_EFFECT_DrawEnableTimer (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t type, bool enable, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT___ctor (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_MainModule_o* mainModule, Dpr_Battle_Logic_BattleEnv_o* pBattleEnv, Dpr_Battle_Logic_Adapter_o* adapter, Dpr_Battle_Logic_SendDataContainer_o* sendDataContainer, Dpr_Battle_Logic_SendDataContainer_o* receiveDataContainer, uint8_t commMode, uint16_t clientID, uint8_t clientType, int32_t bagMode, bool fRecPlayMode, uint64_t randSeed, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__createSimulator (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__createBattleDriver (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__Dispose (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
Dpr_Battle_Logic_POKECON_o* Dpr_Battle_Logic_BTL_CLIENT__getPokeCon (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
Dpr_Battle_Logic_ServerCommandExecutor_o* Dpr_Battle_Logic_BTL_CLIENT__getServerCmdExecutor (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__changeMainProc (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_ClientMainProc_o* proc, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_BTL_CLIENT__getMyCoverPosNum (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__IsWaitingAdapterCommand (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__main_Normal (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__main_ChapterSkip (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__registerReceivedData (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint16_t serialNumber, uint8_t serverSeq, uint8_t serverReq, void** data, uint32_t dataSize, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__returnToServer (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__RecPlayer_Init (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_RECPLAYER_CONTROL_o* ctrl, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__RecPlayer_Setup (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_RECPLAYER_CONTROL_o* ctrl, uint32_t turnCnt, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__RecPlayer_CheckBlackOut (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_RECPLAYER_CONTROL_o* ctrl, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__RecPlayer_TurnIncReq (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_RECPLAYER_CONTROL_o* ctrl, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_BTL_CLIENT__RecPlayer_GetCtrlCode (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_RECPLAYER_CONTROL_o* ctrl, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__RecPlayer_ChapterSkipOn (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_RECPLAYER_CONTROL_o* ctrl, uint32_t nextTurnNum, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__RecPlayer_ChapterSkipOff (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_RECPLAYER_CONTROL_o* ctrl, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__RecPlayer_CheckChapterSkipEnd (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_RECPLAYER_CONTROL_o* ctrl, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_BTL_CLIENT__RecPlayer_GetNextTurn (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_RECPLAYER_CONTROL_o* ctrl, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__RecPlayerCtrl_Lock (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_RECPLAYER_CONTROL_o* ctrl, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__RecPlayerCtrl_Unlock (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_RECPLAYER_CONTROL_o* ctrl, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__RecPlayer_Quit (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_RECPLAYER_CONTROL_o* ctrl, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__RecPlayer_IsActive (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_RECPLAYER_CONTROL_o* ctrl, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__RecPlayerCtrl_Main (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_RECPLAYER_CONTROL_o* ctrl, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__AIItem_Setup (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
uint16_t Dpr_Battle_Logic_BTL_CLIENT__AIItem_CheckUse (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, Dpr_Battle_Logic_BTL_PARTY_o* party, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__check_status_up_item (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint16_t itemID, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__check_cure_sick_item (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint16_t itemID, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__SetRecordPlayerMode (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_rec_Reader_o* recReader, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__NotifyCommError (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
void* Dpr_Battle_Logic_BTL_CLIENT__GetRecordData (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint32_t* size, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__AttachViewCore (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BattleViewBase_o* viewCore, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__AttachCmdCheckServer (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_SERVER_o* server, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__DetachCmdCheckServer (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
Dpr_Battle_Logic_Adapter_o* Dpr_Battle_Logic_BTL_CLIENT__GetAdapter (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
Dpr_Battle_Logic_GameTimer_o* Dpr_Battle_Logic_BTL_CLIENT__GetGameTimer (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_BTL_CLIENT__GetSyncClientTime (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t clientID, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__SetSyncClientTime (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_ServerSendData_CLIENT_LIMIT_TIME_o* time, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__Main (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__NotifyFadeoutStartForRecPlay (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__SetChapterSkip (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint32_t nextTurnNum, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__StopChapterSkip (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__IsRecPlayerMode (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_BTL_CLIENT__GetRecPlayerMaxChapter (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__IsChapterSkipMode (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__setDummyReturnData (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__setSubProc (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t serverReq, bool* fRecCtrlLock, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__callSubProc (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__IsGameTimeOver (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__IsRecPlayBufOver (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_Setup (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_AI_Setup (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_REC_Setup (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__enemyPokeHPBase_Update (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_BTL_CLIENT__enemyPokeHPBase_CheckRatio (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
Dpr_Battle_Logic_BTL_POKEPARAM_o* Dpr_Battle_Logic_BTL_CLIENT__enemyPokeHPBase_GetTargetPoke (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__startGameTimeCountDown (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__cmdLimit_Start (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__cmdLimit_CheckOver (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__checkSelactForceQuit (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_ClientSubProc_o* nextProc, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__cmdLimit_End (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__cmdComm_checkError (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__setupSelectStartStr (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* procPoke, Dpr_Battle_Logic_BTLV_STRPARAM_o* strParam, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__checkFriendshipSpecialMessage (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* procPoke, Dpr_Battle_Logic_BTLV_STRPARAM_o* strParam, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__selActSubProc_Set (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_ClientSubProc_o* proc, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__selActSubProc_Call (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_SelectAction (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__onFirstActionSelectStart (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__needDisplayTipsForG (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__isRandomWaitCameraEnable (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__DecideTrainerMessage_OnSelectAction (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int8_t* clientID, uint8_t* messageID, const MethodInfo* method_info);
int8_t Dpr_Battle_Logic_BTL_CLIENT__DecideTrainerMessage_OnSelectAction_FirstDamage (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__IsTrainerMessageEnable_OnSelectAction_FirstDamage (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t clientID, const MethodInfo* method_info);
int8_t Dpr_Battle_Logic_BTL_CLIENT__DecideTrainerMessage_OnSelectAction_LastPokeHpHalf (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__IsTrainerMessageEnable_OnSelectAction_LastPokeHpHalf (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t clientID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_REC_SelectAction (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__setNullActionRecplay (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__selact_Start (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__selact_startMsg (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTLV_STRPARAM_o* strParam, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__selact_ClearWorks (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__selact_ForceQuit (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__setActionForce (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_ACTION_PARAM_o* pActionParam, Dpr_Battle_Logic_BTL_POKEPARAM_o* poke, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__selact_Root (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__setupSelectActionUIParam (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BattleViewBase_SelectActionParam_o* pViewParam, Dpr_Battle_Logic_BTL_POKEPARAM_o* pActPoke, uint8_t actPokeIdx, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_BTL_CLIENT__calcAddActionCountSum (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t pokeIdx, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__setupCurrentPokeActionPtr (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__selact_root_start (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__incrementAddActionCount (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__decrementAddActionCount (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__selact_root_friendship_msg_wait (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__selact_root_wait_msg_check (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__selact_root_sel_main (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__canStartG (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* pPoke, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__selact_Fight (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__needGButtonDisplay (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* pActPoke, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__selact_SelectChangePokemon (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__selact_Item (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__canSelectItem (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTLV_STRPARAM_o* pCantMessage, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__canUseItem (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTLV_STRPARAM_o* pCantMessage, uint16_t itemno, uint8_t procPokeIdx, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__canUseBall (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTLV_STRPARAM_o* pCantMessage, uint16_t itemno, uint8_t procPokeIdx, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__registerLastSelectedBall (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint32_t itemno, const MethodInfo* method_info);
Dpr_Battle_Logic_BTL_POKEPARAM_o* Dpr_Battle_Logic_BTL_CLIENT__getBallTarget (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__checkBallTargetHide (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__selact_Escape (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__canSelectEscape (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTLV_STRPARAM_o* pCantMessage, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__needEscapeConfirm (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTLV_STRPARAM_o* pConfirmMessage, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__selact_CheckFinish (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__setupSelActReturnData (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__storeActionSelectSendData (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_ACTION_PARAM_array* actionParamArray, uint32_t actionNum, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__storeActionSelectSendData (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_ACTION_PARAM_o* actionParamArray, uint32_t actionNum, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__sendSelectedRaidActionIconID (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__clearSelectedRaidActionIconID (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__selact_Finish (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__selItemWork_Init (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__selItemWork_Reserve (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t pokeIdx, uint16_t itemID, bool bFromPokeSelect, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__selItemWork_IsFromPokeSelect (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t pokeIdx, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__selItemWork_Restore (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t pokeIdx, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__selItemWork_Quit (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__checkActionForceSet (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, Dpr_Battle_Logic_BTL_ACTION_PARAM_o* action, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__IsCheerMode (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__checkWazaForceSet (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, Dpr_Battle_Logic_BTL_ACTION_PARAM_o* action, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__setWaruagakiAction (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_ACTION_PARAM_o* dst, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__is_unselectable_waza (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, int32_t waza, Dpr_Battle_Logic_BTLV_STRPARAM_o* strParam, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__is_unselectable_target (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, int32_t waza, uint8_t targetPos, Dpr_Battle_Logic_BTLV_STRPARAM_o* strParam, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_BTL_CLIENT__storeSelectableWazaFlag (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, bool checkGWaza, System_Boolean_array* dst, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_BTL_CLIENT__isForbidPokeChange (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* procPoke, uint8_t* pokeID, uint16_t* tokuseiID, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_BTL_CLIENT__isForbidEscape (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t* pokeID, uint16_t* tokuseiID, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_BTL_CLIENT__checkForbidChangeEscapeCommon (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* procPoke, uint8_t* pokeID, uint16_t* tokuseiID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__checkForbitEscapeEffective_Kagefumi (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* procPoke, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__checkForbitEscapeEffective_Arijigoku (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* procPoke, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__checkForbitEscapeEffective_Jiryoku (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* procPoke, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__changeAI_InitWork (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__changeAI_CheckReserve (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t pokeIndexWithinParty, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__changeAI_SetReserve (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t outPokeIdx, uint8_t inPokeIdx, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__IsPuttablePokemonExist (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
Dpr_Battle_Logic_BTL_POKEPARAM_o* Dpr_Battle_Logic_BTL_CLIENT__changeAI_SupposeEnemy (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t basePos, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_AI_SelectAction (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_BTL_CLIENT__getAIPokeActNum (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* pPoke, const MethodInfo* method_info);
Dpr_Battle_Logic_BTL_ACTION_PARAM_o Dpr_Battle_Logic_BTL_CLIENT__buildActionParamFromAiResult (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_ACTION_PARAM_o* actionParam, uint8_t actPokeIndex, Dpr_Battle_Logic_BTL_POKEPARAM_o* actPoke, Dpr_Battle_Logic_BTL_PARTY_o* actPokeParty, Dpr_Battle_Logic_BattleAi_Result_o** aiResult, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__buildActionParamFromAiResult_Fight (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_ACTION_PARAM_o* actionParam, Dpr_Battle_Logic_BTL_POKEPARAM_o* actPoke, Dpr_Battle_Logic_BattleAi_Result_o** aiResult, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__buildActionParam_Safari (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_ACTION_PARAM_o* actionParam, uint8_t actPokeIndex, Dpr_Battle_Logic_BTL_POKEPARAM_o* actPoke, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__canStartGForNPC (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* pActPoke, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__decideRaidBossGWazaAction (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_ACTION_PARAM_o* destAction, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_BTL_CLIENT__decideRaidBossGWazaTarget (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__correctRaidBossGWazaTarget_JK3 (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_RaidBoss_SelectTargetParam_o* pSelectParam, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_BTL_CLIENT__decideRaidBossWaza (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* boss, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__isRaidBossGWazaUseTurn (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* boss, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__canRaidBossUseGWazaIfNotG (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* boss, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_BTL_CLIENT__countPuttablePokemons (Dpr_Battle_Logic_BTL_CLIENT_o* __this, System_Byte_array* list, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_BTL_CLIENT__countPuttablePokemons_sub (Dpr_Battle_Logic_BTL_CLIENT_o* __this, System_Byte_array* list, uint8_t numFrontPos, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__sortPuttablePokemonList (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t* list, uint8_t numPoke, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, uint8_t posForCheckEffect, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__changeAI_IsSpecialMons (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__isExistHPRecoverEffect (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t pos, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__setupPokeSelParam (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t numSelect, Dpr_Battle_Logic_PokeSelParam_o* param, Dpr_Battle_Logic_PokeSelResult_o* result, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__storePokeSelResult (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_PokeSelResult_o* res, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__storePokeSelResult_ForceQuit (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_BTL_CLIENT__storeMyChangePokePos (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BtlPokePos_array* myCoverPos, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_SelectChangeOrEscape (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_SelectPokemonForCover (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_SelectPokemonForChange (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_AI_SelectPokemon (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__sortChangePos (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BtlPokePos_array* posAry, uint32_t posCnt, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_REC_SelectPokemon (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__selectPokemonUI_Core (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, bool bForceChangeMode, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_ConfirmIrekae (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_RecordData (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_REC_ExitCommTrainer (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_ExitCommTrainer (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_ExitCommTrainer (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, bool isRecPlayMode, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_BTL_CLIENT__expandServerResult (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* resultCause, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__getVsCommTrainerExitMessage (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTLV_STRPARAM_o* strParam, int32_t battleResult, bool isMultiMode, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__isEnemyClientDouble (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__trainerGraphicIn (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t client_idx, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__msgWinningTrainerStart (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_REC_ExitForNPC (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_ExitForNPC (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_REC_ExitForSubwayTrainer (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_ExitForSubwayTrainer (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_ExitForSubwayTrainer (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, bool isRecPlayMode, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__setupSubwayTrainerMsg (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t result, uint8_t client_idx, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__GetBonusMoneyGettingStr (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTLV_STRPARAM_o* strParam, uint32_t bonus, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__setBonusMoneyGettingStr (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTLV_STRPARAM_o* strParam, uint32_t bonus, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_WinWild (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_LoseWild (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_ForceQuitWild (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_CaptureWild (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_NotifyTimeUp (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__getTimeUpMessage (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint32_t* strID, int32_t* strType, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__getTimeUpMessage_ClientLimitTime (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint32_t* strID, int32_t* strType, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_FadeOut (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_REC_FadeOut (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__isEvolveEnablePokeExsist (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_SendLastDataAgain (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_SendClientLimitTime (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_SyncClientLimitTime (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_RaidBossCapture_Start (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_BTL_CLIENT__getRaidBossCaptureStartSeqNo (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_RaidBossCapture_SelectBall (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_RaidBossCapture_Result (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_LoseRaid (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_REC_ServerCmd (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
Dpr_Battle_Logic_BTL_CLIENT_ServerCmdProc_o* Dpr_Battle_Logic_BTL_CLIENT__dispatchServerCmdProc (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint16_t cmd, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_UI_ServerCmd (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__SubProc_AI_ServerCmd (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__storeWazaEffectSyncDamageParams (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_WAZAEFF_SYNCDAMAGE_CMD_WORK_o* work, Dpr_Battle_Logic_ServerCommand_array* pTargetCmdList, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__putWazaEffSyncDamage (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_WAZAEFF_SYNCDAMAGE_CMD_WORK_o* work, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_MemberOutMsg (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
uint16_t Dpr_Battle_Logic_BTL_CLIENT__checkMemberOutStrID (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t clientID, uint8_t pokeID, bool* fClientArg, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_MemberOut (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_MemberIn (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__IsTrainerMessageEnable_OnLastPokeIn (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t clientID, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__StartTrainerMessage (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t clientID, uint8_t messageID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__UpdateTrainerMessage (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
uint16_t Dpr_Battle_Logic_BTL_CLIENT__checkMemberPutStrID (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* putPoke, const MethodInfo* method_info);
uint16_t Dpr_Battle_Logic_BTL_CLIENT__getMemberPutStrID (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* putPoke, Dpr_Battle_Logic_BTL_POKEPARAM_o* opponentPoke, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_MSG_Std (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_MSG_StdSE (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scproc_msgStdCore (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, uint16_t strID, int32_t* args, int32_t argsLen, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_MSG_Set (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_MSG_SetSE (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scproc_msgSetCore (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, uint16_t strID, int32_t* args, int32_t argsLen, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_MSG_Waza (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__needWazaMessageDisplay (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t wazano, int32_t wazaRange, uint8_t attackerPos, uint8_t targetPos, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_WazaEffect (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_BTL_CLIENT__scproc_wazaEffProc_Start (Dpr_Battle_Logic_BTL_CLIENT_o* __this, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__wazaEff_IsOmitFriendAttackEffect (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t waza, int32_t wazaRange, uint8_t atkPokePos, uint8_t defPokePos, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_BTL_CLIENT__checkWazaRange (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t waza, uint8_t atPokePos, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_TameWazaHide (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_WazaDmg (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_WazaDmg_Plural (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_WazaIchigeki (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_SickIcon (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_ConfDamage (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_Dead (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_Relive (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_RankDown (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_RankUp (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_IncWeatherPassedTurn (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_SetSpActPriority (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_SetActionRecord (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_AddEscapeInfo (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_GWallBreak (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_GWallGaugeAdd (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_GWallGaugeSub (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_GWallGaugeInit (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_GWallDecRepairTurn (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_GWallRepair (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_G_Start (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_G_End (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_G_IncTurn (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_GGauge_Inc (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_GGauge_Empty (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_RaidBoss_DecReinforceTurn (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_RaidBoss_SetReinforceTurn (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_RaidBoss_SetAngry (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_RaidBoss_GWazaUseSchedule_DecTurn (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_RaidBoss_GWazaUseSchedule_SetUsed (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_RaidBoss_GWazaUseSchedule_Reset (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_GRights_Transfer (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_GRights_Invalidate (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_GRights_IncTurn (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_GRights_Get (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_GRights_Get_MySelf (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_GRights_Get_Others (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_RaidBattleStatus_IncAllDeadCount (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_RaidBattleStatus_IncTurnCountAfterAllDead (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_RaidBattleStatus_ResetTurnCountAfterAllDead (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_RaidResult (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__setupRaidRewardParam (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BattleViewBase_RaidRewardParam_o* pRewardParam, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_SummarizedGShockEffect (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACTOP_BattleTalk (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_TurnStart (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_G_Start (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_G_End (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACTOP_WeatherStart (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__needWeatherStartEffect (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t cause, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_BTL_CLIENT__getWeatherStartMessage (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t weather, uint8_t cause, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_WeatherEnd (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_WeatherEnd (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_SimpleHP (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_UseItem (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_KinomiPrevWaza (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_Kill (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_Move (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_Move (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_MigawariCreate (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_MigawariDelete (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_Hensin (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_Hensin (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_MigawariDamage (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_PlayWinBGM (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_MsgWinHide (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_FriendshipEffect (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_FriendshipEffectMsg (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_Exp_InitParam (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_Exp_AddParam (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_Exp (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__updatePokeParamByLevelUp (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BattleViewBase_ExpGetResult_o** result, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__copyWaza (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Pml_PokePara_PokemonParam_o* pDest, Pml_PokePara_PokemonParam_o* pSrc, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_AddExp (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ExArg (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ExAssignClient_Start (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_AddWazaHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_RemoveWazaHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_RemoveForceWazaHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_RemoveForceAllWazaHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_AddTokuseiHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_RemoveTokuseiHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_SwapTokuseiHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_AddItemHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_RemoveItemHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_AddPosHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_RemovePosHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_AddSideHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_RemoveSideHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_SleepSideHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_WakeSideHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_AddFieldHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_RemoveFieldHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_AddDefaultPowerUpHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_RemoveDefaultPowerUpHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_AddRaidBossHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_RemoveRaidBossHandler (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__PrintCallback (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t arg, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_BallThrow (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_BallThrowCaptured (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_BallThrowForbidden (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACTOP_ChangeTokusei (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACTOP_SwapTokusei (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_FakeDisable (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_EffectSimple (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_EffectByPos (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_PluralEx2ndHit (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_EffectByVector (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_EffectBySide (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_EffectField (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_ChangeForm (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_ChangeForm (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__updateClientPublicInformation_FormNo (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o** poke, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_TOKWIN_In (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_TOKWIN_Out (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__notifyTokuseiToAI (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_HpMinus (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_HpPlus (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_PPMinus (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_PPMinus_Org (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_WazaUsed (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_IncWazaUsedCount (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_IncWazaKillCount (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_HpZero (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_PPPlus (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_PPPlus_Org (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_RankUp (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_RankDown (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_RankSet8 (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_RankRecover (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_RankReset (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_RankUpReset (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_AddCritical (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_SickSet (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_CurePokeSick (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_CureWazaSick (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_MemberIn (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_ChangePokeType (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_ExPokeType (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_WSTurnCheck (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_ConsumeItem (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_UpdateUseWaza (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_SetContFlag (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_ResetContFlag (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_SetTurnFlag (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_ResetTurnFlag (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_SetPermFlag (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_SetBattleFlag (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_RemoveBattleFlag (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_IncBattleCount_Unique (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_IncBattleCount_Client (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_IncBattleCount_Side (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_IncPokeTurnCount (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_ChangeTokusei (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_SetItem (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_UpdateWazaNumber (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_OutClear (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_DeadClear (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_AddFldEff (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_AddFldEffDepend (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_ChangeGround (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_DelFldEffDepend (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_RemoveFldEff (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_SetPokeCounter (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_SetPokePermCounter (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_AddPokePermCounter (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_IncKillCount (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_BatonTouch (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_MigawariCreate (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_MigawariDelete (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_SetFakeSrc (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_FakeDisable (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_ClearConsumedItem (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_CureSickDependPoke (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_AddWazaDamage (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_TurnCheck (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_IncFieldTurn (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_SetDoryoku (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_AddEffort_G (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_StartPosEff (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_RemovePosEff (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_UpdatePosEffectParam (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_PGLRecord (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_SideEffect_Add (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_SideEffect_Remove (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_SideEffect_IncTurnCount (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_SideEffect_Swap (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_PublishClientInformation_AppaearPokemon (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_PublishClientInformation_HavePokemonItem (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* UnnamedParameter, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_SetStatus (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_SetWeight (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
Dpr_Battle_Logic_BTL_CLIENT_VariableArgs_o* Dpr_Battle_Logic_BTL_CLIENT__PushTmpVariableArgsWork (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_VariableArgs_o* newArgs, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT__PopTmpVariableArgsWork (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_CLIENT_VariableArgs_o* oldArgs, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_BTL_CLIENT__GetVariableArgsCount (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_BTL_CLIENT__GetVariableArgs (Dpr_Battle_Logic_BTL_CLIENT_o* __this, uint8_t idx, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_BTL_CLIENT__GetClientID (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
Dpr_Battle_Logic_BTL_PARTY_o* Dpr_Battle_Logic_BTL_CLIENT__GetParty (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_BTL_CLIENT__GetWeather (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_BTL_CLIENT__GetTurnCount (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_BTL_CLIENT__GetProcPokePos (Dpr_Battle_Logic_BTL_CLIENT_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__IsUnselectableWaza (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, int32_t waza, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_OP_DecBattleCount_Unique (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__scProc_ACT_Safari (Dpr_Battle_Logic_BTL_CLIENT_o* __this, int32_t* seq, System_Int32_array* args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_BTL_CLIENT__CanChangePoke (Dpr_Battle_Logic_BTL_CLIENT_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
void Dpr_Battle_Logic_BTL_CLIENT___cctor (const MethodInfo* method_info);
