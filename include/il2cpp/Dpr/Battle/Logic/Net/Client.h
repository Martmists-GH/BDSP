#pragma once

#include "il2cpp.h"

Dpr_Battle_Logic_Net_Client_o* Dpr_Battle_Logic_Net_Client__get_Instance (const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_Net_Client__get_ErrorKindBits (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client___ctor (Dpr_Battle_Logic_Net_Client_o* __this, Dpr_Battle_Logic_BATTLE_SETUP_PARAM_o* bsp, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__Initialize (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__Terminate (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__IsTerminated (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__HasErrorOccured (Dpr_Battle_Logic_Net_Client_o* __this, int32_t kind, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__IsReady (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__StartDetermineServer (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__IsDeterminedServer (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_Net_Client__GetServerVersion (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__CheckImServer (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__Update (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__ToBeReconnectableMode (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__TurnToRaidAIEnableMode (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__TurnToRaidOnlyMeMode (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__IsShouldDissconetError (int32_t errorKindBits, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_Net_Client__GetErrorDialogCode (int32_t errorKindBits, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__IsErrorKindBit (int32_t errorKindBits, int32_t kind, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__NotifyNetworkError (Dpr_Battle_Logic_Net_Client_o* __this, int32_t kind, int32_t arg, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__IsClientCommunicationExist (Dpr_Battle_Logic_Net_Client_o* __this, int32_t clientId, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__StartNotifyServerParam (Dpr_Battle_Logic_Net_Client_o* __this, Dpr_Battle_Logic_Net_Data_ServerParam_o* serverParam, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__StartWaitForNotifyServerParam (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__IsNotifiedServerParam (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
Dpr_Battle_Logic_Net_Data_ServerParam_o Dpr_Battle_Logic_Net_Client__GetServerParam (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
System_Collections_IEnumerator_o* Dpr_Battle_Logic_Net_Client__StartLeaveOnError (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__RegisterSetupStationIndices (int32_t index0, int32_t index1, int32_t index2, int32_t index3, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__RemoveSetupStationIndex (int32_t index, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__ExistSetupStationIndex (int32_t index, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__SetupNetworkCb (const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__ReleaseNetworkCb (const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__OnReceivePacketEx (Dpr_Battle_Logic_Net_Client_o* __this, INL1_PacketReader_o* pr, int32_t transportType, int32_t receiveStationIndex, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__OnReceivePacket_Signal (Dpr_Battle_Logic_Net_Client_o* __this, Dpr_Battle_Logic_Net_Data_Signal_o* data, int32_t stationIndex, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__OnReceivePacket_ServerVersion (Dpr_Battle_Logic_Net_Client_o* __this, Dpr_Battle_Logic_Net_Data_ServerVersion_o* data, int32_t stationIndex, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__OnReceivePacket_ServerParam (Dpr_Battle_Logic_Net_Client_o* __this, Dpr_Battle_Logic_Net_Data_ServerParam_o* data, int32_t stationIndex, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__OnReceivePacket_BattleCommandSC (Dpr_Battle_Logic_Net_Client_o* __this, INL1_PacketReader_o* pr, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__OnReceivePacket_BattleCommandCS (Dpr_Battle_Logic_Net_Client_o* __this, INL1_PacketReader_o* pr, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__OnSessionEvent (Dpr_Battle_Logic_Net_Client_o* __this, Dpr_NetworkUtils_SessionEventData_o result, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__OnFinishedSession (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__OnReceivePacketExStatic (INL1_PacketReader_o* pr, int32_t transportType, int32_t receiveStationIndex, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__OnSessionEventStatic (Dpr_NetworkUtils_SessionEventData_o result, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__OnFinishedSessionStatic (const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__SendToClient (Dpr_Battle_Logic_Net_Client_o* __this, uint8_t clientId, Dpr_Battle_Logic_SEND_DATA_BUFFER_o* sendBuf, uint64_t sendSize, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__CheckReturnFromClient (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__GetRecvClientData (Dpr_Battle_Logic_Net_Client_o* __this, uint8_t clientId, void** pptr, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_Net_Client__GetCurrentExistingClientNum (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__IncrementSeq (const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__sendToServerVersionCoreAll (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__sendServerVersion (Dpr_Battle_Logic_Net_Client_o* __this, int32_t clientID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__isServerVersionReady (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_Net_Client__sendToClientCoreAll (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_Net_Client__sendToClientCore (Dpr_Battle_Logic_Net_Client_o* __this, uint8_t clientId, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__IsServerCmdReceived (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__GetReceivedCmdData (Dpr_Battle_Logic_Net_Client_o* __this, void** ppDest, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__ReturnToServer (Dpr_Battle_Logic_Net_Client_o* __this, void* data, uint32_t size, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__ClearBattleCommandRecvData (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__BroadcastRaidAction (Dpr_Battle_Logic_Net_Client_o* __this, uint8_t actionIconId, int32_t clientId, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_Net_Client__GetRaidAction (Dpr_Battle_Logic_Net_Client_o* __this, int32_t cliendId, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__ClearRaidAction (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__BroadcastTrainerAction (Dpr_Battle_Logic_Net_Client_o* __this, int32_t clientId, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__CheckTrainerAction (Dpr_Battle_Logic_Net_Client_o* __this, int32_t cliendId, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client__ClearTrainerAction (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_Net_Client__GetStationNumFromBSP (Dpr_Battle_Logic_Net_Client_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Net_Client__IsExistStationIndexOnBSP (Dpr_Battle_Logic_Net_Client_o* __this, int32_t stationIndex, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_Net_Client__countBits (Dpr_Battle_Logic_Net_Client_o* __this, uint8_t bits, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_Net_Client__SendReliablePacket (Dpr_Battle_Logic_Net_Client_o* __this, INL1_PacketWriterRe_o* pwRe, int32_t stationIndex, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_Net_Client__SendReliableData_ServerParam_ (Dpr_Battle_Logic_Net_Client_o* __this, Dpr_NetworkUtils_ANetData_T__o* data, int32_t stationIndex, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_Net_Client__SendReliableData_ServerVersion_ (Dpr_Battle_Logic_Net_Client_o* __this, Dpr_NetworkUtils_ANetData_T__o* data, int32_t stationIndex, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_Net_Client__SendReliableData_Signal_ (Dpr_Battle_Logic_Net_Client_o* __this, Dpr_NetworkUtils_ANetData_T__o* data, int32_t stationIndex, const MethodInfo* method_info);
void Dpr_Battle_Logic_Net_Client___cctor (const MethodInfo* method_info);
