#pragma once

#include "il2cpp.h"

uint16_t Dpr_Battle_Logic_EventLauncher__LABEL_OFFSET (uint16_t label, uint32_t i, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher___ctor (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_EventLauncher_SetupParam_o** setupParam, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_EventLauncher__Event_ChangeGWaza (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t gWaza, int32_t srcWaza, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_GetWazaParam (Dpr_Battle_Logic_EventLauncher_o* __this, int32_t waza, int32_t orgWaza, int32_t gSrcWaza, int32_t wazaPri, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* param, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckMigawariThrew (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, int32_t waza, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckCritical (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, int32_t waza, bool* pByFriendship, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CalcDamage (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, Dpr_Battle_Logic_WazaParam_o* wazaParam, int32_t typeAff, int32_t targetDmgRatio, bool isCritical, bool isRandDisable, bool isMigawariExist, uint8_t defLocalWeather, uint16_t* dstDamage, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_EventLauncher__Event_GetWeather (Dpr_Battle_Logic_EventLauncher_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_EventLauncher__Event_CheckLocalWeather (Dpr_Battle_Logic_EventLauncher_o* __this, uint8_t pokeID, uint8_t weather, const MethodInfo* method_info);
uint16_t Dpr_Battle_Logic_EventLauncher__Event_getWazaPower (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, Dpr_Battle_Logic_WazaParam_o* wazaParam, const MethodInfo* method_info);
uint16_t Dpr_Battle_Logic_EventLauncher__Event_getAttackPower (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, Dpr_Battle_Logic_WazaParam_o* wazaParam, bool isCritical, bool* isYakedoDisable, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_EventLauncher__Event_getAttackerPowerVID (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParam, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__shouldAttackerPowerFlat (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t vid, bool isCritical, const MethodInfo* method_info);
uint16_t Dpr_Battle_Logic_EventLauncher__Event_getDefenderGuard (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, Dpr_Battle_Logic_WazaParam_o* wazaParam, bool isCritical, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_EventLauncher__Event_CalcTypeMatchRatio (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, uint8_t waza_type, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_EventLauncher__Event_CheckDamageAffinity (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o** attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o** defender, uint8_t wazaType, bool onlyAttacker, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_EventLauncher__Event_CheckDamageAffinity (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o** attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o** defender, uint8_t waza_type, uint8_t defenderType, bool onlyAttacker, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_EventLauncher__Event_RewriteWazaAffinity (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, uint8_t wazaType, int32_t affinity, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckFloating (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* poke, bool isIncludeHikouType, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_AffineFloatingCancel (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_EventLauncher__Event_CalcKickBack (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t waza, uint32_t inDamage, bool* isMustEnable, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckEnableSimpleDamage (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, uint32_t damage, uint8_t damageCause, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_SimpleDamage_Before (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o** bpp, uint32_t damage, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_SimpleDamage_After (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o** bpp, uint32_t damage, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckIchigeki (Dpr_Battle_Logic_EventLauncher_o* __this, bool* pIsFailMsgDisplayed, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, Dpr_Battle_Logic_WazaParam_o* wazaParam, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_EventLauncher__Event_getHitPer (Dpr_Battle_Logic_EventLauncher_o* __this, uint16_t eventID, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, Dpr_Battle_Logic_WazaParam_o* wazaParam, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckIchigekiGuard (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, Dpr_Battle_Logic_WazaParam_o* wazaParam, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_IchigekiSucceed (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_SkipNigeruCalc (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_ChangePokeBefore (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_ChangeTokuseiAfter (Dpr_Battle_Logic_EventLauncher_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_WazaExeEnd_Common (Dpr_Battle_Logic_EventLauncher_o* __this, uint8_t pokeID, int32_t waza, Dpr_Battle_Logic_ActionDesc_o** actionDesc, uint16_t eventID, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_GetWazaRankEffectValue (Dpr_Battle_Logic_EventLauncher_o* __this, int32_t waza, uint32_t waza_effect_index, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, int32_t* effect, int32_t* volume, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_WazaRankEffectFixed (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, int32_t wazaID, int32_t effectID, int32_t volume, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_RankEffect_Failed (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, uint32_t wazaRankEffSerial, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckRankEffectSuccess (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, int32_t effect, uint8_t wazaUsePokeID, int32_t volume, uint8_t cause, uint32_t wazaRankEffSerial, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_EventLauncher__Event_RankValueChange (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, int32_t rankType, uint8_t wazaUsePokeID, uint16_t itemID, int32_t volume, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_RankEffect_Fix (Dpr_Battle_Logic_EventLauncher_o* __this, uint8_t atkPokeID, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, int32_t rankType, int32_t volume, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckRankEffectReflect (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, uint8_t wazaUsePokeID, int32_t effect, int32_t volume, uint8_t cause, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_RankEffectReflect (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, uint8_t wazaUsePokeID, int32_t effect, int32_t volume, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_UnDamageProcEnd (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_WazaParam_o* wazaParam, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_TurnEnd (Dpr_Battle_Logic_EventLauncher_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_EventLauncher__Event_GetWazaPriority (Dpr_Battle_Logic_EventLauncher_o* __this, int32_t waza, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
uint16_t Dpr_Battle_Logic_EventLauncher__Event_CalcAgility (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, bool fTrickRoomEnable, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_ActProcStart (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_PokeAction_o* action, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_ActProcEnd (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, int32_t actionCmd, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_ActProcCanceled (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_PokeAction_o* action, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckInemuriFail (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_AfterMove (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckNigeruForbid (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_NigeruExMessage (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_AfterMemberIn (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, uint16_t eventID, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_AfterMemberInForce (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, uint16_t eventID, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_AfterMemberInComp (Dpr_Battle_Logic_EventLauncher_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_DasshutuPackLaunch (Dpr_Battle_Logic_EventLauncher_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_MemberOutFixed (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* outPoke, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_ReplaceActWaza (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t originWaza, int32_t nextWaza, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_AfterWazaParamFixed (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t orgWazaID, int32_t actWazaID, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_CheckCombiWazaExe (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParam, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_WazaCallDecide (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParamOrg, Dpr_Battle_Logic_WazaParam_o* wazaParamAct, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_WazaExeDecide (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParam, uint16_t evType, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_CheckDelayWazaSet (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o** attacker, uint8_t* targetPos, bool* isTried, bool* isSuccessed, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_DecideDelayWaza (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o** attacker, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_StartWazaSeq (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t waza, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_EndWazaSeq (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t waza, bool fWazaEnable, Dpr_Battle_Logic_ActionDesc_o* actionDesc, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_WazaRob (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* robPoke, Dpr_Battle_Logic_BTL_POKEPARAM_o* orgAtkPoke, int32_t waza, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_WazaReflect (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* robPoke, Dpr_Battle_Logic_BTL_POKEPARAM_o* orgAtkPoke, int32_t waza, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckWazaRob (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t waza, Dpr_Battle_Logic_PokeSet_o* targetRec, uint8_t* robberPokeID, uint8_t* robTargetPokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_IsRemoveAllFailCancel (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParam, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_WazaAffineCheckEnable (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_WazaParam_o* wazaParam, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_checkNoEffectBySideEffectGuard_Begin (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_WazaParam_o* wazaParam, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_PokeSet_o* targets, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_checkNoEffectBySideEffectGuard_End (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_WazaParam_o* wazaParam, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_PokeSet_o* targets, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_MamoruSuccess (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, Dpr_Battle_Logic_WazaParam_o* wazaParam, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_CheckNotEffect (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_WazaParam_o* wazaParam, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, Dpr_Battle_Logic_DmgAffRec_o* affinityRecorder, uint16_t eventID, bool* isNoEffect, bool* isNoReaction, bool* isNoEffectMessageDisplayed, bool* isTokuseiWindowDisplay, Dpr_Battle_Logic_StrParam_o* customMessage, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_SkipAvoidCheck (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, Dpr_Battle_Logic_WazaParam_o* wazaParam, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckHit (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, Dpr_Battle_Logic_WazaParam_o* wazaParam, bool* bFriendshipActive, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_WazaAvoid (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, bool fDelayAttack, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_Check_FreeFallStart_Guard (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, Dpr_Battle_Logic_WazaParam_o* wazaParam, Dpr_Battle_Logic_StrParam_o* strParam, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_TameReleaseFailed (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_PokeSet_o* targetRec, Dpr_Battle_Logic_WazaParam_o* wazaParam, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_ExeFailThrew (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, int32_t waza, uint8_t cause, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_EventLauncher__Event_CheckWazaExecute (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t waza, uint16_t eventID, Dpr_Battle_Logic_WazaParam_o* wazaParam, Dpr_Battle_Logic_PokeSet_o* targets, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_IsWazaMeltMustFail (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t waza, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_EventLauncher__Event_DecrementPPVolume (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, uint8_t wazaIdx, int32_t waza, Dpr_Battle_Logic_PokeSet_o* rec, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckAttackerDeadPreTarget (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParam, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_WazaDamageDetermine (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, Dpr_Battle_Logic_WazaParam_o* wazaParam, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_EventLauncher__Event_CheckKoraeru (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, bool isWazaDamage, uint16_t* damage, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_KoraeruExe (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* poke, uint8_t cause, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_WazaDamageSideAfter (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParam, uint32_t damage, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_CheckItemReaction (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, uint8_t reactionType, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_DamageProcStart (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParam, Dpr_Battle_Logic_PokeSet_o* targets, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_DamageProcEndSub (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_PokeSet_o* targets, Dpr_Battle_Logic_ActionDesc_o* actionDesc, Dpr_Battle_Logic_WazaParam_o* wazaParam, bool fDelayAttack, bool fRealHitOnly, uint16_t eventID, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_DamageProcEnd (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_PokeSet_o* targets, Dpr_Battle_Logic_WazaParam_o* wazaParam, bool fDelayAttack, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_SimpleDamage_Failed (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o** bpp, uint8_t damageCause, uint8_t damageCausePokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckItemEquipFail (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, uint16_t itemID, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_AfterItemEquip (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, uint16_t itemID, bool bCheckKinomi, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_KillHandler (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, uint8_t atkPokeID, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_EventLauncher__Event_CheckWazaAddSick (Dpr_Battle_Logic_EventLauncher_o* __this, int32_t waza, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, Dpr_Battle_Logic_BTL_SICKCONT_o* pSickCont, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_EventLauncher__Event_CheckSpecialWazaAdditionalPer (Dpr_Battle_Logic_EventLauncher_o* __this, uint8_t atkPokeID, uint8_t defPokeID, uint32_t defaultPer, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_CheckRecoverMsgCustom (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_StrParam_o* pCustomMsg, Dpr_Battle_Logic_BTL_POKEPARAM_o* pAttacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* pTarget, int32_t wazano, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_GetWazaSickAddStr (Dpr_Battle_Logic_EventLauncher_o* __this, int32_t sick, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, Dpr_Battle_Logic_StrParam_o* str, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_WazaSickCont (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, int32_t sick, Dpr_Battle_Logic_BTL_SICKCONTOBJ_o* sickCont, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckAddSickFailStdSkip (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t sick, uint8_t cause, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_WazaSick_CheckFail (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, int32_t sick, uint8_t cause, bool* bCallFailedEvent, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_AddSick_Failed (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t sick, uint8_t cause, uint32_t wazaSerial, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_PokeSickFixed (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, uint32_t sick, Dpr_Battle_Logic_BTL_SICKCONT_o inSickCont, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_WazaSickFixed (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t sick, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckKodawariFactorExist (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* poke, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_TokuseiDisabled (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckAddRankEffectOccur (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_WazaParam_o* wazaParam, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, const MethodInfo* method_info);
uint16_t Dpr_Battle_Logic_EventLauncher__Event_CheckPushOutEffectNo (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t waza, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_CheckPushOutFail (Dpr_Battle_Logic_EventLauncher_o* __this, bool* isFailed, bool* isFailMessageDisplayed, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_EventLauncher__Event_WazaWeatherTurnUp (Dpr_Battle_Logic_EventLauncher_o* __this, uint8_t weather, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckChangeWeather (Dpr_Battle_Logic_EventLauncher_o* __this, uint8_t weather, uint8_t* turn, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_ChangeGroundBefore (Dpr_Battle_Logic_EventLauncher_o* __this, uint8_t pokeID, uint8_t ground, Dpr_Battle_Logic_BTL_SICKCONT_o* contParam, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_ChangeGroundAfter (Dpr_Battle_Logic_EventLauncher_o* __this, uint8_t pokeID, uint8_t ground, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_FieldEffectCall (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t waza, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_ChangeFieldAfter (Dpr_Battle_Logic_EventLauncher_o* __this, uint8_t pokeID, int32_t field, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_WazaDamageReaction (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, Dpr_Battle_Logic_WazaParam_o* wazaParam, int32_t aff, uint32_t damage, bool fCritical, bool fMigawari, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_UnCategoryWaza (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_WazaParam_o* wazaParam, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_PokeSet_o* targets, bool* fFailMsgEnable, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_TurnCheck (Dpr_Battle_Logic_EventLauncher_o* __this, uint8_t pokeID, uint16_t event_type, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_EventLauncher__Event_SickDamage (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, int32_t sickID, uint32_t damage, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_EventLauncher__Event_CheckWeatherReaction (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, uint8_t weather, uint32_t damage, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_PokeDeadActionAfter (Dpr_Battle_Logic_EventLauncher_o* __this, uint8_t deadPokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_PokeDeadAfter (Dpr_Battle_Logic_EventLauncher_o* __this, uint8_t deadPokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_BeforeDead (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_AfterCritical (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_WazaParam_o* wazaParam, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_GetReqWazaParam (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t orgWazaId, uint8_t orgTargetPos, Dpr_Battle_Logic_REQWAZA_WORK_o* reqWaza, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_EventLauncher__Event_CheckSpecialActPriority (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_BeforeFight (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, int32_t waza, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_FixConfDamage (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* poke, uint16_t* damage, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_ConfDamageReaction (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckWazaMsgCustom (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t orgWazaID, int32_t actWazaID, Dpr_Battle_Logic_StrParam_o* str, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_CheckWazaExeFail (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, int32_t waza, uint8_t cause, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_EventLauncher__Event_WazaExecuteStart (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_ActionDesc_o* actionDesc, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParam, Dpr_Battle_Logic_PokeSet_o* rec, Dpr_Battle_Logic_WazaEffectParams_o* pWazaEffectParams, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckMamoruBreak (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, int32_t waza, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckTameFail (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_PokeSet_o* targetRec, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckTameTurnSkip (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t waza, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_TameStart (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_PokeSet_o* targetRec, Dpr_Battle_Logic_WazaParam_o* wazaParam, uint8_t* hideTargetPokeID, bool* fFailMsgDisped, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_TameStartFixed (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_TameSkip (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t waza, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_TameRelease (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_PokeSet_o* rec, int32_t waza, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckPokeHideAvoid (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, int32_t waza, bool* bEnableAvoidMsg, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_IsCalcHitCancel (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, int32_t waza, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckDmgToRecover (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, Dpr_Battle_Logic_WazaParam_o* wazaParam, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_DmgToRecover (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckKinomiEffectUp (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* poke, bool* pNeedTokuseiWindowDisplayOnItemUseAct, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckKinomiEffectUp (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* poke, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_ItemEquip (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* poke, bool* pNeedTokuseiWindowDisplayOnItemUseAct, bool* pNeedToConsumeItemMessageDisplay, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_ItemEquipTmp (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, uint8_t atkPokeID, bool* pNeedTokuseiWindowDisplayOnItemUseAct, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_WazaNoEffectByFlying (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* poke, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_DecrementPP_Reaction (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, uint8_t wazaIdx, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_HitCheckParam (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t waza, Dpr_Battle_Logic_HITCHECK_PARAM_o* param, bool fDelayAttack, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_EventLauncher__Event_GetWazaShrinkPer (Dpr_Battle_Logic_EventLauncher_o* __this, int32_t waza, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckShrink (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, uint32_t percentage, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_FailShrink (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, const MethodInfo* method_info);
uint16_t Dpr_Battle_Logic_EventLauncher__Event_RecalcDrainVolume (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, uint16_t volume, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_AfterChangeWeather (Dpr_Battle_Logic_EventLauncher_o* __this, uint8_t weather, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_EventLauncher__Event_CalcWazaRecoverHP (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, int32_t waza, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckItemSet (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, uint16_t itemID, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_ItemSetFailed (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_ItemSetDecide (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, uint16_t nextItemID, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_ItemSetFixed (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_ChangeTokuseiBefore (Dpr_Battle_Logic_EventLauncher_o* __this, uint8_t pokeID, int32_t prev_tokuseiID, uint16_t next_tokuseiID, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_CheckSideEffectParam (Dpr_Battle_Logic_EventLauncher_o* __this, uint8_t userPokeID, int32_t effect, int32_t side, Dpr_Battle_Logic_BTL_SICKCONTOBJ_o* cont, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_NotifyAirLock (Dpr_Battle_Logic_EventLauncher_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckTokuseiChangeEnable (Dpr_Battle_Logic_EventLauncher_o* __this, uint8_t targetPokeID, int32_t nextTokusei, uint8_t cause, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_TokuseiChangeFailed (Dpr_Battle_Logic_EventLauncher_o* __this, uint8_t targetPokeID, int32_t nextTokusei, uint8_t cause, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_EventLauncher__Event_GetWazaTargetIntr (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParam, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckWazaTargetTemptEnable (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, bool* enable, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_EventLauncher__Event_GetWazaTargetTempt (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParam, uint8_t defaultTargetPokeID, uint8_t* outTemptCause, const MethodInfo* method_info);
void Dpr_Battle_Logic_EventLauncher__Event_WazaTargetTemptEnd (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, uint16_t temptPokeId, Dpr_Battle_Logic_WazaParam_o* wazaParam, uint8_t temptCause, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_EventLauncher__svEvent_GetWeightRatio (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckAimTargetEnable (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParam, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckWazaTargetIncrease (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* defender, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__Event_CheckHitCountMessageDisplay (Dpr_Battle_Logic_EventLauncher_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, const MethodInfo* method_info);
bool Dpr_Battle_Logic_EventLauncher__perOccur (Dpr_Battle_Logic_EventLauncher_o* __this, uint8_t per, uint8_t* rnd, const MethodInfo* method_info);
