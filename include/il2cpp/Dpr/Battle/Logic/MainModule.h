#pragma once

#include "il2cpp.h"

Dpr_Battle_Logic_BATTLE_SETUP_PARAM_o* Dpr_Battle_Logic_MainModule__GetBattleSetupParam (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__GetEnableTimeStop (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__GetEnableVoiceChat (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsSkyBattle (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsMustCaptureMode (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__SetFairyGymResult (Dpr_Battle_Logic_MainModule_o* __this, uint8_t result, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetFairyGymResult (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
Dpr_Battle_Logic_BattleViewBase_o* Dpr_Battle_Logic_MainModule__GetBattleViewSystem (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule___ctor (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BATTLE_SETUP_PARAM_o* setupParam, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__Dispose (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
System_Collections_IEnumerator_o* Dpr_Battle_Logic_MainModule__InitializeCoroutine (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__createBattleEnv (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__initializeBattleAiSystem (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
System_Collections_Generic_Dictionary_uint__uint__o* Dpr_Battle_Logic_MainModule__createZukanDataClone (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__MainLoop (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__storeBattleResult (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__isBgmFadeOutDisable (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__checkRecReadComplete (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
System_Collections_IEnumerator_o* Dpr_Battle_Logic_MainModule__FinalizeCoroutine (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__FinalizeApp (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
System_Collections_IEnumerator_o* Dpr_Battle_Logic_MainModule__LeavenOnErrorCoroutine (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__StartForceRemoveView (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__WaitForceRemoveView (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setMainLoop (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_MainModule_pMainProc_o* proc, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__callMainLoop (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setSubProc (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_MainModule_pSubProc_o* subProc, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__callSubProc (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setSubProcForSetup (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BATTLE_SETUP_PARAM_o* setup_param, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setSubProcForCleanUp (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BATTLE_SETUP_PARAM_o* setup_param, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setupCommon_TrainerParam (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BATTLE_SETUP_PARAM_o* sp, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setupCommon_SetRecplayerClientMode (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BATTLE_SETUP_PARAM_o* sp, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setupCommon_CreateViewModule (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BATTLE_SETUP_PARAM_o* sp, int32_t bagMode, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setupCommon_InitViewModule (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setupCommon_ClientPublicInformation (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BATTLE_SETUP_PARAM_o** setupParam, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setupCommon_ClientPublicInformation (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_ClientPublicInformation_o* publicInfo, uint8_t clientId, Dpr_Battle_Logic_MiseaiData_o** miseaiData, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setup_alone_single (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setup_alone_double (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setup_alone_double_multi (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setup_alone_double_multi_00 (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setup_alone_double_multi_01 (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setup_alone_double_multi_02 (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setup_alone_double_multi_03 (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setup_alone_double_multi_04 (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setup_alone_double_multi_05 (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setup_alone_double_multi_06 (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setup_alone_double_multi_07 (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setup_alone_double_multi_08 (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setup_alone_double_multi_09 (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setup_alone_raid (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setup_comm_raid (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setupseq_comm_raid (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setup_raid_srcParty (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setup_raid_trainerParam (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setup_raid_battleEnv (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BattleEnv_o* env, bool forServer, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setup_raid_boss (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BattleEnv_o* env, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setupCommon_SetupBattleEnv (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setupCommon_SetupBattleEnv (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BattleEnv_o* env, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setupCommon_SetupBattleEnv_TimeLimit (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BattleEnv_o* env, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setupCommon_SetupBattleEnv_GRights (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BattleEnv_o* env, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setupCommon_SetupBattleEnv_BattleTalk (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BattleEnv_o* env, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setupCommon_CreateServerClient (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BATTLE_SETUP_PARAM_o** setupParam, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__checkBagMode (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BATTLE_SETUP_PARAM_o* sp, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setup_alone_common_ClientID (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BATTLE_SETUP_PARAM_o* sp, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setupCommon_srcParty (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BATTLE_SETUP_PARAM_o* sp, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setSrcPartyToBattleEnv (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BattleEnv_o* battleEnv, uint8_t clientID, bool forServer, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__ClientIDtoRelation (Dpr_Battle_Logic_MainModule_o* __this, uint8_t myClientID, uint8_t targetClientID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__cleanup_common (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setup_comm_single (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setup_comm_double (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setupseq_comm_determine_server (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setupseq_comm_store_party_data (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setupseq_comm_store_player_data (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setupseq_comm_create_server_client (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__setupseq_comm_start_server (Dpr_Battle_Logic_MainModule_o* __this, int32_t* seq, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__MainLoop_StandAlone (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__MainLoop_Comm_Server (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__watchRemoteClientCommunication (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__watchMyClientCommunication (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__canLaunchDammyClient (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__launchDammyClient (Dpr_Battle_Logic_MainModule_o* __this, int32_t clientId, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__MainLoop_Comm_NotServer (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__watchRemoteServerLoss (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__changeServerSelf (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__MainLoop_Comm_Error (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__OnCommError (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__NotifyCommErrorToLocalClient (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__CheckAllClientQuit (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__GetRule (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsWazaEffectEnable (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetMaxFollowPokeLevel (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__NeedReduleHighLevelCaptureRate (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetCaptureLevelCap (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetExpLevelCap (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsIrekaeMode (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsCompetitorScenarioMode (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsScenarioMultiBattle (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsScenarioRaidBattle (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsPokeItemConsumeBattle (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__CanAddBonusMoney (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsEscapeEnableBattle (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsExpSeqEnable (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsMoneySeqEnable (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetValidPosMax (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_MainModule__GetFrontPosNum (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_MainModule__GetSidePosNum (Dpr_Battle_Logic_MainModule_o* __this, int32_t side, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_MainModule__GetOpponentFrontPosNum (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsPokePosExist (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pos, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsFrontPos (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pos, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__GetCompetitor (Dpr_Battle_Logic_MainModule_o* __this, bool isDemoCaptureConvert, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetCommMode (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
System_String_o* Dpr_Battle_Logic_MainModule__GetWinBGMStr (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__GetEscapeMode (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__CanUseEscapeItem (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
Dpr_Battle_Logic_BTL_FIELD_SITUATION_o* Dpr_Battle_Logic_MainModule__GetFieldSituation (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetDefaultWeather (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetDefaultGround (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
Dpr_Battle_Logic_BattleEffectComponentData_o* Dpr_Battle_Logic_MainModule__GetBattleEffectData (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetForceQuitTurnCount (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
Dpr_Battle_Logic_MyStatus_o* Dpr_Battle_Logic_MainModule__GetPlayerStatus (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsZukanRegistered (Dpr_Battle_Logic_MainModule_o* __this, int32_t monsno, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsZukanRegistered (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_MainModule__GetZukanCapturedCount (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsZukanPokeSeeOnBattleStart (Dpr_Battle_Logic_MainModule_o* __this, int32_t monsno, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__RegisterZukanSeeFlag (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__canRegisterZukanSeeFlag (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* pTarget, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__RegisterZukanSpGGetFlag (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__IncrementZukanBattleCount (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, bool isCaptured, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_MainModule__GetClientCoverPosNum (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__GetPosCoverClientId (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pos, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsExistClient (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetMultiMode (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsMultiMode (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsPlayerRatingDisplay (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsWatchMember (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__GetClientSide (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsPlayerSide (Dpr_Battle_Logic_MainModule_o* __this, int32_t side, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsSideExist (Dpr_Battle_Logic_MainModule_o* __this, int32_t side, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__ExpandSide (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BtlSide_array* expandSide, uint8_t* expandSideNum, int32_t side, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetSidePos (Dpr_Battle_Logic_MainModule_o* __this, int32_t side, uint8_t index, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetSideNum (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetClientNum (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetClientNum (Dpr_Battle_Logic_MainModule_o* __this, int32_t side, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetEnemyClientNum (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetOpponentPokePos (Dpr_Battle_Logic_MainModule_o* __this, uint8_t basePos, uint8_t idx, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetFriendPokePos (Dpr_Battle_Logic_MainModule_o* __this, uint8_t basePos, uint8_t idx, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsFriendPokePos (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pos1, uint8_t pos2, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsOpponentClientID (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID1, uint8_t clientID2, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__btlPos_to_clientID (Dpr_Battle_Logic_MainModule_o* __this, uint8_t btlPos, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__btlPos_to_cliendID_and_posIdx (Dpr_Battle_Logic_MainModule_o* __this, uint8_t btlPos, uint8_t* clientID, uint8_t* posIdx, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__PokeIDtoPokePos (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_POKECON_o* pokeCon, uint8_t pokeID, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__PokeIDtoViewPos (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_POKECON_o* pokeCon, uint8_t pokeID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__BtlPosToClientID (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pos, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__BtlPosToPosIdx (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pos, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__BtlPosToClientID_and_PosIdx (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pos, uint8_t* clientID, uint8_t* posIdx, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__ClientIDtoTrainerViewPos (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__BtlPosToViewPos (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pos, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__ViewPosToBtlPos (Dpr_Battle_Logic_MainModule_o* __this, uint8_t vpos, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetPlayerClientID (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetPlayerFriendCleintID (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetFriendCleintID (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetEnemyClientID (Dpr_Battle_Logic_MainModule_o* __this, uint8_t idx, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_MainModule__GetOpponentClientID (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, uint8_t idx, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__DecrementPlayerItem (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, uint16_t itemID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__AddItem (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, uint16_t itemID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsRecordEnable (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__NotifyCapturedInfo (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_CaptureInfo_o** info, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__NotifyTurnedLevelUpPokePos (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__CheckTurnedLevelUp (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__NotifyRaidCaptureStart (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__NotifyRaidExitLose (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__NotifyBattleResult (Dpr_Battle_Logic_MainModule_o* __this, int32_t result, int32_t resultCause, bool isForceSetEnable, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__GetBattleResult (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__GetBattleResultCause (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__NotifyCmdCheckError (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_MainModule__FixRegularMoney (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__AddBonusMoney (Dpr_Battle_Logic_MainModule_o* __this, uint32_t volume, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_MainModule__GetBonusMoney (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__SetMoneyDblUp (Dpr_Battle_Logic_MainModule_o* __this, int32_t cause, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_MainModule__calcMoneyDblUpRatio (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_MainModule__FixLoseMoney (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__ReflectNatsukiDead (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, bool fLargeDiffLevel, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__natsukiPut (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, int32_t calcID, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__ReflectPokeWazaOboe (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pokeID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetClientFrontPosCount (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetClientBenchPosIndex (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsPlayersPokeID (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsFriendPokeID (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pokeID1, uint8_t pokeID2, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__PokeIDtoSide (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pokeID, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__PokeIDtoOpponentSide (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pokeID, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__GetOpponentSide (Dpr_Battle_Logic_MainModule_o* __this, int32_t side, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__SetIllusionForParty (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BTL_PARTY_o* party, uint8_t clientID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__GetSetupStatusFlag (Dpr_Battle_Logic_MainModule_o* __this, int32_t flag, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__RECORDDATA_Inc (Dpr_Battle_Logic_MainModule_o* __this, int32_t recID, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__RECORDDATA_Add (Dpr_Battle_Logic_MainModule_o* __this, int32_t recID, uint32_t value, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsShooterEnable (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsItemEnable (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsFriendshipActive (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetPokeFriendship (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__CanEvolveAfterBattle (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o** poke, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__GetEvolveSituation (Dpr_Battle_Logic_MainModule_o* __this, Pml_PokePara_EvolveSituation_o* dest, uint8_t pokeId, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__NotifyPokemonLevelup (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__CalcNatsukiItemUse (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, uint16_t itemNo, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__NotifyPokemonGetToGameSystem (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsResultStrictMode (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__checkWinner (Dpr_Battle_Logic_MainModule_o* __this, uint8_t myClientId, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_MainModule__GetCommandLimitTime (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_MainModule__GetClientLimitTime (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsClientLimitTimeExist (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_MainModule__GetGameLimitTime (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsGameLimitTimeExist (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__CheckGameLimitTimeOver (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__CheckClientLimitTimeOver (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsLongEncount (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__CheckRecPlayError (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__Bspstore_RecordData (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__StartFadeoutForRecPlay (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__ResetForRecPlay (Dpr_Battle_Logic_MainModule_o* __this, uint32_t nextTurnNum, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__NotifyChapterSkipEnd (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
Dpr_Battle_Logic_BTL_CLIENT_o* Dpr_Battle_Logic_MainModule__GetClient (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
Dpr_Battle_Logic_BTL_CLIENT_o* Dpr_Battle_Logic_MainModule__GetClientByPokeID (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__Kentei_ClearField (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BATTLE_SETUP_PARAM_o* sp, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__Bspstore_KenteiData (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__trainerParam_Init (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__trainerParam_Clear (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__trainerParam_ClearCore (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_TRAINER_DATA_o* data, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__trainerParam_StorePlayer (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_TRAINER_DATA_o* dst, Dpr_Battle_Logic_MyStatus_o* playerData, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__trainerParam_StoreCore (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_TRAINER_DATA_o* dst, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__trainerParam_StoreNPCTrainer (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_TRAINER_DATA_o* dst, Dpr_Battle_Logic_BSP_TRAINER_DATA_o* trData, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__trainerParam_SetupForRecPlay (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__trainerParam_IsExist (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_TRAINER_DATA_o* trData, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsClientTrainerExist (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsClientNPC (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
uint16_t Dpr_Battle_Logic_MainModule__GetClientUseItem (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, uint8_t itemIdx, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_MainModule__GetClientAIBit (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
Dpr_Battle_Logic_TRAINER_DATA_o* Dpr_Battle_Logic_MainModule__GetClientTrainerData (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__GetClientTrainerID (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__GetClientTrainerMsg (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, uint8_t messageID, System_String_o** outMessageLabel, System_String_o** outSequenceName, const MethodInfo* method_info);
System_String_o* Dpr_Battle_Logic_MainModule__GetCliehtTrainerSequence (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, uint8_t sequenceID, const MethodInfo* method_info);
System_String_o* Dpr_Battle_Logic_MainModule__GetClientTrainerMsg (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, uint8_t messageID, const MethodInfo* method_info);
System_String_o* Dpr_Battle_Logic_MainModule__GetClientTrainerName (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
System_String_o* Dpr_Battle_Logic_MainModule__GetClientTrainerNameLabel (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
System_String_o* Dpr_Battle_Logic_MainModule__GetClientTrainerTypeLabel (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetClientTrainerSex (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__GetClientTrainerType (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetClientTrainerGroup (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetClientTrainerGold (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
System_String_o* Dpr_Battle_Logic_MainModule__GetClientTrainerModelID (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__GetClientTrainerColorID (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
System_String_o* Dpr_Battle_Logic_MainModule__GetClientTrainerWinEffect (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetClientTrainerHandDominance (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetClientTrainerHoldBallHandDominance (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
float Dpr_Battle_Logic_MainModule__GetClientTrainerThrowTime (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
float Dpr_Battle_Logic_MainModule__GetClientTrainerCaptureThrowTime (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
float Dpr_Battle_Logic_MainModule__GetClientTrainerLoseLoopTime (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
System_String_o* Dpr_Battle_Logic_MainModule__GetClientTrainerEffect (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
XLSXContent_TrainerTable_SheetTrainerData_o* Dpr_Battle_Logic_MainModule__GetClientTrainerDataXLSX (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
XLSXContent_TrainerTable_SheetTrainerType_o* Dpr_Battle_Logic_MainModule__GetClientTrainerTypeDataXLSX (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
Dpr_Battle_Logic_MyStatus_o* Dpr_Battle_Logic_MainModule__GetClientPlayerData (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
uint16_t Dpr_Battle_Logic_MainModule__GetClientRating (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
Dpr_Battle_Logic_ClientPublicInformation_o* Dpr_Battle_Logic_MainModule__GetClientPublicInformation (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsRecordPlayMode (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__CheckImServerMachine (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__HasPlayerGakusyuSouti (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetClientPokePos (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, uint8_t posIdx, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__srcParty_Create (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__srcParty_Delete (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__srcParty_Set (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, Pml_PokeParty_o** party, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__srcParty_FormChangeForX (Pml_PokeParty_o* party, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__srcParty_FromChange_OnBattleStart (Pml_PokePara_PokemonParam_o* pokeParam, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__setupUnknownPokeNickName (Dpr_Battle_Logic_MainModule_o* __this, Pml_PokeParty_o* party, const MethodInfo* method_info);
Pml_PokeParty_o* Dpr_Battle_Logic_MainModule__GetSrcParty (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, bool fForServer, const MethodInfo* method_info);
Dpr_Battle_Logic_PartyDesc_o* Dpr_Battle_Logic_MainModule__GetPartySetupParam (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, const MethodInfo* method_info);
Dpr_Battle_Logic_RaidBattleParam_o* Dpr_Battle_Logic_MainModule__GetRaidBattleParam (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetClientBasePokeID (uint8_t clientID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__PokeIDtoClientID (uint8_t pokeID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__PokeIDtoShortID (uint8_t pokeID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__ShortIDtoPokeID (uint8_t clientID, uint8_t shortID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetFacedPokePos (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pos, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsFriendClientID (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID_1, uint8_t clientID_2, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__PosToSide (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pos, const MethodInfo* method_info);
Dpr_Battle_Logic_BATTLE_CONVENTION_INFO_o* Dpr_Battle_Logic_MainModule__GetBattleConventionInfo (Dpr_Battle_Logic_MainModule_o* __this, uint8_t id, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__NotifyPGLRecord (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, Dpr_Battle_Logic_PGLRecord_RecParam_o* recParam, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__SetTvNaviData_FrontPoke (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp1, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp2, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__SetTvNaviData_UseWaza (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, uint16_t wazaNo, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__NotifyPokemonDead (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__RankUpByClient (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pokeID, int32_t rank, uint8_t volume, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__RankDownByClient (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pokeID, int32_t rank, uint8_t volume, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__SetUpRandSystem (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsRaidBossRare (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsGEnableByNPC (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__WatchCmdAddReader (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__NeedEndGOnBattleEnd (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__WatchDataRecvAfterFunc (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__UpdateNetClient (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__NotifyPokeMemory_AllDead (Dpr_Battle_Logic_MainModule_o* __this, uint8_t causedPokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsLiveCup (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__SyncClientLimitTimeForLiveCupWatcher (Dpr_Battle_Logic_MainModule_o* __this, Dpr_Battle_Logic_ServerSendData_CLIENT_LIMIT_TIME_o* time, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__SendClientTimerForLiveCupWatcher (Dpr_Battle_Logic_MainModule_o* __this, System_UInt32_array* timeBuf, uint32_t* num, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__PauseTimerForLiveCup (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule__RestartTimerForLiveCup (Dpr_Battle_Logic_MainModule_o* __this, uint32_t gameTimeS, const MethodInfo* method_info);
uint32_t Dpr_Battle_Logic_MainModule__GetRemainingGameTimeForLiveCup (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_MainModule__GetDetailRule (Dpr_Battle_Logic_MainModule_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_MainModule__GetBallDecoSeals (Dpr_Battle_Logic_MainModule_o* __this, uint8_t pokeID, Dpr_BallDeco_AffixSealData_array** sealData, const MethodInfo* method_info);
Dpr_BallDeco_CapsuleData_o* Dpr_Battle_Logic_MainModule__GetBallDeco (Dpr_Battle_Logic_MainModule_o* __this, uint8_t clientID, Pml_PokePara_PokemonParam_o* pp, const MethodInfo* method_info);
bool Dpr_Battle_Logic_MainModule__IsTurearukiPokemon (Dpr_Battle_Logic_MainModule_o* __this, Pml_PokePara_PokemonParam_o* pp, const MethodInfo* method_info);
void Dpr_Battle_Logic_MainModule___cctor (const MethodInfo* method_info);
