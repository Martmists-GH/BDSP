#pragma once

#include "il2cpp.h"

Dpr_Battle_Logic_Handler_Waza_HandlerGetFunc_o* Dpr_Battle_Logic_Handler_Waza__getHandlerGetFunc (int32_t waza, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__Add (Dpr_Battle_Logic_EventSystem_o* pEventSystem, Dpr_Battle_Logic_BTL_POKEPARAM_o* poke, int32_t waza, uint32_t subPri, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__canRegister (Dpr_Battle_Logic_EventSystem_o* pEventSystem, uint8_t pokeID, int32_t waza, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__Remove (Dpr_Battle_Logic_EventSystem_o* pEventSystem, Dpr_Battle_Logic_BTL_POKEPARAM_o* poke, int32_t waza, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__RemoveForce (Dpr_Battle_Logic_EventSystem_o* pEventSystem, Dpr_Battle_Logic_BTL_POKEPARAM_o* poke, int32_t waza, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__removeHandlerForce (Dpr_Battle_Logic_EventSystem_o* pEventSystem, uint8_t pokeID, int32_t waza, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__RemoveForceAll (Dpr_Battle_Logic_EventSystem_o* eventSystem, Dpr_Battle_Logic_BTL_POKEPARAM_o* poke, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__common_checkActStart_isMyWaza (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t* pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__common_IsMyEvent (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint16_t pokeIDLabel, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_common_ExeCheck2nd_FailOnRaid (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_common_ExeCheck2nd_FailOnRaidPlayerSide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_common_ExeCheck2nd_FailOnRaidBoss (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_common_ExeCheck3rd_FailToG (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_common_ExeCheck3rd_FailToGWall (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_Handler_Waza__getEventVarTarget (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, int32_t n, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__common_SetWazaEffectIndex (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t effectIndex, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Texture (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Texture (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_TrickRoom (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TrickRoom (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Juryoku (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Juryoku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Kiribarai (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Kiribarai (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Kawarawari (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Kawarawari_DmgProc1 (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Kawarawari_DmgProcEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Kawarawari_DmgDetermine (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__handler_Kawarawari_SkipCheck (Dpr_Battle_Logic_EventFactor_SkipCheckHandlerArgs_o** args, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Tobigeri (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Tobigeri_NoEffect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Monomane (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Monomane (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Sketch (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Sketch (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_Handler_Waza__sketch_GetTargetWaza (Dpr_Battle_Logic_BTL_POKEPARAM_o* target, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_KonoyubiTomare (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KonoyubiTomare_ExeCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KonoyubiTomare_Exe (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KonoyubiTomare_TemptTarget (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KonoyubiTomare_TurnCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Ikarinokona (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Ikarinokona_TemptTarget (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_KumoNoSu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KumoNoSu_NoEffCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KumoNoSu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_KuroiKiri (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KuroiKiri (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Haneru (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Haneru_CheckFail (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Haneru (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Oiwai (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Oiwai (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_TeWoTunagu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TeWoTunagu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Noroi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Noroi_WazaParam (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Noroi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Noroi_ExeCheck3rd_FailToGWall (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Denjiha (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Denjiha (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_NayamiNoTane (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_NayamiNoTane_NoEff (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_NayamiNoTane (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Yumekui (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Yumekui (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_TriAttack (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TriAttack (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Nettou (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Nettou (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_UtakatanoAria (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_UtakatanoAria (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Osyaberi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Osyaberi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Makituku (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Makituku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Makituku_Str (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__makituku_GetStr (uint16_t* pStrID, int32_t wazano, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Uzusio (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Uzusio_CheckHide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Uzusio_Dmg (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_IkariNoMaeba (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_IkariNoMaeba (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
uint16_t Dpr_Battle_Logic_Handler_Waza__common_CalcFixDamageByDefenderHp (Dpr_Battle_Logic_BTL_POKEPARAM_o* target, uint8_t numerator, uint8_t denominator, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Gamusyara (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Gamusyara_CheckNoEffect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Gamusyara (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_TikyuuNage (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TikyuuNage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Takuwaeru (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Takuwaeru_CheckExe (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Takuwaeru (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Hakidasu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Hakidasu_CheckExe (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Hakidasu_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Hakidasu_Done (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Nomikomu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Nomikomu_Ratio (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Counter (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Counter_CheckExe (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Counter_Target (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Counter_CalcDamage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_MilerCoat (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MilerCoat_CheckExe (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MilerCoat_Target (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MilerCoat_CalcDamage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_MetalBurst (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MetalBurst_CheckExe (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MetalBurst_Target (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MetalBurst_CalcDamage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__common_Counter_ExeCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, int32_t* dmgType, uint8_t* pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__common_Counter_SetTarget (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, int32_t* dmgType, uint8_t* pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__common_Counter_CalcDamage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, int32_t* dmgType, int32_t* ratio, uint8_t* pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__common_Counter_GetRec (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, int32_t* dmgType, Dpr_Battle_Logic_BTL_POKEPARAM_WAZADMG_REC_o* rec, uint8_t* pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Totteoki (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Totteoki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Ibiki (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Ibiki_CheckFail_1 (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Ibiki_CheckFail_2 (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Fuiuti (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Fuiuti_NoEff (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__handler_Fuiuti_CheckSuccess (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t targetPokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Daibakuhatsu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Daibakuhatsu_ExeStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Daibakuhatsu_DmgDetermine (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Daibakuhatsu_ExeFix (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Kiaidame (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Kiaidame (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Juden (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Juden_Exe (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Juden_RemoveAllTarget (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Juden_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Juden_WazaStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Juden_WazaEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_HorobiNoUta (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_HorobiNoUta_Exe (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_YadorigiNoTane (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_YadorigiNoTane_Param (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_NekoNiKoban (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_NekoNiKoban (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_AquaRing (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_AquaRing (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Abareru (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Abareru (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__abareru_Unlock (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t* pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Abareru_SeqEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Abareru_turnCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Sawagu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Sawagu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__Sawagu_CureLock (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Sawagu_SeqEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Sawagu_turnCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Sawagu_CheckSickFail (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Sawagu_CheckInemuri (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Korogaru (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Korogaru_ExeFix (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Korugaru_Avoid (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Korogaru_NoEffect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Korogaru_SeqEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__common_Korogaru_Unlock (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Korogaru_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_TripleKick (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TripleKick (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TripleKick_HitCount (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_GyroBall (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_GyroBall (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
uint16_t Dpr_Battle_Logic_Handler_Waza__common_CalcAgility (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Revenge (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Revenge (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Jitabata (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Jitabata (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Karagenki (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Karagenki_AtkPow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Karagenki_WazaPow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Sippegaesi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Sippegaesi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Funka (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Funka (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Siboritoru (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Siboritoru (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Siomizu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Siomizu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_RenzokuGiri (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_RenzokuGiri (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Dameosi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Dameosi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Ketaguri (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Ketaguri (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_WeatherBall (const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__get_WeatherBallParam (Dpr_Battle_Logic_Handler_Waza_WeatherBallParam_o* param, uint8_t weather, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_WeatherBall_Type (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_WeatherBall_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_WeatherBall_ChangeGWaza (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Tatumaki (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Tatumaki_checkHide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Tatumaki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Kaminari (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Kaminari_checkHide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Kaminari_excuseHitCalc (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Kaminari_hitRatio (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Fubuki (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Fubuki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_ZettaiReido (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_ZettaiReido_hitRatio (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Jisin (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Jisin_checkHide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Jisin_damage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_SabakiNoTubute (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_SabakiNoTubute (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_MultiAttack (const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_Handler_Waza__multiAttack_GetType (uint16_t item, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MultiAttack (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MultiAttack_ChangeGWaza (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_TechnoBaster (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__technoBaster_GetParam (uint8_t* pType, uint8_t* pEffectIdx, uint16_t item, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TechnoBaster (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TechnoBaster_ChangeGWaza (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_MezameruPower (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MezameruPower_Type (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Hatakiotosu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Hatakiotosu_WazaPow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Hatakiotosu_EndHit (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_MagicCoat (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MagicCoat_ExeCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MagicCoat (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MagicCoat_Wait (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MagicCoat_Reflect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MagicCoat_TurnCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Dorobou (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Dorobou_Start (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Dorobou (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Trick (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Trick (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Naminori (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Naminori_checkHide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Naminori (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Fumituke (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Fumituke_DamegeProc (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Fumituke_HitCheckSkip (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_DaiMaxHou (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_DaiMaxHou_DamegeProc (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Mineuti (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Mineuti (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Koraeru (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Koraeru (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Koraeru_Check (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Koraeru_TurnCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Mamoru (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Mamoru_StartSeq (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Mamoru_ExeCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Mamoru_ExeFail (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__handler_Mamoru_Core (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t* pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__IncrementMamoruCounter (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t* pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Mamoru (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__mamoru_MsgAfterCritical (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t* pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Mamoru_Dmg (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Mamoru_MsgAfterCritical (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Mamoru_Off (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Recycle (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Recycle (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_PsycoShift (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_PsycoShift (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Itamiwake (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Itamiwake (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__itamiwake_CalcShiftHP (int32_t* pAttackerHP, int32_t* pDefenderHP, Dpr_Battle_Logic_BTL_POKEPARAM_o* pAttacker, Dpr_Battle_Logic_BTL_POKEPARAM_o* pDefender, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Haradaiko (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Haradaiko (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Feint (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Feint_MamoruBreak (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Feint_NoEffCheckBegin (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Feint_NoEffCheckEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__SleepGuardSideEffects (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, bool wakeFlag, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__SleepGuardSideEffect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t attackPokeId, uint8_t targetPokeId, bool wakeFlag, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Feint_AfterDamage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__common_feint_proc (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint16_t strID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__common_mamoruBreakAfter (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t attackPokeID, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, uint16_t strID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__common_mamoruBreak_RemoveSideEff (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__common_IsExistGuardTypeSideEffect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t targetPokeID, bool bIncludeNotCountupType, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_IjigenHall (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_IjigenHall_AfterDamage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_TuboWoTuku (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TuboWoTuku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Nemuru (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Nemuru_exeCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Nemuru (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Meromero (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Meromero_CheckNoEffect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Texture2 (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Texture2 (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Encore (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Encore (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Chouhatu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Chouhatu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Kanasibari (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Kanasibari (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_Handler_Waza__kanashibari_GetTargetWaza (Dpr_Battle_Logic_BTL_POKEPARAM_o* target, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Present (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Present_Check (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Present_Fix (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Present_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Fuuin (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Fuuin (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Alomatherapy (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Alomatherapy_Exe (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Alomatherapy (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_IyasiNoSuzu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_IyasiNoSuzu_Exe (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_IyasiNoSuzu_RemoveAllTarget (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_IyasiNoSuzu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__common_CureFriendPokeSick (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t attackerID, bool excludeOutOfWazaTarget, bool canWriteGenFlag, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Okimiyage (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Okimiyage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Urami (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Urami (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_JikoAnji (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_JikoAnji (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_HeartSwap (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_HeartSwap (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_PowerSwap (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_PowerSwap (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_GuardSwap (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_GuardSwap (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_PowerTrick (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_PowerTrick (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_PowerShare (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_PowerShare (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_GuardShare (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_GuardShare (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_LockON (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_LockON (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Dokudoku (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Dokudoku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Dokudoku_Done (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Reflector (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Reflector (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_HikariNoKabe (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_HikariNoKabe (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_SinpiNoMamori (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_SinpiNoMamori (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_SiroiKiri (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_SiroiKiri (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Oikaze (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Oikaze (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Makibisi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Makibisi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Dokubisi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Dokubisi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_StealthRock (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_StealthRock (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_NebaNebaNet (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_NebaNebaNet (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_WideGuard (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_WideGuard_ExeCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_WideGuard (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_TatamiGaeshi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TatamiGaeshi_ExeCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TatamiGaeshi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__common_SideEffectStdMsg (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t* pokeID, int32_t side, int32_t effect, Dpr_Battle_Logic_BTL_SICKCONT_o* cont, uint16_t strID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__common_SideEffectCore (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, int32_t side, int32_t effect, Dpr_Battle_Logic_BTL_SICKCONT_o* cont, int32_t strType, uint32_t strID, int32_t strArg, bool replaceStrArg0ByExpandSide, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Hensin (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Hensin (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_MikadukiNoMai (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MikadukiNoMai (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_IyasiNoNegai (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_IyasiNoNegai (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Negaigoto (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Negaigoto (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Miraiyoti (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Miraiyoti (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Miraiyoti_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__common_delayAttack (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t targetPos, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_HametuNoNegai (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_HametuNoNegai (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_HametuNoNegai_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Ieki (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Ieki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Narikiri (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Narikiri (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_TonboGaeri (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TonboGaeri (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_KousokuSpin (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KousokuSpin (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_BatonTouch (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_BatonTouch (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Teleport (const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__teleport_isQuitBattle (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t* pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__teleport_canQuitBattle (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t* pFailCause, uint8_t* pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Teleport_ExeCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Teleport_ExeCheck_QuitBattle (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Teleport_ExeCheck_ChangePokemon (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Teleport (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Teleport_QuitBattle (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Teleport_ChangePokemon (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Teleport_ExMsg (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Nagetukeru (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Nagetukeru_ExeCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Nagetukeru_WazaPower (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Nagetukeru_DmgProcStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Nagetukeru_DmgAfter (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Nagetukeru_Done (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_DenjiFuyuu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_DenjiFuyuu_CheckFail (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_DenjiFuyuu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Tedasuke (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Tedasuke_SkipAvoid (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Tedasuke_CheckHide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Tedasuke_Ready (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__tedasuke_IsSuccess (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Tedasuke_WazaPow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Tedasuke_TurnCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_FukuroDataki (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_FukuroDataki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_FukuroDataki_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_BTL_POKEPARAM_o* Dpr_Battle_Logic_Handler_Waza__common_FukuroDataki_GetParam (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t myPokeID, uint8_t idx, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Nekodamasi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Nekodamasi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Deaigasira (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Deaigasira (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_AsaNoHizasi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_AsaNoHizasi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Sunaatume (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Sunaatume (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_FlowerHeal (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_FlowerHeal (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_SoraWoTobu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_SoraWoTobu_TameStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_ShadowDive (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_ShadowDive_TameStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_ShadowDive_AfterDamage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Tobihaneru (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Tobihaneru_TameStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Diving (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Diving_TameStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_AnaWoHoru (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_AnaWoHoru_TameStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_SolarBeam (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_SolarBeam_TameSkip (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_SolarBeam_TameStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_SolarBeam_Power (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_GodBird (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_GodBird_TameStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_RocketZutuki (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_RocketZutuki_TameStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Tuibamu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Tuibamu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Hoobaru (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Hoobaru (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Hoobaru_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Waruagaki (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Waruagaki_KickBack (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Waruagaki_SeqStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Waruagaki_WazaParam (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Michidure (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Michidure_CheckFail (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__stickMitidureFactor (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t* pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Michidure_Ready (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__removeMitidureFactor (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t* pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Michidure_ActStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Michidure_WazaDamage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Onnen (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__stickOnnenFactor (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__removeOnnenFactor (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Onnen_Ready (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Onnen_WazaDamage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Onnen_ActStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Tiisakunaru (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Tiisakunaru (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Marukunaru (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Marukunaru (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Haneyasume (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Haneyasume (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_KiaiPunch (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KiaiPunch (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_YubiWoFuru (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_YubiWoFuru (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_YubiWoFuru_Msg (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_SizenNoTikara (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_SizenNoTikara (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_SizenNoTikara_Msg (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Negoto (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Negoto (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Manekko (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Manekko_CheckParam (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_Handler_Waza__manekko_GetTargetWaza (Dpr_Battle_Logic_BattleEnv_o* pBattleEnv, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_GensiNoTikara (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_GensiNoTikara (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_BenomShock (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_BenomShock (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Tatarime (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Tatarime (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Acrobat (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Acrobat (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_AsistPower (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_AsistPower (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_HeavyBomber (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_HeavyBomber (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_HeatStamp (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_ElectBall (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_ElectBall (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_EchoVoice (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_EchoVoice (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Katakiuti (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Katakiuti (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Ikasama (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Ikasama (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_BodyPress (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_BodyPress (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Mizubitasi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Mizubitasi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_MahouNoKona (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MahouNoKona (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_SimpleBeem (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_SimpleBeem (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_NakamaDukuri (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_NakamaDukuri (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_ClearSmog (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_ClearSmog (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Yakitukusu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Yakitukusu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_TomoeNage (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TomoeNage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Hoeru (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Hoeru (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Utiotosu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Utiotosu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__common_UtiotosuEffect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t atkPokeID, uint8_t targetPokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__common_UtiotosuEffect_falldown (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t atkPokeID, uint8_t targetPokeID, Dpr_Battle_Logic_BTL_POKEPARAM_o* bppTarget, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_KarawoYaburu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KarawoYaburu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_MirrorType (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MirrorType (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_BodyPurge (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_BodyPurge (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_PsycoShock (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_PsycoShock (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_NasiKuzusi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_NasiKuzusi_CalcDmg (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_NasiKuzusi_HitCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_WonderRoom (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_WonderRoom (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_MagicRoom (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MagicRoom (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Inotigake (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Inotigake_CalcDamage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Inotigake_CheckDead (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_OsakiniDouzo (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_OsakiniDouzo (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Sakiokuri (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Sakiokuri (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Rinsyou (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Rinsyou (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Rinsyou_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_FastGuard (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_FastGuard (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_SideChange (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_SideChange (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_CourtChange (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_CourtChange (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_InisieNoUta (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_InisieNoUta (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Seityou (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Seityou (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_FreezeBolt (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_FreezeBolt_TameStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_FlameSoul (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_FlameSoul_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_Handler_Waza__GetCombiWazaType (int32_t waza1, int32_t waza2, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_CombiWazaCommon (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_CombiWaza_CheckExe (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_CombiWaza_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_CombiWaza_TypeMatch (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_CombiWaza_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_CombiWaza_ChangeEff (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_CombiWaza_AfterDmg (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Halloween (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Halloween (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Morinonoroi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Morinonoroi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_FlowerGuard (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Tagayasu_CheckHide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_FlowerGuard (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__common_GuardUpByPokeType (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t pokeType, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_TodomeBari (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TodomeBari (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_KogoeruHadou (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KogoeruHadou (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Hikkurikaesu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Hikkurikaesu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_NeraiPunch (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_NeraiPunch (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_SuteZerifu (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_FlyingPress (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_FlyingPress (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_FreezDry (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_FreezDry (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Souden (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Souden (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_GrassField (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_GrassField (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_MistField (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MistField (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_ElecField (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_ElecField (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_PhychoField (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_PhychoField (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_common_GroundSet (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t ground, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_KingShield (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KingShield (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__kingShield_Success (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t* pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KingShield_Success (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KingShield_MsgAfterCritical (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KingShield_DmgReaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Blocking (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__Blocking_Success (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t* pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Blocking_Success (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Blocking_DmgReaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_ThousanArrow (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_ThousanArrow_CancelFloat (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_ThousanArrow_AffEnable (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_ThousanArrow_CheckAffine (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_ThousanArrow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_HappyTime (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_HappyTime (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_ZibaSousa (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_ZibaSousa (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_BenomTrap (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_BenomTrap (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_PlasmaFist (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_PlasmaFist (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_FairyLock (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_FairyLock (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Funjin (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Funjin (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_GeoControl (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_GeoControl_TameStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_TrickGuard (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TrickGuard (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_NeedleGuard (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__needleGuard_Success (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t* pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_NeedleGuard_Success (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_NeedleGuard_DmgReaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_SouthernWave (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_southernWave (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_IjigenRush (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_IjigenRush (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_IjigenRush_AfterDamage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_AuraGuruma (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_AuraGuruma (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_AuraGuruma_Waza (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_AuraGuruma_ChangeGWaza (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_DarkHole (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_DarkHole (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Tootika (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__tootika_Success (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t* pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Tootika_Success (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Tootika_DmgReaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_MezameruDance (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MezameruDance_WazaParam (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Kahundango (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Kahundango_ExecuteCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Kahundango_RecoverCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Kahundango_RecoverFix (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Kahundango_Check_Affinity (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_CorePunisher (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_CorePunisher_HitReal (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Kagenui (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Kagenui_HitReal (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Kuraituku (const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__kuraitukuCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, Dpr_Battle_Logic_BTL_POKEPARAM_o* attack, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__kuraitukuSet (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t attackPokeID, uint8_t targetPokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Kuraituku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_TakoGatame (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TakoGatame_NoEffCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_takoGatame (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Zyouka (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Zyouka (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Tikarawosuitoru (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Tikarawosuitoru (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Togisumasu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Togisumasu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_SpeedSwap (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_SpeedSwap (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Moetukiru (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Moetukiru_WazaMeltCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Moetukiru_ExeCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Moetukiru_DamageProcEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_KutibasiCanon (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KutibasiCanon_BeforeFight (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KutibasiCanon_DamageReaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KutibasiCanon_WazaSeqEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KutibasiCanon_ReplaceWaza (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KutibasiCanon_Canceled (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_KutibasiCanon_ExeCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_TrapShell (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TrapShell_BeforeFight (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TrapShell_DamageProcEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TrapShell_ExeCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TrapShell_WazaEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Zidanda (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Zidanda_Dmg (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_AuroraVeil (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_AuroraVeil_CheckExe (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_AuroraVeil (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Saihai (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Saihai (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_MeteorDrive (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MeteorDrive_WazaSeqStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_MeteorDrive_WazaSeqEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_ShadowSteal (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_ShadowSteal_DamageProcStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_PhotonGeyser (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_PhotonGeyser_WazaParam (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Hanabisenyou (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Hanabisenyou_dmg_determine (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Hanabisenyou_no_effect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__common_HanabisenyouReaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_DaiWall (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_DaiWall (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_DaiWall_NoEffectCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_NeraiUti (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_NeraiUti_Tempt (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_NeraiUti_Aim (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_HaisuiNoJin (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_HaisuiNoJin_ExeCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_HaisuiNoJin (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_SoulBeat (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_SoulBeat_CheckExe (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_SoulBeat_Damage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Ochakai (const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Waza__ochakai_EatNuts (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Ochakai (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_DengekiKutibasi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_DengekiKutibasi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_TarShot (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_TarShot_Str (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_DragonArrow (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_DragonArrow_Param (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_DragonArrow_Inc (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_DragonArrow_Msg (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_InotiNoSizuku (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_InotiNoSizuku_Msg (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Waza__ADD_Newton (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza__handler_Newton (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Waza___cctor (const MethodInfo* method_info);
