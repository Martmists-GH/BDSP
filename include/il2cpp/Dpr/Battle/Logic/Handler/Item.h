#pragma once

#include "il2cpp.h"

Dpr_Battle_Logic_Handler_Item_HandlerGetFunc_o* Dpr_Battle_Logic_Handler_Item__getHandlerGetFunc (uint16_t itemNo, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_o* Dpr_Battle_Logic_Handler_Item__addHandler (Dpr_Battle_Logic_EventSystem_o* pEventSystem, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, uint16_t itemNo, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__Add (Dpr_Battle_Logic_EventSystem_o* pEventSystem, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__Remove (Dpr_Battle_Logic_EventSystem_o* pEventSystem, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_o* Dpr_Battle_Logic_Handler_Item__TMP_Add (Dpr_Battle_Logic_EventSystem_o* pEventSystem, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, uint16_t itemNo, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__TMP_Remove (Dpr_Battle_Logic_EventSystem_o* pEventSystem, Dpr_Battle_Logic_EventFactor_o* factor, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Item__isOccurPer (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t per, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_Handler_Item__common_GetItemParam (Dpr_Battle_Logic_EventFactor_o* factor, int32_t paramID, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_Handler_Item__item_AttackValue_to_Ratio (Dpr_Battle_Logic_EventFactor_o* factor, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__itemPushRun (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Item__isPOKEID (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Item__isPOKEID_ATK (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Item__isPOKEID_DEF (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_Handler_Item__getPOKEID_ATK (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_Handler_Item__getWAZA_TYPE (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Item__getMIGAWARI_FLAG (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_Handler_Item__getTYPEAFF (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, const MethodInfo* method_info);
Dpr_Battle_Logic_BTL_SICKCONTOBJ_o* Dpr_Battle_Logic_Handler_Item__getSickContAddress (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Item__isMonsNo (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint16_t MonsNo, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KuraboNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KuraboNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KuraboNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KagoNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KagoNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KagoNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_ChigoNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_ChigoNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_ChigoNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_NanasiNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_NanasiNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_NanasiNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_MomonNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MomonNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MomonNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KiiNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KiiNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KiiNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_RamNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_RamNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_RamNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__common_sickReaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, int32_t sickCode, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Item__common_useForSick (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, int32_t sickCode, uint16_t itemID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Item__common_sickcode_match (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, int32_t sickCode, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_HimeriNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_HimeriNomi_wazaEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_HimeriNomi_reaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_HimeriNomi_get (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_HimeriNomi_ppDec (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_HimeriNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_HimeriNomi_UseTmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_Handler_Item__common_Himeri_LastWazaIdx (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_Handler_Item__common_Himeri_EnableWazaIdx (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Item__handler_HimeriNomi_common (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, bool fDouble, bool fUseTmp, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_Handler_Item__handler_HimeriNomi_GetTargetWazaIndex (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, bool fUseTmp, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_OrenNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_OrenNomi_Reaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_OrenNomi_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_OrenNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_common_OrenUse (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, bool fDuble, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KinomiJuice (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KinomiJuce_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_ObonNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_ObonNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_TarapuNoMi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_TarapuNoMi_Reaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_TarapuNoMi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_FiraNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_FiraNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_FiraNomi_UseTmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_UiNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_UiNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_UiNomi_UseTmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_MagoNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MagoNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MagoNomi_UseTmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_BanziNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_BanjiNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_BanjiNomi_UseTmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_IaNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_IaNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_IaNomi_UseTmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_common_KaifukuKonran_Reaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_common_KaifukuKonran_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__common_KaifukuKonran (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, int32_t taste, uint16_t itemID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_TiiraNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_TiiraNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_TiiraNomi_Tmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_RyugaNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_RyugaNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_RyugaNomi_Tmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KamuraNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KamuraNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KamuraNomi_Tmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_YatapiNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_YatapiNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_YatapiNomi_Tmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_ZuaNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_ZuaNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_ZuaNomi_Tmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SanNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SanNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SanNomi_Tmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SutaaNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SutaaNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SutaaNomi_Tmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__common_PinchRankup (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, int32_t rankType, uint8_t volume, uint16_t itemID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_NazoNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_NazoNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_NazoNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_OkkaNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_OkkaNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_ItokeNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_ItokeNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SokunoNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SokunoNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_RindoNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_RindoNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_YacheNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_YacheNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_YopuNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_YopuNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_BiarNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_BiarNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SyukaNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SyukaNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_BakouNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_BakouNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_UtanNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_UtanNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_TangaNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_TangaNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_YorogiNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_YorogiNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KasibuNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KasibuNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_HabanNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_HabanNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_NamoNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_NamoNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_RiribaNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_RiribaNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_HozuNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_HozuNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_RozeruNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_RozeruNomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Item__common_WeakAff_Relieve (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t type, bool fIgnoreAffine, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_common_WeakAff_DmgAfter (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_PinchReactCommon (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_PinchReactMemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__common_DamageReact (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint32_t n, bool fCheckReactionType, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Item__common_DamageReactCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint32_t n, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Item__common_DamageReactCheckCore (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint32_t n, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_IbanNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_IbanNomi_SpPriorityCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_IbanNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_common_Kinomi_UseTmp_OnlyConsume (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_MikuruNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MikuruNomi_Reaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MikuruNomi_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MikuruNomi_ActProcEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MikuruNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MikuruNomi_UseTmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_JapoNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_JapoNomi_Damage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_JapoNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__common_JapoRenbu_Reaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, int32_t dmgType, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_RenbuNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_RenbuNomi_Damage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_TotugekiChokki (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_totugekiChokki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_JyakutenHoken (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_JyakutenHoken_Damage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_JyakutenHoken_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SiroiHerb (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SiroiHerb_ActCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SiroiHerb_MemberInComp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SiroiHerb_ActEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SiroiHerb_TurnCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SiroiHerb_Reaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SiroiHerb_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SiroiHerb_UseTmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_MentalHerb (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MentalHerb_React (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MentalHerb_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MentalHerb_UseTmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KaraburiHoken (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KaraburiHoken_Avoid (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KaraburiHoken_Done (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KaraburiHoken_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_HikarinoKona (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_HikarinoKona (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KyouseiGipusu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KyouseiGipusu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SenseiNoTume (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SenseiNoTume_SpPriorityCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SenseiNoTume_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SenseiNoTume_TurnCheckDone (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KoukouNoSippo (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KoukouNoSippo (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_OujaNoSirusi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_OujaNoSirusi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_OujaNoSirusi_UseTmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SurudoiKiba (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KoukakuLens (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KoukakuLens (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_PintLens (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_PintLens (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_LuckyPunch (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_LuckyPunch (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_Naganegi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Naganegi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_FocusLens (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_FocusLens (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_NonkiNoOkou (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_NonkiNoOkou (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_ChikaraNoHachimaki (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_ChikaraNoHachimaki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_MonosiriMegane (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MonosiriMegane (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SinkaiNoKiba (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SinkaiNoKiba (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SinkaiNoUroko (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SinkaiNoUroko (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_MetalPowder (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MetalPowder (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SpeedPowder (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SpeedPowder (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_FutoiHone (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_FutoiHone (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KodawariHachimaki (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KodawariHachimaki_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KodawariMegane (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KodawariMegane_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KodawariScarf (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KodawariScarf (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Kodawari_Common_WazaExe (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Kodawari_Common_ItemChange (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Kodawari_Common_Check (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KiaiNoTasuki (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KiaiNoTasuki_Check (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KiaiNoTasuki_Exe (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KiaiNoHachimaki (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KiaiNoHachimaki_Check (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KiaiNoHachimaki_Exe (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KiaiNoHachimaki_UseItem (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_TatsujinNoObi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_TatsujinNoObi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_InochiNoTama (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_InochiNoTama_Reaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_InochiNoTama_Damage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_MetroNome (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MetroNome (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_NebariNoKagidume (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_NebariNoKagidume (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KaigaraNoSuzu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KaigaraNoSuzu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_HikariNoNendo (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_HikariNoNendo (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_PowefulHarb (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_PowefulHarb_CheckTameSkip (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_PowefulHarb_FixTameSkip (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_PowefulHarb_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_Tabenokosi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Tabenokosi_Reaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Tabenokosi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KuroiHedoro (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KuroiHedoro (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_AkaiIto (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_AkaiIto (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KuttukiBari (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KuttukiBari_DamageReaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KuttukiBari_TurnCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_PowerWrist (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_PowerBelt (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_PowerLens (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_PowerBand (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_PowerAnkle (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_PowerWeight (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_PowerXXX_CalcAgility (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_HinotamaPlate (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SizukuPlate (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_IkazutiPlate (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_MirodinoPlate (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_TuraranoPlate (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KobusinoPlate (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_MoudokuPlate (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_DaitinoPlate (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_AozoraPlate (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_HusiginoPlate (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_TamamusiPlate (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_GansekiPlate (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_MononokePlate (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_RyuunoPlate (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KowamotePlate (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KoutetsuPlate (const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SeireiPlate (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SeireiPlate (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_OokinaNekko (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_OokinaNekko (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_Kemuridama (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Kemuridama (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Kemuridama_Msg (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_OmamoriKoban (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_OmamoriKoban (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_HakkinDama (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_HakkinDama (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_TumetaiIwa (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_TumetaiIwa (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SarasaraIwa (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SarasaraIwa (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_AtuiIwa (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_AtuiIwa (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SimettaIwa (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SimettaIwa (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__common_WazaWeatherTurnUp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t weather, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_DenkiDama (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_DenkiDama (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_DenkiDama_UseTmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_DokudokuDama (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_DokudokuDama (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_DokudokuDama_UseTmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KaenDama (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KaenDama (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KaenDama_UseTmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_GinNoKona (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_GinNoKona (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_YawarakaiSuna (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_YawarakaiSuna (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KataiIsi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KataiIsi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KisekiNoTane (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KisekiNoTane (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KuroiMegane (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KuroiMegane (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_Kuroobi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Kuroobi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_Zisyaku (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Zisyaku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_MetalCoat (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MetalCoat (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SinpiNoSizuku (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SinpiNoSizuku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SurudoiKutibasi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SurudoiKutibasi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_Dokubari (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Dokubari (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Dokubari_UseTmp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_TokenaiKoori (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_TokenaiKoori (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_NoroiNoOfuda (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_NoroiNoOfuda (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_MagattaSupuun (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MagattaSupuun (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_Mokutan (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Mokutan (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_RyuunoKiba (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_RyuunoKiba (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SirukuNoSukaafu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SirukuNoSukaafu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_AyasiiOkou (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_AyasiiOkou (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_GansekiOkou (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_GansekiOkou (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SazanamiNoOkou (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SazanamiNoOkou (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_UsioNoOkou (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_UsioNoOkou (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_OhanaNoOkou (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_OhanaNoOkou (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__common_PowerUpSpecificType (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t type, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KokoroNoSizuku (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KokoroNoSizuku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_Siratama (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Siratama (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_Kongoudama (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Kongoudama (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KuroiTekkyuu (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KuroiTekkyuu_Agility (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KuroiTekkyuu_CheckFly (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_Karuisi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Karuisi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SinkanoKiseki (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SinkanoKiseki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_GotugotuMet (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_GotugotuMet (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_Huusen (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Huusen_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Huusen_CheckFlying (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Huusen_DamageReaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Huusen_ItemSetFixed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_RedCard (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_RedCard (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_NerainoMato (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_NerainoMato (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_SimetukeBand (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_SimetukeBand (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_Kyuukon (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Kyuukon_DmgReaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Kyuukon_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_AkkiNomi (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_AkkiNomi_DmgReaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_AkkiNomi_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_HikariGoke (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_HikariGoke_DmgReaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_HikariGoke_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_Yukidama (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Yukidama_DmgReaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_Juudenti (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Juudenti_DmgReaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__hand_common_TypeDamageRankUp_Reaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t wazaType, int32_t rankValue, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Juudenti_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_NodoAme (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_NodoAme_Waza (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_NodoAme_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_DassyutuButton (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_DassyutuButton_Reaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_DassyutuButton_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_DassyutuPack (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_DassyutuPack_Reaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_DassyutuPack_Launch (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_DassyutuPack_TurnCheckDone (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_DassyutuPack_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_BoujinGoggle (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_BoujinGoggle_CalcDamage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_BoujinGoggle_WazaNoEffect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_BannouGasa (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_BannouGasa (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_HonooNoJuel (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_HonooNoJuel_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_HonooNoJuel_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_MizuNoJuel (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MizuNoJuel_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MizuNoJuel_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_DenkiNoJuel (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_DenkiNoJuel_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_DenkiNoJuel_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KusaNoJuel (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KusaNoJuel_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KusaNoJuel_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KooriNoJuel (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KooriNoJuel_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KooriNoJuel_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_KakutouJuel (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KakutouJuel_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_KakutouJuel_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_DokuNoJuel (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_DokuNoJuel_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_DokuNoJuel_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_JimenNoJuel (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_JimenNoJuel_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_JimenNoJuel_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_HikouNoJuel (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_HikouNoJuel_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_HikouNoJuel_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_EsperJuel (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_EsperJuel_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_EsperJuel_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_MusiNoJuel (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MusiNoJuel_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MusiNoJuel_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_IwaNoJuel (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_IwaNoJuel_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_IwaNoJuel_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_GhostJuel (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_GhostJuel_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_GhostJuel_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_DragonJuel (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_DragonNoJuel_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_DragonNoJuel_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_AkuNoJuel (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_AkuNoJuel_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_AkuNoJuel_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_HaganeNoJuel (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_HaganeNoJuel_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_HaganeNoJuel_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_NormalJuel (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_NormalJuel_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_NormalJuel_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_YouseiJuel (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_YouseiJuel_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_YouseiJuel_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__common_Juel_Decide (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t type, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__common_Juel_Power (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t type, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Juel_EndDmgSeq (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_Aiironotama (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Aiironotama_Shinka (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_Beniironotama (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Beniironotama_Shinka (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_GroundCoat (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_GroundCoat (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_Bibiridama (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Bibiridama_RankEffectLastCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Bibiridama_RankEffectFailed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_Bibiridama_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_ElecSeed (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_ElecSeed_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_ElecSeed_ChangeGroundAfter (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_ElecSeed_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_PhychoSeed (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_PhychoSeed_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_PhychoSeed_ChangeGroundAfter (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_PhychoSeed_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_MistSeed (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MistSeed_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MistSeed_ChangeGroundAfter (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_MistSeed_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_GrassSeed (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_GrassSeed_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_GrassSeed_ChangeGroundAfter (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_GrassSeed_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__common_Seed_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t ground, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__common_Seed_ChangeGroundAfter (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t ground, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__common_Seed_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, int32_t rankType, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_RoomService (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_RoomService_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_RoomService_ChangeFieldAfter (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_RoomService_Use (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_BougoPad (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_BougoPad_SimpleDamageEnable (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_BougoPad_SimpleDamageFailed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_BougoPad_AddSick_CheckFail (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_BougoPad_RankEffect_LastCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_BougoPad_RankEffect_Failed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_BougoPad_TokuseiChangeCheckFail (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_BougoPad_TokuseiChangeFailed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__BougoPad_Guard (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, bool isGuardMessageEnable, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__BougoPad_GuardMessage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Item__ADD_AtuzokoBoots (const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_AtuzokoBoots_SimpleDamageEnable (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_AtuzokoBoots_AddSickCheckFail (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item__handler_AtuzokoBoots_RankEffectLastCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Item___cctor (const MethodInfo* method_info);
