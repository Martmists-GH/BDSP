#pragma once

#include "il2cpp.h"

uint32_t Dpr_Battle_Logic_Handler_Tokusei__numHandlersWithHandlerPri (uint16_t pri, uint16_t numHandlers, const MethodInfo* method_info);
uint16_t Dpr_Battle_Logic_Handler_Tokusei__calcTokHandlerSubPriority (Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__isOccurPer (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o* args, uint8_t per, const MethodInfo* method_info);
Dpr_Battle_Logic_Handler_Tokusei_HandlerGetFunc_o* Dpr_Battle_Logic_Handler_Tokusei__getHandlerGetFunc (int32_t tokusei, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__Add (Dpr_Battle_Logic_EventSystem_o* pEventSystem, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__Remove (Dpr_Battle_Logic_EventSystem_o* pEventSystem, Dpr_Battle_Logic_BTL_POKEPARAM_o* bpp, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__Swap (Dpr_Battle_Logic_EventSystem_o* pEventSystem, Dpr_Battle_Logic_BTL_POKEPARAM_o* pp1, Dpr_Battle_Logic_BTL_POKEPARAM_o* pp2, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__common_IsShineLocalWeather (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_IkakuNoEffect_RankEffectLastCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t workIdx, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_IkakuNoEffect_RankEffectFailed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t workIdx, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Ikaku (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Ikaku_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Seisinryoku (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Seisinryoku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Seisinryoku_RankEffectLastCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Seisinryoku_RankEffectFailed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Fukutsuno (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FukutsunoKokoro (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_AtuiSibou (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_AtuiSibou (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Tikaramoti (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tikaramoti (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Suisui (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Suisui (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Youryokuso (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Youryokuso (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Hayaasi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Hayaasi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Tidoriasi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tidoriasi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Harikiri (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Harikiri_HitRatio (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Harikiri_AtkPower (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Atodasi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Atodasi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_SlowStart (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SlowStart_Agility (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SlowStart_AtkPower (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SlowStart_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_SlowStart_Declare (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SlowStart_TurnCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Fukugan (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Fukugan (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Sunagakure (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Sunagakure (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Sunagakure_Weather (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Yukigakure (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Yukigakure (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Yukigakure_Weather (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_weather_guard (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t weather, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Iromegane (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Iromegane (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_HardRock (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_HardRock (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Sniper (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Sniper (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Kasoku (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Kasoku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Tekiouryoku (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tekiouryoku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Mouka (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Mouka (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Gekiryu (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Gekiryu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Sinryoku (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Sinryoku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_MusinoSirase (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MusinoSirase (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_hpborder_powerup (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t* pokeID, uint8_t* wazaType, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Konjou (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Konjou (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Plus (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_PlusMinus (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__checkExistTokuseiFriend (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, int32_t tokuseiID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_FlowerGift (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FlowerGift_MemberInComp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FlowerGift_GotTok (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FlowerGift_Weather (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FlowerGift_TokOff (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FlowerGift_AirLock (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FlowerGift_TokChange (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FlowerGift_Power (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FlowerGift_Guard (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__checkFlowerGiftEnablePokemon (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_FlowerGift_FormChange (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t nextForm, uint8_t fTokWin, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Tousousin (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tousousin (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Technician (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Technician (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_TetunoKobusi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_TetunoKobusi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Sutemi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Sutemi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_FusiginaUroko (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FusiginaUroko (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_SkillLink (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SkillLink (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_KairikiBasami (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_KairikiBasami_Check (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_KairikiBasami_Guard (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Surudoime (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Surudoime_Check (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Surudoime_Guard (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Surudoime_HitRank (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_ClearBody (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_ClearBody_Check (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_ClearBody_Guard (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_RankDownGuard_Check (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t* pokeID, int32_t* rankType, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_RankDownGuard_Fixed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t* pokeID, uint8_t* tokwin_pokeID, uint16_t* strID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Tanjun (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tanjun (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_LeafGuard (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_LeafGuard (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_LeafGuard_InemuriCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Juunan (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Juunan_PokeSick (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Juunan_Wake (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Juunan_ActEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Fumin (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Fumin_PokeSick (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Fumin_Wake (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Fumin_ActEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Fumin_InemuriCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_MagumaNoYoroi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MagumaNoYoroi_PokeSick (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MagumaNoYoroi_Wake (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MagumaNoYoroi_ActEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Meneki (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Meneki_PokeSick (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Meneki_Wake (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Meneki_ActEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_MizuNoBale (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MizuNoBale_PokeSick (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MizuNoBale_Wake (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MizuNoBale_ActEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_MyPace (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MyPace_PokeSick (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MyPace_AddSickFailed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MyPace_Wake (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MyPace_ActEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MyPace_RankEffectLastCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MyPace_RankEffectFailed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Donkan (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Donkan (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Donkan_Wake (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Donkan_ActEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Donkan_NoEffCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_AddSickFailed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint16_t strID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_AddSickFailCommon (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_TokuseiWake_CureSick (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, int32_t sick, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_TokuseiWake_CureSickCore (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, int32_t sick, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Donkan_RankEffectLastCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Donkan_RankEffectFailed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_PastelVeil (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Pastelveil_SickFail (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Pastelveil_SickFailed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_PastelVeil_Wake (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_PastelVeil_ActEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_FriendCureSick (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, int32_t cureSick, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Amefurasi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Amefurasi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Hideri (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Hideri (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Sunaokosi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Sunaokosi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Sunahaki (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Sunahaki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Yukifurasi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Yukifurasi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Hajimarinoumi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Hajimarinoumi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Hajimarinoumi_stop (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Owarinodaiti (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Owarinodaichi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Owarinodaichi_stop (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_DeltaStream (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_DeltaStream (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_DeltaStream_stop (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_weather_change (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t weather, uint16_t boostItem, bool isPermanent, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_weather_stop (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t weather, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__common_check_tokusei (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t selfPokeId, uint16_t tokusei, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_AirLock (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_AirLock_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_AirLock_ChangeWeather (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_IcoBody (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_IceBody (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_AmeukeZara (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_AmeukeZara (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_weather_recover (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t weather, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_SunPower (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SunPower_Weather (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SunPower_AtkPower (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Rinpun (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Rinpun_Sick (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Rinpun_Rank (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Rinpun_Shrink (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Rinpun_Guard (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Rinpun_GuardHitEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_TennoMegumi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_TennoMegumi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_TennoMegumi_Shrink (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_UruoiBody (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_UruoiBody (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Dappi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Dappi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_PoisonHeal (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_PoisonHeal (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_KabutoArmor (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_KabutoArmor (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Kyouun (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Kyouun (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_IkarinoTubo (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_IkarinoTubo (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_DokunoToge (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_DokunoToge (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Seidenki (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Seidenki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_HonoNoKarada (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_HonoNoKarada (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_MeromeroBody (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MeromeroBody (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Housi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Housi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_touchAddSick (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o* args, uint8_t pokeID, int32_t sick, Dpr_Battle_Logic_BTL_SICKCONT_o* sickCont, uint8_t per, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Samehada (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Samehada (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Yuubaku (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Yuubaku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_HorobiNoSango (uint8_t* prio, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__common_Horobinouta (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t* pokeID, Dpr_Battle_Logic_BTL_POKEPARAM_o* target, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_HorobiNoSango (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Hensyoku (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Hensyoku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Syncro (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Syncro (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Isiatama (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Isiatama (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_NormalSkin (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_NormalSkin (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_NormalSkin_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_NormalSkin_ChangeGWaza (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Trace (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Trace (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_SizenKaifuku (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SizenKaifuku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_DownLoad (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Download (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Yotimu (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Yotimu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_Handler_Tokusei__get_yotimu_wazapri (int32_t waza, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_KikenYoti (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_KikenYoti (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__check_kikenyoti_enemys (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t* pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__check_kikenyoti_poke (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, Dpr_Battle_Logic_BTL_POKEPARAM_o* bppUser, Dpr_Battle_Logic_BTL_POKEPARAM_o* bppEnemy, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Omitoosi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Omitoosi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Ganjou (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Ganjou_Ichigeki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Ganjou_KoraeCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Ganjou_KoraeExe (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Tennen (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tennen_hitRank (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tennen_AtkRank (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tennen_DefRank (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Tainetu (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tainetsu_WazaPow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tainetsu_SickDmg (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__common_TypeNoEffect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t wazaType, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_TypeRecoverHP (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t denomHP, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_TypeNoEffect_Rankup (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, int32_t rankType, uint8_t volume, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Kansouhada (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Kansouhada_Weather (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Kansouhada_WazaPow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Kansouhada_Check (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_PunkRock (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_PunkRock_power (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_PunkRock_damage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Tyosui (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tyosui_Check (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Tikuden (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tikuden_CheckEx (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_DenkiEngine (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_DenkiEngine_CheckEx (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Kimottama (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Kimottama (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Kimottama_kill (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Kimottama_check (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Kimottama_RankEffectLastCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Kimottama_RankEffectFailed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Bouon (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Bouon (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Fuyuu (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Fuyuu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Fuyuu_Disp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Fuyuu_TurnCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_FusiginaMamori (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FusiginaMamori (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Namake (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Namake (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Namake_Get (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Nameke_Failed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Nameke_EndAct (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Nameke_Reset (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Simerike (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Simerike (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Simerike_Effective (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Simerike_StartSeq (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Simerike_EndSeq (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Simerike_Ieki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__handler_Simerike_SkipCheck (Dpr_Battle_Logic_EventFactor_SkipCheckHandlerArgs_o** args, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Moraibi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Moraibi_CheckNoEffect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Moraibi_AtkPower (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Moraibi_Remove (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Nightmare (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Nightmare (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Nigeasi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Nigeasi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Nigeasi_Msg (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Katayaburi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Katayaburi_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Katayaburi_Start (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Katayaburi_End (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Katayaburi_Ieki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Tenkiya (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tenkiya_MemberInComp (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tenkiya_GetTok (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tenkiya_Weather (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tenkiya_AirLock (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tenkiya_ChangeTok (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tenkiya_TokOff (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_Tenkiya_Off (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_TenkiFormChange (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Yobimizu (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Yobimizu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Yobimizu_TemptTargetEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Yobimizu_CheckNoEffect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Hiraisin (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Hiraisin (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Hiraisin_TemptTargetEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Hiraisin_WazaExeStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Hiraisin_CheckNoEffect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_WazaTargetChangeToMe (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t wazaType, uint8_t temptPriority, uint8_t temptCause, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Kyuuban (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Kyuuban (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_HedoroEki (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_HedoroEki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_HedoroEki_Dead (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Bukiyou (uint8_t* prio, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__handler_Bukiyou_SkipCheck (Dpr_Battle_Logic_EventFactor_SkipCheckHandlerArgs_o** args, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Bukiyou_MemberInPrev (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Bukiyou_PreChange (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Bukiyou_IekiFixed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Bukiyou_ExeCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Bukiyou_ExeFail (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Nenchaku (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Nenchaku_NoEff (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Nenchaku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Nenchaku_Reaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Pressure (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Pressure_MemberIN (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Pressure (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_MemberInTokMessage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint16_t strID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_MagicGuard (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MagicGuard (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Akusyuu (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Akusyuu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Kagefumi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Kagefumi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Arijigoku (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Arijigoku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Jiryoku (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Jiryoku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Karuwaza (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Karuwaza_BeforeItemSet (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Karuwaza_Agility (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Monohiroi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Monohiroi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__monohiroi_search (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t* targetPokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_TamaHiroi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_TamaHiroi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_WaruiTeguse (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_WaruiTeguse (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_NorowareBody (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_NorowareBody (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_KudakeruYoroi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_KudakeruYoroi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Tikarazuku (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tikarazuku_WazaPow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tikarazuku_CheckFail (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tikarazuku_ShrinkCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Tikarazuku_HitChk (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__IsTikarazukuEffecive (int32_t waza, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Makenki (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Makenki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Katiki (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Katiki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Yowaki (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Yowaki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_MultiScale (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MultiScale (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_FriendGuard (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_NakamaIsiki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_IyasiNoKokoro (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_IyasiNoKokoro (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Dokubousou (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Dokubousou (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Netubousou (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Netubousou (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Telepassy (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_AunNoIki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Murakke (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Murakke (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Boujin (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Boujin_CalcDamage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Boujin_WazaNoEffect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Dokusyu (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Dokusyu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_SaiseiRyoku (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SaiseiRyoku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Hatomune (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Hatomune_Check (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Hatomune_Guard (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Sunakaki (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Sunakaki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_MilacreSkin (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MilacreSkin (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Analyze (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Sinuti (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_SunanoTikara (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SunanoTikara (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Surinuke (uint8_t* prio, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__handler_Surinuke_SkipCheck (Dpr_Battle_Logic_EventFactor_SkipCheckHandlerArgs_o** args, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Surinuke_Start (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Surinuke_End (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Surinuke_MigawariThrew (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_BarrierFree (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_BarrierFree (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_JisinKajou (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_JisinKajou (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_UltraForce (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_UltraForce (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
int32_t Dpr_Battle_Logic_Handler_Tokusei__ultraForce_GetEffectRankType (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_SeiginoKokoro (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SeiginoKokoro (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Bibiri (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Bibiri (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Bibiri_RankEffectLastCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Bibiri_RankEffectFixed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_JyoukiKikan (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_JyoukiKikan (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Watage (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Watage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Miira (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Miira (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_SamayouTamasii (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SamayouTamasii (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Sousyoku (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Sousyoku_CheckNoEffect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_ItazuraGokoro (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_ItazuraGokoro (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_ItazuraGokoro_WazaParam (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_ItazuraGokoro_Reset (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MagicMirror_ExeCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MagicMirror_Wait (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MagicMirror_Reflect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_MagicMirror (uint8_t* prio, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Syuukaku (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Syuukaku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_HeavyMetal (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_HeavyMetal (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_LightMetal (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_LightMetal (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Amanojaku (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Amanojaku (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Kinchoukan (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Kinchoukan_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__handler_Kinchoukan_SkipCheck (Dpr_Battle_Logic_EventFactor_SkipCheckHandlerArgs_o** args, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_KagakuHenkaGas (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_KagakuHenkaGas_Start (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_KagakuHenkaGas_End (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Jukusei (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Jukusei_KinomiCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Kawarimono (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Hensin (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Illusion (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Illusion_Damage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Illusion_Ieki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Illusion_ChangeTok (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_IllusionBreak (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_GoodLuck (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_GoodLuck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_MentalVeil (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MentalVeil_Check (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MentalVeil_Failed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_FriendSickFailed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint16_t strID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_FlowerVeil (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FlowerVeil_Check (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FlowerVeil_Guard (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FlowerVeil_SickCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FlowerVeil_SickFailed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FlowerVeil_CheckInemuri (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__common_IsFlowerVeilTarget (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t targetPokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_SweetVeil (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SweetVeil_PokeSick (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SweetVeil_PokeSickFailed (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SweetVeil_Inemuri (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_MirrorArmor (uint8_t* prio, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__checkMirrorArmorCause (uint8_t cause, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MirroArmor_Check (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MirroArmor_Reflect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_HooBukuro (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Hoobukuro (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_HengenZizai (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_HengenZizai (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_DarkAura (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_DarkAura_MemberIN (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_DarkAura (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_FairyAura (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FairyAura_MemberIN (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FairyAura (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_AuraBreak (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_AuraBreak_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_AuraBreak (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_GanjouAgo (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_GanjouAgo (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Gorimuchu (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Gorimuchu_Waza (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Gorimuchu_Power (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Gorimuchu_Change (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Gorimuchu_Check (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_FurCoat (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FurCoat (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_KusaNoKegawa (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_KusaNoKegawa (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_NumeNume (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_NumeNume (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_KataiTume (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_KataiTume (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_Skin_ChangeType (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t type, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_Skin_WazaPow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t type, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_Skin_ChangeGWaza (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, int32_t waza, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_SkySkin (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SkySkin (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SkySkin_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SkySkin_ChangeGWaza (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_FairySkin (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FairySkin (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FairySkin_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Fairykin_ChangeGWaza (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_FreezSkin (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FreezSkin (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FreezSkin_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_FreezSkin_ChangeGWaza (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SkinEndCommon (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_MegaLauncher (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MegaLauncher_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MegaLauncher_Recover (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_HayateNoTsubasa (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_HayateNoTsubasa (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Boudan (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Boudan (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_OyakoAi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_OyakoAi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Magician (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_magician_Start (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_magician (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__magician_swapitem (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t targetPokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Kyousei (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_kyousei_wazaSeqStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_kyousei_wazaSeqEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_kyousei (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__kyousei_commonProc (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t targetPokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Zikyuuryoku (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Zikyuuryoku_WazaDamageReaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Mizugatame (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Mizugatame_WazaDamageReaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Suihou (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Suihou_AttackerPower (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Yukikaki (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Yukikaki_CalcAgility (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Haganetukai (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Haganetukai_AttackerPower (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_HaganeNoSeisin (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_HaganeNoSeisin (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_UruoiVoice (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_UruoiVoice_WazaParam (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_HealingShift (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_HealingShift_GetWazaPriority (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_ElecSkin (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_ElecSkinWazaParam (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_ElecSkin_Pow (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_ElecSkin_ChangeGWaza (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_SurfTail (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SurfTail_CalcAgility (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Hitodenasi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Hitodenasi_CriticalCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Enkaku (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Enkaku_WazaParam (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Zyoounoigen (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Zyoounoigen_WazaExeCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_MohuMohu (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MohuMohu (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_KooriNoRinpun (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_KooriNoRinpun (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Battery (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Battery_WazaPower (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_PowerSpot (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_PowerSpot (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Receiver (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Receiver_DeadAfter (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_TobidasuNakami (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_TobidasuNakami_DamageProcStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_TobidasuNakami_IchigekiGuard (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__tobidasuNakami_RegisterDamage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_TobidasuNakami_WazaDamageReaction (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Gyakuzyou (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Gyakuzyou_DamegeProcStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Gyakuzyou_IchigekiCheck (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__gyakuzyou_isEnoughHP (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Gyakuzyou_EndHitReal (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__common_CheckTarget (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t checkPokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Nigegosi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Nigegosi_DamegeProcStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Nigegosi_BeforeIchigeki (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Nigegosi_DamegeProcEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Nigegosi_EndHit (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Nigegosi_SimpleDamageBefore (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Nigegosi_SimpleDamageAfter (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__nigegosi_CheckBeforeDamage (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__nigegosi_AfterDamage_Full (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__nigegosi_AfterDamage_shouldEffect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__nigegosi_AfterDamage_Effect (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Handler_Tokusei__nigegosi_isQuitBattle (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_SoulHeart (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_SoulHeart_DeadAfter (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Odoriko (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Odoriko_WazaSeqStart (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Odoriko_ExecuteEffective (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Odoriko_WazaSeqEnd (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_Handler_Tokusei__odoriko_GetTargetPos (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t odorikoPokeID, uint8_t attackPokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Husyoku (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Husyoku_CheckAddSickFailStdSkip (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_ElecMaker (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_ElecMaker_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_PhychoMaker (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_PhychoMaker_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_MistMaker (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_MistMaker_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_GrassMaker (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_GrassMaker_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__common_GroundMaker (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, uint8_t ground, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Gitai (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Gitai_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Gitai_Change (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_Harikomi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_Harikomi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_ZettaiNemuri (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_ZettaiNemuri_MemberIn (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_ZettaiNemuri_AddSickCheckFail (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_BrainPrism (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_BrainPrism (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_HutouNoTurugi (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_HutouNoTurugi (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_HukutuNoTate (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_HukutuNoTate (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
Dpr_Battle_Logic_EventFactor_EventHandlerTable_array* Dpr_Battle_Logic_Handler_Tokusei__ADD_ScrewObire (uint8_t* prio, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_ScrewObire_Tempt (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei__handler_ScrewObire_Aim (Dpr_Battle_Logic_EventFactor_EventHandlerArgs_o** args, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_Handler_Tokusei___cctor (const MethodInfo* method_info);
