#pragma once

#include "il2cpp.h"

void Dpr_Battle_Logic_Section_WazaExecStart___ctor (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, Dpr_Battle_Logic_Section_CommonParam_o** commonParam, const MethodInfo* method_info);
void Dpr_Battle_Logic_Section_WazaExecStart__Execute (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, Dpr_Battle_Logic_Section_WazaExecStart_Result_o* pResult, Dpr_Battle_Logic_Section_WazaExecStart_Description_o** description, const MethodInfo* method_info);
void Dpr_Battle_Logic_Section_WazaExecStart__event_StartWazaSeq (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t waza, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Section_WazaExecStart__checkWazaFail_1st (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParam, Dpr_Battle_Logic_ActionDesc_o* actionDesc, bool isWazaLock, bool isTameLock, const MethodInfo* method_info);
void Dpr_Battle_Logic_Section_WazaExecStart__registerWazaTargets (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* pAttacker, Dpr_Battle_Logic_WazaParam_o* pWazaParam, uint8_t targetPos, uint8_t aimTargetID, Dpr_Battle_Logic_PokeSet_o* pTargets, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Section_WazaExecStart__decrementPP (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t orgWaza, int32_t actWaza, Dpr_Battle_Logic_PokeSet_o* targets, const MethodInfo* method_info);
void Dpr_Battle_Logic_Section_WazaExecStart__onFailed (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t waza, uint8_t failCause, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_Section_WazaExecStart__correctReqWazaTargetPos (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, int32_t orgWaza, uint8_t defaultTargetPos, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_Section_WazaExecStart__checkReqWazaFail (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParam, const MethodInfo* method_info);
void Dpr_Battle_Logic_Section_WazaExecStart__event_WazaCallDecide (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParamOrg, Dpr_Battle_Logic_WazaParam_o* wazaParamAct, const MethodInfo* method_info);
void Dpr_Battle_Logic_Section_WazaExecStart__putWazaMessage (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* pAttacker, int32_t orgWazaID, int32_t actWazaID, uint8_t actTargetPos, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Section_WazaExecStart__checkWazaMsgCustom (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* pAttacker, int32_t orgWazaID, int32_t actWazaID, Dpr_Battle_Logic_StrParam_o* pStrParam, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Section_WazaExecStart__checkWazaFail_2nd (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParam, Dpr_Battle_Logic_PokeSet_o* targets, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Section_WazaExecStart__checkWazaFail_Funjin (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParam, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Section_WazaExecStart__checkWazaFail_3rd (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParam, Dpr_Battle_Logic_PokeSet_o* targets, const MethodInfo* method_info);
void Dpr_Battle_Logic_Section_WazaExecStart__cureSick (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* poke, int32_t sick, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Section_WazaExecStart__setDelayWazaReady (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, bool* pIsWazaEnable, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParam, uint8_t targetPos, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Section_WazaExecStart__setCombiWazaReady (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t waza, uint8_t targetPos, const MethodInfo* method_info);
void Dpr_Battle_Logic_Section_WazaExecStart__event_WazaExecDecide (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, Dpr_Battle_Logic_WazaParam_o* wazaParam, const MethodInfo* method_info);
bool Dpr_Battle_Logic_Section_WazaExecStart__checkWazaRob (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, Dpr_Battle_Logic_BTL_POKEPARAM_o* attacker, int32_t waza, Dpr_Battle_Logic_PokeSet_o* targets, Dpr_Battle_Logic_WazaRobParam_o* robParam, const MethodInfo* method_info);
void Dpr_Battle_Logic_Section_WazaExecStart__checkBattleTalk (Dpr_Battle_Logic_Section_WazaExecStart_o* __this, uint8_t pokeID, int32_t waza, const MethodInfo* method_info);
