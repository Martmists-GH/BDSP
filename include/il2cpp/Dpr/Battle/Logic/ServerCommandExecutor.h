#pragma once

#include "il2cpp.h"

void Dpr_Battle_Logic_ServerCommandExecutor___ctor (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, Dpr_Battle_Logic_ServerCommandExecutor_SetupParam_o* param, const MethodInfo* method_info);
Dpr_Battle_Logic_BTL_POKEPARAM_o* Dpr_Battle_Logic_ServerCommandExecutor__getPokeParam (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__SetTurnFlag (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, int32_t flag, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__ResetTurnFlag (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, int32_t flag, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__SetContFlag (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, int32_t flag, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__ResetContFlag (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, int32_t flag, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__SetPermFlag (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, int32_t flag, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__SetBppCounter (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, int32_t counterID, uint8_t value, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__SetPokePermCounter (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t counterID, uint32_t value, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__AddPokePermCounter (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t counterID, uint32_t value, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__IncPokePermCounter (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t counterID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__IncTotalTurnCount (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__IncKillCount (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__HPMinus (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint32_t value, uint8_t damageCause, uint8_t damageCausePokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__HpZero (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__DecrementPP (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t wazaIdx, uint8_t volume, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__SetWazaUsedFlag (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t wazaIdx, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__IncWazaUsedCount (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t wazaIdx, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__IncWazaKillCount (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t wazaIdx, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__SetItem (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint16_t itemID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__ConsumeItem (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint16_t itemID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__ClearConsumedItem (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__CurePokeSick (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__CureWazaSick (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, int32_t sick, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__CureDependPokeSick (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t causePokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__SetActionRecord (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t actionID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__AddWazaDamageRecord (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t defPokeID, uint8_t atkPokeID, uint8_t atkPokePos, uint8_t wazaType, int32_t damageType, uint16_t wazaID, uint16_t damage, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__MemberIn (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t clientID, uint8_t posIdx, uint8_t nextPokeIdx, uint32_t turnCount, const MethodInfo* method_info);
bool Dpr_Battle_Logic_ServerCommandExecutor__ChangeGround (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t ground, Dpr_Battle_Logic_BTL_SICKCONT_o* contParam, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__AddFieldEffect (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t effect, Dpr_Battle_Logic_BTL_SICKCONT_o* cont, const MethodInfo* method_info);
bool Dpr_Battle_Logic_ServerCommandExecutor__RemoveFieldEffect (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t effect, const MethodInfo* method_info);
bool Dpr_Battle_Logic_ServerCommandExecutor__IncFieldTurnCount (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t effect, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__AddFieldEffect_DependPoke (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t effect, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_ServerCommandExecutor__RemoveFieldEffect_DependPoke (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t causedPokeID, int32_t fieldEffect, const MethodInfo* method_info);
bool Dpr_Battle_Logic_ServerCommandExecutor__SwapSideEffect (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t side1, int32_t side2, int32_t effect, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__AddExp (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint32_t exp, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__AddEffort (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t hp, uint8_t pow, uint8_t def, uint8_t sp_pow, uint8_t sp_def, uint8_t agi, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__AddEffort_G (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t value, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__CopyBatonTouchParams (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t userPokeID, uint8_t targetPokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_ServerCommandExecutor__ChangePokeType (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, Dpr_Battle_Logic_PokeTypePair_o nextType, int32_t exTypeCause, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__ExPokeType (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t exType, int32_t exTypeCause, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__ChangeTokusei (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, int32_t tokusei, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__ChangeForm (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t formNo, bool dontResetFormByOut, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__Hensin (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t userID, uint8_t targetID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__SetBaseStatus (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, int32_t valueID, uint16_t value, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__SetWeight (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint16_t weight, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__SwapPokePos (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t clientID, uint8_t pos1, uint8_t pos2, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__UpdateWazaNo (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t wazaIdx, int32_t wazaNo, uint8_t ppMax, bool fPermanent, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__ClearForOut (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__ClearForDead (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__CreateMigawari (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint16_t migawariHP, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__DeleteMigawari (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__Relive (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint16_t recoverHP, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__TurnEnd (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__TurnCheck_WazaSick (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, int32_t sick, bool* isSickValid, Dpr_Battle_Logic_BTL_SICKCONT_o* pOldContDest, bool* fCured, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__UpdateWazaProcResult (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t actTargetPos, uint8_t actWazaType, bool isWazaEffective, int32_t actWaza, int32_t orgWaza, const MethodInfo* method_info);
bool Dpr_Battle_Logic_ServerCommandExecutor__RecoverRank (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_ServerCommandExecutor__RankUpReset (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RankReset (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RankSet8 (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t atk, uint8_t def, uint8_t sp_atk, uint8_t sp_def, uint8_t agi, uint8_t hit, uint8_t avoid, uint8_t critical, const MethodInfo* method_info);
bool Dpr_Battle_Logic_ServerCommandExecutor__AddCriticalRank (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t volume, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__SetSpActPriority (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t priority, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__StartWeather (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t weather, uint8_t turn, uint8_t turnUpCount, uint8_t causePokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__EndWeather (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, const MethodInfo* method_info);
uint8_t Dpr_Battle_Logic_ServerCommandExecutor__TurnCheckWeather (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__SetBattleFlag (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint16_t flag, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RemoveBattleFlag (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint16_t flag, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__IncBattleCount (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t counterID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__DecBattleCount (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t counterID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__IncBattleCount (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t counterID, int32_t clientID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__IncBattleCount (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t counterID, int32_t side, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__UpdateIllusion (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t clientID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__FakeDisable (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RaidBattleStatus_IncAllDeadCount (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RaidBattleStatus_IncTurnCountAfterAllDead (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t clientID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RaidBattleStatus_ResetTurnCountAfterAllDead (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t clientID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RaidBoss_DecReinforceTurn (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RaidBoss_SetReinforceTurn (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t turn, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RaidBoss_IncAngryLevel (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RaidBoss_GWazaUseSchedule_DecTurn (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RaidBoss_GWazaUseSchedule_SetUsed (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RaidBoss_GWazaUseSchedule_Reset (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t turn, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__BreakGWall (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__AddGWallGauge (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t value, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__SubGWallGauge (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, uint8_t value, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__InitGWallGauge (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__DecGWallRepairTurnCount (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RepairGWall (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__StartGMode (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__EndGMode (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__IncGModeTurnCount (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__IncGGauge (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t clientID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__EmptyGGauge (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t clientID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_ServerCommandExecutor__TransferGRights (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t side, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__IncGRightsTurnCount (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t side, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__InvalidateGRights (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t clientID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__PlayedTalkEvent (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t talkID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__AddEscapeInfo (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t clientID, const MethodInfo* method_info);
bool Dpr_Battle_Logic_ServerCommandExecutor__AddWazaHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, int32_t waza, uint32_t subPri, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RemoveWazaHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, int32_t waza, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RemoveForceWazaHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, int32_t waza, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RemoveForceAllWazaHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__AddTokuseiHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RemoveTokuseiHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__SwapTokuseiHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID1, uint8_t pokeID2, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__AddItemHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RemoveItemHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__AddPosHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t effect, uint8_t pos, uint8_t pokeID, System_Int32_array* param, uint8_t param_cnt, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RemovePosHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t effect, uint8_t pos, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__AddSideHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t side, int32_t sideEffect, Dpr_Battle_Logic_BTL_SICKCONT_o* contParam, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RemoveSideHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t side, int32_t sideEffect, const MethodInfo* method_info);
bool Dpr_Battle_Logic_ServerCommandExecutor__SleepSideHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t side, int32_t sideEffect, const MethodInfo* method_info);
bool Dpr_Battle_Logic_ServerCommandExecutor__WakeSideHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t side, int32_t sideEffect, const MethodInfo* method_info);
bool Dpr_Battle_Logic_ServerCommandExecutor__AddFieldHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t effect, uint8_t sub_param, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RemoveFieldHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, int32_t effect, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__AddDefaultPowerUpHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RemoveDefaultPowerUpHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__AddRaidBossHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, int32_t handlerType, const MethodInfo* method_info);
void Dpr_Battle_Logic_ServerCommandExecutor__RemoveRaidBossHandler (Dpr_Battle_Logic_ServerCommandExecutor_o* __this, uint8_t pokeID, int32_t handlerType, const MethodInfo* method_info);
