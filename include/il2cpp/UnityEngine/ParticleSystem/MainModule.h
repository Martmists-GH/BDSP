#pragma once

#include "il2cpp.h"

void UnityEngine_ParticleSystem_MainModule___ctor (UnityEngine_ParticleSystem_MainModule_o __this, UnityEngine_ParticleSystem_o* particleSystem, const MethodInfo* method_info);
float UnityEngine_ParticleSystem_MainModule__get_duration (UnityEngine_ParticleSystem_MainModule_o __this, const MethodInfo* method_info);
bool UnityEngine_ParticleSystem_MainModule__get_loop (UnityEngine_ParticleSystem_MainModule_o __this, const MethodInfo* method_info);
void UnityEngine_ParticleSystem_MainModule__set_loop (UnityEngine_ParticleSystem_MainModule_o __this, bool value, const MethodInfo* method_info);
UnityEngine_ParticleSystem_MinMaxCurve_o UnityEngine_ParticleSystem_MainModule__get_startDelay (UnityEngine_ParticleSystem_MainModule_o __this, const MethodInfo* method_info);
UnityEngine_ParticleSystem_MinMaxCurve_o UnityEngine_ParticleSystem_MainModule__get_startLifetime (UnityEngine_ParticleSystem_MainModule_o __this, const MethodInfo* method_info);
void UnityEngine_ParticleSystem_MainModule__set_startColor (UnityEngine_ParticleSystem_MainModule_o __this, UnityEngine_ParticleSystem_MinMaxGradient_o value, const MethodInfo* method_info);
int32_t UnityEngine_ParticleSystem_MainModule__get_simulationSpace (UnityEngine_ParticleSystem_MainModule_o __this, const MethodInfo* method_info);
void UnityEngine_ParticleSystem_MainModule__set_playOnAwake (UnityEngine_ParticleSystem_MainModule_o __this, bool value, const MethodInfo* method_info);
void UnityEngine_ParticleSystem_MainModule__set_stopAction (UnityEngine_ParticleSystem_MainModule_o __this, int32_t value, const MethodInfo* method_info);
float UnityEngine_ParticleSystem_MainModule__get_duration_Injected (UnityEngine_ParticleSystem_MainModule_o* _unity_self, const MethodInfo* method_info);
bool UnityEngine_ParticleSystem_MainModule__get_loop_Injected (UnityEngine_ParticleSystem_MainModule_o* _unity_self, const MethodInfo* method_info);
void UnityEngine_ParticleSystem_MainModule__set_loop_Injected (UnityEngine_ParticleSystem_MainModule_o* _unity_self, bool value, const MethodInfo* method_info);
void UnityEngine_ParticleSystem_MainModule__get_startDelay_Injected (UnityEngine_ParticleSystem_MainModule_o* _unity_self, UnityEngine_ParticleSystem_MinMaxCurve_o* ret, const MethodInfo* method_info);
void UnityEngine_ParticleSystem_MainModule__get_startLifetime_Injected (UnityEngine_ParticleSystem_MainModule_o* _unity_self, UnityEngine_ParticleSystem_MinMaxCurve_o* ret, const MethodInfo* method_info);
void UnityEngine_ParticleSystem_MainModule__set_startColor_Injected (UnityEngine_ParticleSystem_MainModule_o* _unity_self, UnityEngine_ParticleSystem_MinMaxGradient_o* value, const MethodInfo* method_info);
int32_t UnityEngine_ParticleSystem_MainModule__get_simulationSpace_Injected (UnityEngine_ParticleSystem_MainModule_o* _unity_self, const MethodInfo* method_info);
void UnityEngine_ParticleSystem_MainModule__set_playOnAwake_Injected (UnityEngine_ParticleSystem_MainModule_o* _unity_self, bool value, const MethodInfo* method_info);
void UnityEngine_ParticleSystem_MainModule__set_stopAction_Injected (UnityEngine_ParticleSystem_MainModule_o* _unity_self, int32_t value, const MethodInfo* method_info);
