#pragma once

#include "il2cpp.h"

bool System_Threading_Tasks_Task__AddToActiveTasks (System_Threading_Tasks_Task_o* task, const MethodInfo* method_info);
void System_Threading_Tasks_Task__RemoveFromActiveTasks (int32_t taskId, const MethodInfo* method_info);
void System_Threading_Tasks_Task___ctor (System_Threading_Tasks_Task_o* __this, bool canceled, int32_t creationOptions, System_Threading_CancellationToken_o ct, const MethodInfo* method_info);
void System_Threading_Tasks_Task___ctor (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
void System_Threading_Tasks_Task___ctor (System_Threading_Tasks_Task_o* __this, System_Delegate_o* action, Il2CppObject* state, System_Threading_Tasks_Task_o* parent, System_Threading_CancellationToken_o cancellationToken, int32_t creationOptions, int32_t internalOptions, System_Threading_Tasks_TaskScheduler_o* scheduler, const MethodInfo* method_info);
void System_Threading_Tasks_Task__TaskConstructorCore (System_Threading_Tasks_Task_o* __this, Il2CppObject* action, Il2CppObject* state, System_Threading_CancellationToken_o cancellationToken, int32_t creationOptions, int32_t internalOptions, System_Threading_Tasks_TaskScheduler_o* scheduler, const MethodInfo* method_info);
void System_Threading_Tasks_Task__AssignCancellationToken (System_Threading_Tasks_Task_o* __this, System_Threading_CancellationToken_o cancellationToken, System_Threading_Tasks_Task_o* antecedent, System_Threading_Tasks_TaskContinuation_o* continuation, const MethodInfo* method_info);
void System_Threading_Tasks_Task__TaskCancelCallback (Il2CppObject* o, const MethodInfo* method_info);
void System_Threading_Tasks_Task__PossiblyCaptureContext (System_Threading_Tasks_Task_o* __this, int32_t* stackMark, const MethodInfo* method_info);
int32_t System_Threading_Tasks_Task__get_Options (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
int32_t System_Threading_Tasks_Task__OptionsMethod (int32_t flags, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__AtomicStateUpdate (System_Threading_Tasks_Task_o* __this, int32_t newBits, int32_t illegalBits, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__AtomicStateUpdate (System_Threading_Tasks_Task_o* __this, int32_t newBits, int32_t illegalBits, int32_t* oldFlags, const MethodInfo* method_info);
void System_Threading_Tasks_Task__SetNotificationForWaitCompletion (System_Threading_Tasks_Task_o* __this, bool enabled, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__NotifyDebuggerOfWaitCompletionIfNecessary (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__get_IsWaitNotificationEnabledOrNotRanToCompletion (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__get_ShouldNotifyDebuggerOfWaitCompletion (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__get_IsWaitNotificationEnabled (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
void System_Threading_Tasks_Task__NotifyDebuggerOfWaitCompletion (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__MarkStarted (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__FireTaskScheduledIfNeeded (System_Threading_Tasks_Task_o* __this, System_Threading_Tasks_TaskScheduler_o* ts, const MethodInfo* method_info);
void System_Threading_Tasks_Task__AddNewChild (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
void System_Threading_Tasks_Task__DisregardChild (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
int32_t System_Threading_Tasks_Task__NewId (const MethodInfo* method_info);
int32_t System_Threading_Tasks_Task__get_Id (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
System_Threading_Tasks_Task_o* System_Threading_Tasks_Task__get_InternalCurrent (const MethodInfo* method_info);
System_Threading_Tasks_Task_o* System_Threading_Tasks_Task__InternalCurrentIfAttached (int32_t creationOptions, const MethodInfo* method_info);
System_Threading_Tasks_StackGuard_o* System_Threading_Tasks_Task__get_CurrentStackGuard (const MethodInfo* method_info);
System_AggregateException_o* System_Threading_Tasks_Task__get_Exception (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
int32_t System_Threading_Tasks_Task__get_Status (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__get_IsCanceled (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__get_IsCancellationRequested (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
System_Threading_Tasks_Task_ContingentProperties_o* System_Threading_Tasks_Task__EnsureContingentPropertiesInitialized (System_Threading_Tasks_Task_o* __this, bool needsProtection, const MethodInfo* method_info);
System_Threading_Tasks_Task_ContingentProperties_o* System_Threading_Tasks_Task__EnsureContingentPropertiesInitializedCore (System_Threading_Tasks_Task_o* __this, bool needsProtection, const MethodInfo* method_info);
System_Threading_CancellationToken_o System_Threading_Tasks_Task__get_CancellationToken (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__get_IsCancellationAcknowledged (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__get_IsCompleted (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__IsCompletedMethod (int32_t flags, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__get_IsRanToCompletion (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
int32_t System_Threading_Tasks_Task__get_CreationOptions (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
System_Threading_WaitHandle_o* System_Threading_Tasks_Task__System_IAsyncResult_get_AsyncWaitHandle (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
Il2CppObject* System_Threading_Tasks_Task__get_AsyncState (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
System_Threading_Tasks_TaskScheduler_o* System_Threading_Tasks_Task__get_ExecutingTaskScheduler (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
System_Threading_Tasks_Task_o* System_Threading_Tasks_Task__get_CompletedTask (const MethodInfo* method_info);
System_Threading_ManualResetEventSlim_o* System_Threading_Tasks_Task__get_CompletedEvent (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__get_IsSelfReplicatingRoot (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__get_IsChildReplica (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__get_ExceptionRecorded (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__get_IsFaulted (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
System_Threading_ExecutionContext_o* System_Threading_Tasks_Task__get_CapturedContext (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
void System_Threading_Tasks_Task__set_CapturedContext (System_Threading_Tasks_Task_o* __this, System_Threading_ExecutionContext_o* value, const MethodInfo* method_info);
System_Threading_ExecutionContext_o* System_Threading_Tasks_Task__CopyExecutionContext (System_Threading_ExecutionContext_o* capturedContext, const MethodInfo* method_info);
void System_Threading_Tasks_Task__Dispose (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
void System_Threading_Tasks_Task__Dispose (System_Threading_Tasks_Task_o* __this, bool disposing, const MethodInfo* method_info);
void System_Threading_Tasks_Task__ScheduleAndStart (System_Threading_Tasks_Task_o* __this, bool needsProtection, const MethodInfo* method_info);
void System_Threading_Tasks_Task__AddException (System_Threading_Tasks_Task_o* __this, Il2CppObject* exceptionObject, const MethodInfo* method_info);
void System_Threading_Tasks_Task__AddException (System_Threading_Tasks_Task_o* __this, Il2CppObject* exceptionObject, bool representsCancellation, const MethodInfo* method_info);
System_AggregateException_o* System_Threading_Tasks_Task__GetExceptions (System_Threading_Tasks_Task_o* __this, bool includeTaskCanceledExceptions, const MethodInfo* method_info);
System_Collections_ObjectModel_ReadOnlyCollection_ExceptionDispatchInfo__o* System_Threading_Tasks_Task__GetExceptionDispatchInfos (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
System_Runtime_ExceptionServices_ExceptionDispatchInfo_o* System_Threading_Tasks_Task__GetCancellationExceptionDispatchInfo (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
void System_Threading_Tasks_Task__ThrowIfExceptional (System_Threading_Tasks_Task_o* __this, bool includeTaskCanceledExceptions, const MethodInfo* method_info);
void System_Threading_Tasks_Task__UpdateExceptionObservedStatus (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__get_IsExceptionObservedByParent (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__get_IsDelegateInvoked (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
void System_Threading_Tasks_Task__Finish (System_Threading_Tasks_Task_o* __this, bool bUserDelegateExecuted, const MethodInfo* method_info);
void System_Threading_Tasks_Task__FinishStageTwo (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
void System_Threading_Tasks_Task__FinishStageThree (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
void System_Threading_Tasks_Task__ProcessChildCompletion (System_Threading_Tasks_Task_o* __this, System_Threading_Tasks_Task_o* childTask, const MethodInfo* method_info);
void System_Threading_Tasks_Task__AddExceptionsFromChildren (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
void System_Threading_Tasks_Task__FinishThreadAbortedTask (System_Threading_Tasks_Task_o* __this, bool bTAEAddedToExceptionHolder, bool delegateRan, const MethodInfo* method_info);
void System_Threading_Tasks_Task__Execute (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__ShouldReplicate (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
System_Threading_Tasks_Task_o* System_Threading_Tasks_Task__CreateReplicaTask (System_Threading_Tasks_Task_o* __this, System_Action_object__o* taskReplicaDelegate, Il2CppObject* stateObject, System_Threading_Tasks_Task_o* parentTask, System_Threading_Tasks_TaskScheduler_o* taskScheduler, int32_t creationOptionsForReplica, int32_t internalOptionsForReplica, const MethodInfo* method_info);
Il2CppObject* System_Threading_Tasks_Task__get_SavedStateForNextReplica (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
void System_Threading_Tasks_Task__set_SavedStateFromPreviousReplica (System_Threading_Tasks_Task_o* __this, Il2CppObject* value, const MethodInfo* method_info);
System_Threading_Tasks_Task_o* System_Threading_Tasks_Task__get_HandedOverChildReplica (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
void System_Threading_Tasks_Task__set_HandedOverChildReplica (System_Threading_Tasks_Task_o* __this, System_Threading_Tasks_Task_o* value, const MethodInfo* method_info);
void System_Threading_Tasks_Task__ExecuteSelfReplicating (System_Threading_Tasks_Task_o* root, const MethodInfo* method_info);
void System_Threading_Tasks_Task__System_Threading_IThreadPoolWorkItem_ExecuteWorkItem (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
void System_Threading_Tasks_Task__System_Threading_IThreadPoolWorkItem_MarkAborted (System_Threading_Tasks_Task_o* __this, System_Threading_ThreadAbortException_o* tae, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__ExecuteEntry (System_Threading_Tasks_Task_o* __this, bool bPreventDoubleExecution, const MethodInfo* method_info);
void System_Threading_Tasks_Task__ExecuteWithThreadLocal (System_Threading_Tasks_Task_o* __this, System_Threading_Tasks_Task_o** currentTaskSlot, const MethodInfo* method_info);
void System_Threading_Tasks_Task__ExecutionContextCallback (Il2CppObject* obj, const MethodInfo* method_info);
void System_Threading_Tasks_Task__InnerInvoke (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
void System_Threading_Tasks_Task__InnerInvokeWithArg (System_Threading_Tasks_Task_o* __this, System_Threading_Tasks_Task_o* childTask, const MethodInfo* method_info);
void System_Threading_Tasks_Task__HandleException (System_Threading_Tasks_Task_o* __this, System_Exception_o* unhandledException, const MethodInfo* method_info);
void System_Threading_Tasks_Task__SetContinuationForAwait (System_Threading_Tasks_Task_o* __this, System_Action_o* continuationAction, bool continueOnCapturedContext, bool flowExecutionContext, int32_t* stackMark, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__WrappedTryRunInline (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__InternalWait (System_Threading_Tasks_Task_o* __this, int32_t millisecondsTimeout, System_Threading_CancellationToken_o cancellationToken, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__SpinThenBlockingWait (System_Threading_Tasks_Task_o* __this, int32_t millisecondsTimeout, System_Threading_CancellationToken_o cancellationToken, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__SpinWait (System_Threading_Tasks_Task_o* __this, int32_t millisecondsTimeout, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__InternalCancel (System_Threading_Tasks_Task_o* __this, bool bCancelNonExecutingOnly, const MethodInfo* method_info);
void System_Threading_Tasks_Task__RecordInternalCancellationRequest (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
void System_Threading_Tasks_Task__RecordInternalCancellationRequest (System_Threading_Tasks_Task_o* __this, System_Threading_CancellationToken_o tokenToRecord, const MethodInfo* method_info);
void System_Threading_Tasks_Task__RecordInternalCancellationRequest (System_Threading_Tasks_Task_o* __this, System_Threading_CancellationToken_o tokenToRecord, Il2CppObject* cancellationException, const MethodInfo* method_info);
void System_Threading_Tasks_Task__CancellationCleanupLogic (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
void System_Threading_Tasks_Task__SetCancellationAcknowledged (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
void System_Threading_Tasks_Task__FinishContinuations (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
void System_Threading_Tasks_Task__LogFinishCompletionNotification (System_Threading_Tasks_Task_o* __this, const MethodInfo* method_info);
System_Threading_Tasks_Task_o* System_Threading_Tasks_Task__ContinueWith (System_Threading_Tasks_Task_o* __this, System_Action_Task__object__o* continuationAction, Il2CppObject* state, System_Threading_CancellationToken_o cancellationToken, int32_t continuationOptions, System_Threading_Tasks_TaskScheduler_o* scheduler, const MethodInfo* method_info);
System_Threading_Tasks_Task_o* System_Threading_Tasks_Task__ContinueWith (System_Threading_Tasks_Task_o* __this, System_Action_Task__object__o* continuationAction, Il2CppObject* state, System_Threading_Tasks_TaskScheduler_o* scheduler, System_Threading_CancellationToken_o cancellationToken, int32_t continuationOptions, int32_t* stackMark, const MethodInfo* method_info);
void System_Threading_Tasks_Task__CreationOptionsFromContinuationOptions (int32_t continuationOptions, int32_t* creationOptions, int32_t* internalOptions, const MethodInfo* method_info);
void System_Threading_Tasks_Task__ContinueWithCore (System_Threading_Tasks_Task_o* __this, System_Threading_Tasks_Task_o* continuationTask, System_Threading_Tasks_TaskScheduler_o* scheduler, System_Threading_CancellationToken_o cancellationToken, int32_t options, const MethodInfo* method_info);
void System_Threading_Tasks_Task__AddCompletionAction (System_Threading_Tasks_Task_o* __this, System_Threading_Tasks_ITaskCompletionAction_o* action, const MethodInfo* method_info);
void System_Threading_Tasks_Task__AddCompletionAction (System_Threading_Tasks_Task_o* __this, System_Threading_Tasks_ITaskCompletionAction_o* action, bool addBeforeOthers, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__AddTaskContinuationComplex (System_Threading_Tasks_Task_o* __this, Il2CppObject* tc, bool addBeforeOthers, const MethodInfo* method_info);
bool System_Threading_Tasks_Task__AddTaskContinuation (System_Threading_Tasks_Task_o* __this, Il2CppObject* tc, bool addBeforeOthers, const MethodInfo* method_info);
void System_Threading_Tasks_Task__RemoveContinuation (System_Threading_Tasks_Task_o* __this, Il2CppObject* continuationObject, const MethodInfo* method_info);
System_Threading_Tasks_Task_o* System_Threading_Tasks_Task__FromCancellation (System_Threading_CancellationToken_o cancellationToken, const MethodInfo* method_info);
System_Threading_Tasks_Task_TResult__o* System_Threading_Tasks_Task__FromCancellation_bool_ (System_Threading_CancellationToken_o cancellationToken, const MethodInfo* method_info);
System_Threading_Tasks_Task_TResult__o* System_Threading_Tasks_Task__FromCancellation_object_ (System_Threading_CancellationToken_o cancellationToken, const MethodInfo* method_info);
System_Threading_Tasks_Task_o* System_Threading_Tasks_Task__Delay (int32_t millisecondsDelay, System_Threading_CancellationToken_o cancellationToken, const MethodInfo* method_info);
System_Threading_Tasks_Task_Task__o* System_Threading_Tasks_Task__WhenAny (System_Threading_Tasks_Task_array* tasks, const MethodInfo* method_info);
void System_Threading_Tasks_Task___cctor (const MethodInfo* method_info);
