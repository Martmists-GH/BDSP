#pragma once

#include "il2cpp.h"

System_Text_RegularExpressions_RegexTree_o* System_Text_RegularExpressions_RegexParser__Parse (System_String_o* re, int32_t op, const MethodInfo* method_info);
System_Text_RegularExpressions_RegexReplacement_o* System_Text_RegularExpressions_RegexParser__ParseReplacement (System_String_o* rep, System_Collections_Hashtable_o* caps, int32_t capsize, System_Collections_Hashtable_o* capnames, int32_t op, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser___ctor (System_Text_RegularExpressions_RegexParser_o* __this, System_Globalization_CultureInfo_o* culture, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__SetPattern (System_Text_RegularExpressions_RegexParser_o* __this, System_String_o* Re, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__Reset (System_Text_RegularExpressions_RegexParser_o* __this, int32_t topopts, const MethodInfo* method_info);
System_Text_RegularExpressions_RegexNode_o* System_Text_RegularExpressions_RegexParser__ScanRegex (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
System_Text_RegularExpressions_RegexNode_o* System_Text_RegularExpressions_RegexParser__ScanReplacement (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
System_Text_RegularExpressions_RegexCharClass_o* System_Text_RegularExpressions_RegexParser__ScanCharClass (System_Text_RegularExpressions_RegexParser_o* __this, bool caseInsensitive, const MethodInfo* method_info);
System_Text_RegularExpressions_RegexCharClass_o* System_Text_RegularExpressions_RegexParser__ScanCharClass (System_Text_RegularExpressions_RegexParser_o* __this, bool caseInsensitive, bool scanOnly, const MethodInfo* method_info);
System_Text_RegularExpressions_RegexNode_o* System_Text_RegularExpressions_RegexParser__ScanGroupOpen (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__ScanBlank (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
System_Text_RegularExpressions_RegexNode_o* System_Text_RegularExpressions_RegexParser__ScanBackslash (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
System_Text_RegularExpressions_RegexNode_o* System_Text_RegularExpressions_RegexParser__ScanBasicBackslash (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
System_Text_RegularExpressions_RegexNode_o* System_Text_RegularExpressions_RegexParser__ScanDollar (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
System_String_o* System_Text_RegularExpressions_RegexParser__ScanCapname (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
uint16_t System_Text_RegularExpressions_RegexParser__ScanOctal (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
int32_t System_Text_RegularExpressions_RegexParser__ScanDecimal (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
uint16_t System_Text_RegularExpressions_RegexParser__ScanHex (System_Text_RegularExpressions_RegexParser_o* __this, int32_t c, const MethodInfo* method_info);
int32_t System_Text_RegularExpressions_RegexParser__HexDigit (uint16_t ch, const MethodInfo* method_info);
uint16_t System_Text_RegularExpressions_RegexParser__ScanControl (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
bool System_Text_RegularExpressions_RegexParser__IsOnlyTopOption (System_Text_RegularExpressions_RegexParser_o* __this, int32_t option, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__ScanOptions (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
uint16_t System_Text_RegularExpressions_RegexParser__ScanCharEscape (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
System_String_o* System_Text_RegularExpressions_RegexParser__ParseProperty (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
int32_t System_Text_RegularExpressions_RegexParser__TypeFromCode (System_Text_RegularExpressions_RegexParser_o* __this, uint16_t ch, const MethodInfo* method_info);
int32_t System_Text_RegularExpressions_RegexParser__OptionFromCode (uint16_t ch, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__CountCaptures (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__NoteCaptureSlot (System_Text_RegularExpressions_RegexParser_o* __this, int32_t i, int32_t pos, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__NoteCaptureName (System_Text_RegularExpressions_RegexParser_o* __this, System_String_o* name, int32_t pos, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__NoteCaptures (System_Text_RegularExpressions_RegexParser_o* __this, System_Collections_Hashtable_o* caps, int32_t capsize, System_Collections_Hashtable_o* capnames, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__AssignNameSlots (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
int32_t System_Text_RegularExpressions_RegexParser__CaptureSlotFromName (System_Text_RegularExpressions_RegexParser_o* __this, System_String_o* capname, const MethodInfo* method_info);
bool System_Text_RegularExpressions_RegexParser__IsCaptureSlot (System_Text_RegularExpressions_RegexParser_o* __this, int32_t i, const MethodInfo* method_info);
bool System_Text_RegularExpressions_RegexParser__IsCaptureName (System_Text_RegularExpressions_RegexParser_o* __this, System_String_o* capname, const MethodInfo* method_info);
bool System_Text_RegularExpressions_RegexParser__UseOptionN (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
bool System_Text_RegularExpressions_RegexParser__UseOptionI (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
bool System_Text_RegularExpressions_RegexParser__UseOptionM (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
bool System_Text_RegularExpressions_RegexParser__UseOptionS (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
bool System_Text_RegularExpressions_RegexParser__UseOptionX (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
bool System_Text_RegularExpressions_RegexParser__UseOptionE (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
bool System_Text_RegularExpressions_RegexParser__IsSpecial (uint16_t ch, const MethodInfo* method_info);
bool System_Text_RegularExpressions_RegexParser__IsStopperX (uint16_t ch, const MethodInfo* method_info);
bool System_Text_RegularExpressions_RegexParser__IsQuantifier (uint16_t ch, const MethodInfo* method_info);
bool System_Text_RegularExpressions_RegexParser__IsTrueQuantifier (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
bool System_Text_RegularExpressions_RegexParser__IsSpace (uint16_t ch, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__AddConcatenate (System_Text_RegularExpressions_RegexParser_o* __this, int32_t pos, int32_t cch, bool isReplacement, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__PushGroup (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__PopGroup (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
bool System_Text_RegularExpressions_RegexParser__EmptyStack (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__StartGroup (System_Text_RegularExpressions_RegexParser_o* __this, System_Text_RegularExpressions_RegexNode_o* openGroup, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__AddAlternate (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__AddConcatenate (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__AddConcatenate (System_Text_RegularExpressions_RegexParser_o* __this, bool lazy, int32_t min, int32_t max, const MethodInfo* method_info);
System_Text_RegularExpressions_RegexNode_o* System_Text_RegularExpressions_RegexParser__Unit (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__AddUnitOne (System_Text_RegularExpressions_RegexParser_o* __this, uint16_t ch, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__AddUnitNotone (System_Text_RegularExpressions_RegexParser_o* __this, uint16_t ch, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__AddUnitSet (System_Text_RegularExpressions_RegexParser_o* __this, System_String_o* cc, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__AddUnitNode (System_Text_RegularExpressions_RegexParser_o* __this, System_Text_RegularExpressions_RegexNode_o* node, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__AddUnitType (System_Text_RegularExpressions_RegexParser_o* __this, int32_t type, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__AddGroup (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__PushOptions (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__PopOptions (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
bool System_Text_RegularExpressions_RegexParser__EmptyOptionsStack (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__PopKeepOptions (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
System_ArgumentException_o* System_Text_RegularExpressions_RegexParser__MakeException (System_Text_RegularExpressions_RegexParser_o* __this, System_String_o* message, const MethodInfo* method_info);
int32_t System_Text_RegularExpressions_RegexParser__Textpos (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__Textto (System_Text_RegularExpressions_RegexParser_o* __this, int32_t pos, const MethodInfo* method_info);
uint16_t System_Text_RegularExpressions_RegexParser__MoveRightGetChar (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__MoveRight (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__MoveRight (System_Text_RegularExpressions_RegexParser_o* __this, int32_t i, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser__MoveLeft (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
uint16_t System_Text_RegularExpressions_RegexParser__CharAt (System_Text_RegularExpressions_RegexParser_o* __this, int32_t i, const MethodInfo* method_info);
uint16_t System_Text_RegularExpressions_RegexParser__RightChar (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
uint16_t System_Text_RegularExpressions_RegexParser__RightChar (System_Text_RegularExpressions_RegexParser_o* __this, int32_t i, const MethodInfo* method_info);
int32_t System_Text_RegularExpressions_RegexParser__CharsRight (System_Text_RegularExpressions_RegexParser_o* __this, const MethodInfo* method_info);
void System_Text_RegularExpressions_RegexParser___cctor (const MethodInfo* method_info);
