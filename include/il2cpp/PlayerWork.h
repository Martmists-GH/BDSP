#pragma once

#include "il2cpp.h"

void PlayerWork__Initialization (PlayerWork_o* __this, const MethodInfo* method_info);
void PlayerWork__ToBytes_PlayerWork_SaveData_ (PlayerWork_o* __this, PlayerWork_SaveData_o obj, System_Byte_array** bytes, const MethodInfo* method_info);
void PlayerWork__ToBytes_object_ (PlayerWork_o* __this, Il2CppObject* obj, System_Byte_array** bytes, const MethodInfo* method_info);
void PlayerWork__LoadBytes_PlayerWork_SaveData_ (PlayerWork_o* __this, System_Byte_array* bytes, PlayerWork_SaveData_o* obj, const MethodInfo* method_info);
void PlayerWork__LoadBytes_object_ (PlayerWork_o* __this, System_Byte_array* bytes, Il2CppObject** obj, const MethodInfo* method_info);
bool PlayerWork__CustomLoadOperation (PlayerWork_o* __this, const MethodInfo* method_info);
bool PlayerWork__CustomSaveOperation (PlayerWork_o* __this, const MethodInfo* method_info);
bool PlayerWork__CustomLoadAsyncOperation (PlayerWork_o* __this, const MethodInfo* method_info);
void PlayerWork__OnPostLoadAsync (PlayerWork_o* __this, bool result, const MethodInfo* method_info);
bool PlayerWork__CustomSaveAsyncOperation (PlayerWork_o* __this, const MethodInfo* method_info);
void PlayerWork__OnPostLoad (PlayerWork_o* __this, const MethodInfo* method_info);
void PlayerWork__OnPostLoad_NeedMD (const MethodInfo* method_info);
void PlayerWork__OnPreSave (PlayerWork_o* __this, const MethodInfo* method_info);
void PlayerWork__DataSave (bool isAsync, bool writeMain, bool writeBackup, const MethodInfo* method_info);
void PlayerWork__SaveAsync (bool writeMain, bool writeBackup, const MethodInfo* method_info);
void PlayerWork__DataLoad (bool isAsync, bool fromBackup, const MethodInfo* method_info);
void PlayerWork__LoadAsync (bool fromBackup, const MethodInfo* method_info);
bool PlayerWork__IsSaveSystemBusy (const MethodInfo* method_info);
bool PlayerWork__ExistBackUpData (const MethodInfo* method_info);
int32_t PlayerWork__GetInt (int32_t index, const MethodInfo* method_info);
void PlayerWork__SetInt (int32_t index, int32_t value, const MethodInfo* method_info);
bool PlayerWork__GetBool (int32_t index, const MethodInfo* method_info);
void PlayerWork__SetBool (int32_t index, bool value, const MethodInfo* method_info);
bool PlayerWork__GetSytemFlag (int32_t index, const MethodInfo* method_info);
void PlayerWork__SetSytemFlag (int32_t index, bool value, const MethodInfo* method_info);
void PlayerWork__SetTransitionZone (int32_t zoneID, int32_t index, const MethodInfo* method_info);
void PlayerWork__SetWarp (int32_t warp, const MethodInfo* method_info);
void PlayerWork__SetWarpSorawotobu (int32_t zoneId, int32_t locatorIndex, const MethodInfo* method_info);
int32_t PlayerWork__get_playerID (const MethodInfo* method_info);
System_String_o* PlayerWork__get_userName (const MethodInfo* method_info);
void PlayerWork__set_userName (System_String_o* value, const MethodInfo* method_info);
bool PlayerWork__get_playerSex (const MethodInfo* method_info);
void PlayerWork__set_playerSex (bool value, const MethodInfo* method_info);
int32_t PlayerWork__get_playerGenderId (const MethodInfo* method_info);
int32_t PlayerWork__get_playerFashion (const MethodInfo* method_info);
void PlayerWork__set_playerFashion (int32_t value, const MethodInfo* method_info);
System_String_o* PlayerWork__get_rivalName (const MethodInfo* method_info);
void PlayerWork__set_rivalName (System_String_o* value, const MethodInfo* method_info);
int32_t PlayerWork__get_zoneID (const MethodInfo* method_info);
void PlayerWork__set_zoneID (int32_t value, const MethodInfo* method_info);
bool PlayerWork__get_NoSavePlayerPos (const MethodInfo* method_info);
void PlayerWork__set_NoSavePlayerPos (bool value, const MethodInfo* method_info);
void PlayerWork__SetPlayerPosData (FieldPlayerEntity_o* player, const MethodInfo* method_info);
UnityEngine_Vector2Int_o PlayerWork__get_grid (const MethodInfo* method_info);
float PlayerWork__get_height (const MethodInfo* method_info);
float PlayerWork__get_rotation (const MethodInfo* method_info);
void PlayerWork__SetPlayerGrid (UnityEngine_Vector2Int_o vec, const MethodInfo* method_info);
void PlayerWork__SetPlayerHeight (float height, const MethodInfo* method_info);
void PlayerWork__SetPlayerRotation (float rot, const MethodInfo* method_info);
int32_t PlayerWork__get_transitionZoneID (const MethodInfo* method_info);
void PlayerWork__set_transitionZoneID (int32_t value, const MethodInfo* method_info);
int32_t PlayerWork__get_locatorIndex (const MethodInfo* method_info);
void PlayerWork__set_locatorIndex (int32_t value, const MethodInfo* method_info);
System_Nullable_LOCATION_WORK__o PlayerWork__get_transitionLocation (const MethodInfo* method_info);
void PlayerWork__set_transitionLocation (System_Nullable_LOCATION_WORK__o value, const MethodInfo* method_info);
bool PlayerWork__get_isBattling (const MethodInfo* method_info);
void PlayerWork__set_isBattling (bool value, const MethodInfo* method_info);
bool PlayerWork__get_isContest (const MethodInfo* method_info);
void PlayerWork__set_isContest (bool value, const MethodInfo* method_info);
bool PlayerWork__get_isSealPreview (const MethodInfo* method_info);
void PlayerWork__set_isSealPreview (bool value, const MethodInfo* method_info);
bool PlayerWork__get_isEvolveDemo (const MethodInfo* method_info);
void PlayerWork__set_isEvolveDemo (bool value, const MethodInfo* method_info);
bool PlayerWork__get_isHatchDemo (const MethodInfo* method_info);
void PlayerWork__set_isHatchDemo (bool value, const MethodInfo* method_info);
bool PlayerWork__get_isDigFossil (const MethodInfo* method_info);
void PlayerWork__set_isDigFossil (bool value, const MethodInfo* method_info);
bool PlayerWork__get_isGMS (const MethodInfo* method_info);
void PlayerWork__set_isGMS (bool value, const MethodInfo* method_info);
bool PlayerWork__get_isMass (const MethodInfo* method_info);
void PlayerWork__set_isMass (bool value, const MethodInfo* method_info);
bool PlayerWork__get_isEncount (const MethodInfo* method_info);
void PlayerWork__set_isEncount (bool value, const MethodInfo* method_info);
int32_t PlayerWork__get_colorID (const MethodInfo* method_info);
void PlayerWork__set_colorID (int32_t value, const MethodInfo* method_info);
uint8_t PlayerWork__get_badge (const MethodInfo* method_info);
void PlayerWork__set_badge (uint8_t value, const MethodInfo* method_info);
int32_t PlayerWork__get_msgLangID (const MethodInfo* method_info);
void PlayerWork__set_msgLangID (int32_t value, const MethodInfo* method_info);
int32_t PlayerWork__get_cassetVersion (const MethodInfo* method_info);
void PlayerWork__set_cassetVersion (int32_t value, const MethodInfo* method_info);
bool PlayerWork__get_isKanji (const MethodInfo* method_info);
void PlayerWork__set_isKanji (bool value, const MethodInfo* method_info);
void PlayerWork__SetMoney (int32_t value, const MethodInfo* method_info);
int32_t PlayerWork__GetMoney (const MethodInfo* method_info);
void PlayerWork__set_btlTowerSave (DPData_BTLTOWER_SAVEWORK_o value, const MethodInfo* method_info);
DPData_BTLTOWER_SAVEWORK_o PlayerWork__get_btlTowerSave (const MethodInfo* method_info);
void PlayerWork__SetItem (int32_t itemno, Dpr_Item_SaveItem_o value, const MethodInfo* method_info);
Dpr_Item_SaveItem_o PlayerWork__GetItem (int32_t itemno, const MethodInfo* method_info);
void PlayerWork__SetUgItem (int32_t ugItemNo, Dpr_Item_SaveUgItem_o value, const MethodInfo* method_info);
Dpr_Item_SaveUgItem_o PlayerWork__GetUgItem (int32_t ugItemNo, const MethodInfo* method_info);
void PlayerWork__SetItemShortcut (int32_t id, uint16_t itemNo, const MethodInfo* method_info);
uint16_t PlayerWork__GetItemShortcut (int32_t id, const MethodInfo* method_info);
int32_t PlayerWork__GetItemShortcutId (uint16_t itemNo, const MethodInfo* method_info);
int32_t PlayerWork__GetItemShortcutRegisteredCount (const MethodInfo* method_info);
Dpr_Box_SaveBoxData_o* PlayerWork__GetBoxData (const MethodInfo* method_info);
Dpr_Box_SaveBoxTrayData_o* PlayerWork__GetBoxTray (int32_t tray, const MethodInfo* method_info);
Dpr_BallDeco_SaveBallDecoData_o* PlayerWork__GetBallDecoData (const MethodInfo* method_info);
Dpr_BallDeco_SaveSealData_o PlayerWork__GetSealData (int32_t id, const MethodInfo* method_info);
Dpr_BallDeco_SaveSealData_o PlayerWork__SetSealData (int32_t id, Dpr_BallDeco_SaveSealData_o value, const MethodInfo* method_info);
void PlayerWork__SetFormNormal (const MethodInfo* method_info);
bool PlayerWork__IsFormNormal (const MethodInfo* method_info);
void PlayerWork__SetFormBicycle (const MethodInfo* method_info);
bool PlayerWork__IsFormBicycle (const MethodInfo* method_info);
void PlayerWork__SetFormSwim (const MethodInfo* method_info);
bool PlayerWork__IsFormSwim (const MethodInfo* method_info);
bool PlayerWork__get_bicycleGear (const MethodInfo* method_info);
void PlayerWork__set_bicycleGear (bool value, const MethodInfo* method_info);
uint8_t PlayerWork__get_bicycleColor (const MethodInfo* method_info);
void PlayerWork__set_bicycleColor (uint8_t value, const MethodInfo* method_info);
Dpr_Battle_Logic_BATTLE_SETUP_PARAM_o* PlayerWork__get_battleSetupParam (const MethodInfo* method_info);
Pml_PokeParty_o* PlayerWork__get_playerParty (const MethodInfo* method_info);
Pml_PokePara_PokemonParam_o* PlayerWork__get_capturedPokemon (const MethodInfo* method_info);
void PlayerWork__set_capturedPokemon (Pml_PokePara_PokemonParam_o* value, const MethodInfo* method_info);
int32_t PlayerWork__get_capturedMonsNo (const MethodInfo* method_info);
void PlayerWork__set_capturedMonsNo (int32_t value, const MethodInfo* method_info);
int32_t PlayerWork__get_capturedBallCountTvTopic (const MethodInfo* method_info);
void PlayerWork__set_capturedBallCountTvTopic (int32_t value, const MethodInfo* method_info);
System_Collections_Generic_List_EvolveDemoTools_Param__o* PlayerWork__get_evolveRequets (const MethodInfo* method_info);
bool PlayerWork__get_encountEnable (const MethodInfo* method_info);
void PlayerWork__set_encountEnable (bool value, const MethodInfo* method_info);
bool PlayerWork__get_isDebugDash (const MethodInfo* method_info);
bool PlayerWork__get_isDebugWalk (const MethodInfo* method_info);
void PlayerWork__set_isDebugWalk (bool value, const MethodInfo* method_info);
bool PlayerWork__get_isDebugPlayerVisible (const MethodInfo* method_info);
void PlayerWork__set_isDebugPlayerVisible (bool value, const MethodInfo* method_info);
bool PlayerWork__get_isDebugBattleTextView (const MethodInfo* method_info);
void PlayerWork__set_isDebugBattleTextView (bool value, const MethodInfo* method_info);
DPData_PLAYER_DATA_o* PlayerWork__get_playerData (const MethodInfo* method_info);
DPData_MYSTATUS_o* PlayerWork__get_playerStatus (const MethodInfo* method_info);
DPData_CONFIG_o* PlayerWork__get_config (const MethodInfo* method_info);
DPData_CONTEST_DATA_o* PlayerWork__get_contestData (const MethodInfo* method_info);
DPData_CON_PHOTO_LANG_DATA_o* PlayerWork__get_contestPhotoLangData (const MethodInfo* method_info);
DPData_CON_PHOTO_EXT_DATA_array** PlayerWork__get_contestPhotoExtData (const MethodInfo* method_info);
DPData_GMS_DATA_o* PlayerWork__get_gmsData (const MethodInfo* method_info);
DPData_GMS_POINT_HISTORY_EXT_DATA_array** PlayerWork__get_gmsExtData (const MethodInfo* method_info);
DPData_PLAYER_NETWORK_DATA_o* PlayerWork__get_networkData (const MethodInfo* method_info);
void PlayerWork__set_zukan (DPData_ZUKAN_WORK_o value, const MethodInfo* method_info);
DPData_ZUKAN_WORK_o PlayerWork__get_zukan (const MethodInfo* method_info);
void PlayerWork__set_isPlayerInputActive (bool value, const MethodInfo* method_info);
bool PlayerWork__get_isPlayerInputActive (const MethodInfo* method_info);
void PlayerWork__set_uniqueID (uint32_t value, const MethodInfo* method_info);
uint32_t PlayerWork__get_uniqueID (const MethodInfo* method_info);
void PlayerWork__set_defaultPokeType (int32_t value, const MethodInfo* method_info);
int32_t PlayerWork__get_defaultPokeType (const MethodInfo* method_info);
int32_t PlayerWork__get_defaultPokeNo (const MethodInfo* method_info);
int32_t PlayerWork__get_rivalPokeType (const MethodInfo* method_info);
int32_t PlayerWork__get_rivalPokeNo (const MethodInfo* method_info);
int32_t PlayerWork__get_supportPokeType (const MethodInfo* method_info);
int32_t PlayerWork__get_supportPokeNo (const MethodInfo* method_info);
bool PlayerWork__GetGakusyuusoutiFlag (const MethodInfo* method_info);
uint32_t PlayerWork__GenerateUniqueId (const MethodInfo* method_info);
void PlayerWork__set_tr_battleData (DPData_TR_BATTLE_DATA_array* value, const MethodInfo* method_info);
DPData_TR_BATTLE_DATA_array* PlayerWork__get_tr_battleData (const MethodInfo* method_info);
DPData_TOPMENU_WORK_o PlayerWork__get_topMenu (const MethodInfo* method_info);
void PlayerWork__set_topMenu (DPData_TOPMENU_WORK_o value, const MethodInfo* method_info);
void PlayerWork__CreateAlpha1Party (Pml_PokeParty_o* party, const MethodInfo* method_info);
void PlayerWork__set_fieldObjSave (DPData__FIELDOBJ_SAVE_o value, const MethodInfo* method_info);
DPData__FIELDOBJ_SAVE_o PlayerWork__get_fieldObjSave (const MethodInfo* method_info);
void PlayerWork__set_record (DPData_RECORD_ARRAY_o value, const MethodInfo* method_info);
DPData_RECORD_ARRAY_o PlayerWork__get_record (const MethodInfo* method_info);
void PlayerWork__set_recordAddData (DPData_RECORD_ADD_DATA_o value, const MethodInfo* method_info);
DPData_RECORD_ADD_DATA_o PlayerWork__get_recordAddData (const MethodInfo* method_info);
void PlayerWork__DebugResetWork (const MethodInfo* method_info);
System_String_o* PlayerWork__get_FieldWorpLinkName (const MethodInfo* method_info);
void PlayerWork__set_FieldWorpLinkName (System_String_o* value, const MethodInfo* method_info);
System_String_o* PlayerWork__get_FieldWorpLabel (const MethodInfo* method_info);
void PlayerWork__set_FieldWorpLabel (System_String_o* value, const MethodInfo* method_info);
bool PlayerWork__get_isDebugNpcVisble (const MethodInfo* method_info);
void PlayerWork__set_isDebugNpcVisble (bool value, const MethodInfo* method_info);
bool PlayerWork__get_isDebugNpcPokeVisble (const MethodInfo* method_info);
void PlayerWork__set_isDebugNpcPokeVisble (bool value, const MethodInfo* method_info);
int32_t PlayerWork__get_DebugEncountMonsNo (const MethodInfo* method_info);
void PlayerWork__set_DebugEncountMonsNo (int32_t value, const MethodInfo* method_info);
int32_t PlayerWork__get_FieldWeather (const MethodInfo* method_info);
void PlayerWork__set_FieldWeather (int32_t value, const MethodInfo* method_info);
void PlayerWork__set_Enc_SV_Data (DPData_ENC_SV_DATA_o value, const MethodInfo* method_info);
DPData_ENC_SV_DATA_o PlayerWork__get_Enc_SV_Data (const MethodInfo* method_info);
void PlayerWork__set_BtlSearcherCharge (uint8_t value, const MethodInfo* method_info);
uint8_t PlayerWork__get_BtlSearcherCharge (const MethodInfo* method_info);
void PlayerWork__set_HoneyLastTreeIndex (int32_t value, const MethodInfo* method_info);
int32_t PlayerWork__get_HoneyLastTreeIndex (const MethodInfo* method_info);
DPData_HONEY_DATA_array* PlayerWork__get_HoneyData (const MethodInfo* method_info);
int64_t PlayerWork__get_HoneyLastUpdateMinutes (const MethodInfo* method_info);
void PlayerWork__set_HoneyLastUpdateMinutes (int64_t value, const MethodInfo* method_info);
int32_t PlayerWork__get_WalkEncountCount (const MethodInfo* method_info);
void PlayerWork__set_WalkEncountCount (int32_t value, const MethodInfo* method_info);
void PlayerWork__set_PlayerSaveData (DPData_PLAYER_SAVE_DATA_o value, const MethodInfo* method_info);
DPData_PLAYER_SAVE_DATA_o PlayerWork__get_PlayerSaveData (const MethodInfo* method_info);
void PlayerWork__set_WalkCount (float value, const MethodInfo* method_info);
float PlayerWork__get_WalkCount (const MethodInfo* method_info);
int32_t PlayerWork__get_DoubleSlot (const MethodInfo* method_info);
void PlayerWork__set_RandomGroup (DPData__RANDOM_GROUP_o value, const MethodInfo* method_info);
DPData__RANDOM_GROUP_o PlayerWork__get_RandomGroup (const MethodInfo* method_info);
void PlayerWork__set_GimmickGearRotate (System_Int32_array* value, const MethodInfo* method_info);
System_Int32_array* PlayerWork__get_GimmickGearRotate (const MethodInfo* method_info);
DPData_KinomiGrow_array* PlayerWork__get_KinomiGrows (const MethodInfo* method_info);
int64_t PlayerWork__get_KinomiGrowLastUpdateMinutes (const MethodInfo* method_info);
void PlayerWork__set_KinomiGrowLastUpdateMinutes (int64_t value, const MethodInfo* method_info);
int32_t PlayerWork__get_Week (const MethodInfo* method_info);
int32_t PlayerWork__get_DebugWeek (const MethodInfo* method_info);
void PlayerWork__set_DebugWeek (int32_t value, const MethodInfo* method_info);
int32_t PlayerWork__get_FieldInputMode (const MethodInfo* method_info);
void PlayerWork__set_FieldInputMode (int32_t value, const MethodInfo* method_info);
void PlayerWork__GetDateTime (int32_t* year, int32_t* month, int32_t* day, const MethodInfo* method_info);
bool PlayerWork__get_IsZenmetuFlag (const MethodInfo* method_info);
void PlayerWork__set_IsZenmetuFlag (bool value, const MethodInfo* method_info);
bool PlayerWork__get_IsNeedUnloadOnFieldConnector (const MethodInfo* method_info);
void PlayerWork__set_IsNeedUnloadOnFieldConnector (bool value, const MethodInfo* method_info);
int32_t PlayerWork__get_Warp (const MethodInfo* method_info);
void PlayerWork__set_Warp (int32_t value, const MethodInfo* method_info);
bool PlayerWork__get_Telescope (const MethodInfo* method_info);
void PlayerWork__set_Telescope (bool value, const MethodInfo* method_info);
bool PlayerWork__get_TelescopeReturn (const MethodInfo* method_info);
void PlayerWork__set_TelescopeReturn (bool value, const MethodInfo* method_info);
void PlayerWork__SetPlayerStatus (int32_t selectIndex, System_String_o* name, const MethodInfo* method_info);
void PlayerWork__SetPlayerStatus (bool sex, int32_t colorId, System_String_o* name, const MethodInfo* method_info);
DPData_CON_PHOTO_DATA_o PlayerWork__GetPhotoDataByCategoryID (int32_t categoryID, const MethodInfo* method_info);
void PlayerWork__SetPhotoDataByCategoryID (int32_t categoryID, DPData_CON_PHOTO_DATA_o newData, const MethodInfo* method_info);
int32_t PlayerWork__GetPhotoLangIdByCategoryID (int32_t categoryID, const MethodInfo* method_info);
DPData_UgSaveData_o PlayerWork__get_ugSaveData (const MethodInfo* method_info);
void PlayerWork__set_ugSaveData (DPData_UgSaveData_o value, const MethodInfo* method_info);
int32_t PlayerWork__get_ReturnZoneID (const MethodInfo* method_info);
void PlayerWork__set_ReturnZoneID (int32_t value, const MethodInfo* method_info);
int32_t PlayerWork__get_ReturnUgZoneID (const MethodInfo* method_info);
void PlayerWork__set_ReturnUgZoneID (int32_t value, const MethodInfo* method_info);
UnityEngine_Vector3_o PlayerWork__get_UgReturnPos (const MethodInfo* method_info);
void PlayerWork__set_UgReturnPos (UnityEngine_Vector3_o value, const MethodInfo* method_info);
DPData_UGRecord_o* PlayerWork__get_UgRecord (const MethodInfo* method_info);
DPData_UgCountRecord_o* PlayerWork__get_UgCountRecord (const MethodInfo* method_info);
DPData_PoffinSaveData_o PlayerWork__get_poffinSaveData (const MethodInfo* method_info);
int32_t PlayerWork__get_CookingCount (const MethodInfo* method_info);
void PlayerWork__set_CookingCount (int32_t value, const MethodInfo* method_info);
bool PlayerWork__get_FieldCacheFlag (const MethodInfo* method_info);
void PlayerWork__set_FieldCacheFlag (bool value, const MethodInfo* method_info);
int32_t PlayerWork__get_SafariBallNum (const MethodInfo* method_info);
void PlayerWork__set_SafariBallNum (int32_t value, const MethodInfo* method_info);
int32_t PlayerWork__get_SafariStepCount (const MethodInfo* method_info);
void PlayerWork__set_SafariStepCount (int32_t value, const MethodInfo* method_info);
System_Collections_Generic_List_MonsNo__o* PlayerWork__get_SafariCaptureMonsNo (const MethodInfo* method_info);
void PlayerWork__set_SafariCaptureMonsNo (System_Collections_Generic_List_MonsNo__o* value, const MethodInfo* method_info);
int32_t PlayerWork__get_IsCpuBoostMode (const MethodInfo* method_info);
void PlayerWork__set_IsCpuBoostMode (int32_t value, const MethodInfo* method_info);
Dpr_Item_ItemInfo_o* PlayerWork__get_UsedFieldItem (const MethodInfo* method_info);
void PlayerWork__set_UsedFieldItem (Dpr_Item_ItemInfo_o* value, const MethodInfo* method_info);
int32_t PlayerWork__get_UsedFieldWazaNo (const MethodInfo* method_info);
void PlayerWork__set_UsedFieldWazaNo (int32_t value, const MethodInfo* method_info);
int32_t PlayerWork__get_UsedFieldWazaTemotiNo (const MethodInfo* method_info);
void PlayerWork__set_UsedFieldWazaTemotiNo (int32_t value, const MethodInfo* method_info);
bool PlayerWork__get_Kiribarai (const MethodInfo* method_info);
void PlayerWork__set_Kiribarai (bool value, const MethodInfo* method_info);
bool PlayerWork__get_Flash (const MethodInfo* method_info);
void PlayerWork__set_Flash (bool value, const MethodInfo* method_info);
DPData_SYSTEMDATA_o PlayerWork__get_SystemData (const MethodInfo* method_info);
void PlayerWork__set_SystemData (DPData_SYSTEMDATA_o value, const MethodInfo* method_info);
bool PlayerWork__get_PoketchOpen (const MethodInfo* method_info);
void PlayerWork__set_PoketchOpen (bool value, const MethodInfo* method_info);
DPData_POKETCH_DATA_o PlayerWork__get_PoketchData (const MethodInfo* method_info);
void PlayerWork__set_PoketchData (DPData_POKETCH_DATA_o value, const MethodInfo* method_info);
uint32_t PlayerWork__get_PoketchPedometer (const MethodInfo* method_info);
void PlayerWork__set_PoketchPedometer (uint32_t value, const MethodInfo* method_info);
int32_t PlayerWork__get_TureWalkMemberIndex (const MethodInfo* method_info);
void PlayerWork__set_TureWalkMemberIndex (int32_t value, const MethodInfo* method_info);
AzukariyaData_o* PlayerWork__get_AzukariyaData (const MethodInfo* method_info);
bool PlayerWork__get_IsMovePokemon (const MethodInfo* method_info);
int32_t PlayerWork__get_MovePokemonIndex (const MethodInfo* method_info);
void PlayerWork__set_MovePokemonIndex (int32_t value, const MethodInfo* method_info);
bool PlayerWork__get_IsD26Key (const MethodInfo* method_info);
void PlayerWork__set_IsD26Key (bool value, const MethodInfo* method_info);
DPData__DENDOU_SAVEDATA_o PlayerWork__get_dendoudata (const MethodInfo* method_info);
void PlayerWork__set_dendoudata (DPData__DENDOU_SAVEDATA_o value, const MethodInfo* method_info);
DPData_BadgeSaveData_o PlayerWork__get_BadgeData (const MethodInfo* method_info);
void PlayerWork__set_BadgeData (DPData_BadgeSaveData_o value, const MethodInfo* method_info);
int32_t PlayerWork__GetTrainerRank (const MethodInfo* method_info);
void PlayerWork__set_natuki_walkcnt (int32_t value, const MethodInfo* method_info);
int32_t PlayerWork__get_natuki_walkcnt (const MethodInfo* method_info);
void PlayerWork__set_boukenNote (DPData_BoukenNote_o value, const MethodInfo* method_info);
DPData_BoukenNote_o PlayerWork__get_boukenNote (const MethodInfo* method_info);
void PlayerWork__set_tvData (DPData_TV_DATA_o value, const MethodInfo* method_info);
DPData_TV_DATA_o PlayerWork__get_tvData (const MethodInfo* method_info);
void PlayerWork__set_unionSaveData (DPData_UnionSaveData_o value, const MethodInfo* method_info);
DPData_UnionSaveData_o PlayerWork__get_unionSaveData (const MethodInfo* method_info);
DPData_MysteryGiftSaveData_o PlayerWork__get_MysteryGiftData (const MethodInfo* method_info);
void PlayerWork__set_MysteryGiftData (DPData_MysteryGiftSaveData_o value, const MethodInfo* method_info);
void PlayerWork__set_zukanPersonalRndData (DPData_ZUKAN_PERSONAL_RND_DATA_o value, const MethodInfo* method_info);
DPData_ZUKAN_PERSONAL_RND_DATA_o PlayerWork__get_zukanPersonalRndData (const MethodInfo* method_info);
bool PlayerWork__IsEasyInput (const MethodInfo* method_info);
void PlayerWork__set_poketoreCountArray (DPData_POKETCH_POKETORE_COUNT_ARRAY_o value, const MethodInfo* method_info);
DPData_POKETCH_POKETORE_COUNT_ARRAY_o PlayerWork__get_poketoreCountArray (const MethodInfo* method_info);
void PlayerWork__set_dendouSaveAdd (DPData_DENDOU_SAVE_ADD_o value, const MethodInfo* method_info);
DPData_DENDOU_SAVE_ADD_o PlayerWork__get_dendouSaveAdd (const MethodInfo* method_info);
void PlayerWork__set_reBuffNameData (ReBuffnameData_o value, const MethodInfo* method_info);
ReBuffnameData_o PlayerWork__get_reBuffNameData (const MethodInfo* method_info);
bool PlayerWork__VerifySaveData (System_Byte_array* byteArray, const MethodInfo* method_info);
void PlayerWork__makeSaveDataHash (PlayerWork_o* __this, System_Byte_array** buf, const MethodInfo* method_info);
int32_t PlayerWork__GetLoadResult (const MethodInfo* method_info);
void PlayerWork__TakeOverOldVersion (const MethodInfo* method_info);
bool PlayerWork__IsAutoSaveSystemBusy (const MethodInfo* method_info);
void PlayerWork__AutoSave (bool mainsave, bool backup, const MethodInfo* method_info);
System_Collections_IEnumerator_o* PlayerWork__AutoSaveCoroutine (bool mainsave, bool backup, const MethodInfo* method_info);
System_Collections_IEnumerator_o* PlayerWork__AutoSaveWindowAnime (PlayerWork_o* __this, const MethodInfo* method_info);
void PlayerWork__CheckMoveAfterSaveGrid (UnityEngine_Vector2Int_o* pos, const MethodInfo* method_info);
bool PlayerWork__IsMyPokemon (Pml_PokePara_CoreParam_o* poke, const MethodInfo* method_info);
void PlayerWork__set_playReportData (PLAYREPORT_DATA_o value, const MethodInfo* method_info);
PLAYREPORT_DATA_o PlayerWork__get_playReportData (const MethodInfo* method_info);
PLAYREPORT_DATA_o* PlayerWork__get_playReportDataRef (const MethodInfo* method_info);
void PlayerWork__FixPokemonExpAll (const MethodInfo* method_info);
bool PlayerWork__FixPokemonExp (Pml_PokePara_PokemonParam_o* pp, const MethodInfo* method_info);
void PlayerWork__CheckDameTamago (const MethodInfo* method_info);
void PlayerWork___ctor (PlayerWork_o* __this, const MethodInfo* method_info);
void PlayerWork___cctor (const MethodInfo* method_info);
System_Nullable_LOCATION_WORK__o PlayerWork___SetWarp_g__GetLocationWork_47_0 (PlayerWork___c__DisplayClass47_0_o* , const MethodInfo* method_info);
void PlayerWork___AutoSaveWindowAnime_b__500_0 (PlayerWork_o* __this, Dpr_UI_UIWindow_o* window, const MethodInfo* method_info);
